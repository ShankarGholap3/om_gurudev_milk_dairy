// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/MotorControl.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/MotorControl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace analogic {
namespace ancp00 {

namespace {

const ::google::protobuf::Descriptor* MotorControlMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MotorControlMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MotorControlMsg_MotorControlCommand_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MotorControlMsg_Mode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MotorControlStatusMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MotorControlStatusMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MotorControlStatusMsg_MotorControlState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MotorControlStatusMsg_MotorControlSubstate_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MotorControlEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MotorControlEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MotorControlEvent_EVENT_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fMotorControl_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fMotorControl_2eproto() {
  protobuf_AddDesc_proto_2fMotorControl_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/MotorControl.proto");
  GOOGLE_CHECK(file != NULL);
  MotorControlMsg_descriptor_ = file->message_type(0);
  static const int MotorControlMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlMsg, cmd_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlMsg, mode_),
  };
  MotorControlMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MotorControlMsg_descriptor_,
      MotorControlMsg::default_instance_,
      MotorControlMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(MotorControlMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlMsg, _is_default_instance_));
  MotorControlMsg_MotorControlCommand_descriptor_ = MotorControlMsg_descriptor_->enum_type(0);
  MotorControlMsg_Mode_descriptor_ = MotorControlMsg_descriptor_->enum_type(1);
  MotorControlStatusMsg_descriptor_ = file->message_type(1);
  static const int MotorControlStatusMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlStatusMsg, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlStatusMsg, substate_),
  };
  MotorControlStatusMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MotorControlStatusMsg_descriptor_,
      MotorControlStatusMsg::default_instance_,
      MotorControlStatusMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(MotorControlStatusMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlStatusMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlStatusMsg, _is_default_instance_));
  MotorControlStatusMsg_MotorControlState_descriptor_ = MotorControlStatusMsg_descriptor_->enum_type(0);
  MotorControlStatusMsg_MotorControlSubstate_descriptor_ = MotorControlStatusMsg_descriptor_->enum_type(1);
  MotorControlEvent_descriptor_ = file->message_type(2);
  static const int MotorControlEvent_offsets_[1] = {
  };
  MotorControlEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MotorControlEvent_descriptor_,
      MotorControlEvent::default_instance_,
      MotorControlEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(MotorControlEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorControlEvent, _is_default_instance_));
  MotorControlEvent_EVENT_ID_descriptor_ = MotorControlEvent_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fMotorControl_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MotorControlMsg_descriptor_, &MotorControlMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MotorControlStatusMsg_descriptor_, &MotorControlStatusMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MotorControlEvent_descriptor_, &MotorControlEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fMotorControl_2eproto() {
  delete MotorControlMsg::default_instance_;
  delete MotorControlMsg_reflection_;
  delete MotorControlStatusMsg::default_instance_;
  delete MotorControlStatusMsg_reflection_;
  delete MotorControlEvent::default_instance_;
  delete MotorControlEvent_reflection_;
}

void protobuf_AddDesc_proto_2fMotorControl_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fMotorControl_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030proto/MotorControl.proto\022\017analogic.anc"
    "p00\"\232\002\n\017MotorControlMsg\022D\n\006cmd_id\030\001 \001(\0162"
    "4.analogic.ancp00.MotorControlMsg.MotorC"
    "ontrolCommand\0223\n\004mode\030\002 \001(\0162%.analogic.a"
    "ncp00.MotorControlMsg.Mode\"j\n\023MotorContr"
    "olCommand\022\007\n\003RUN\020\000\022\010\n\004STOP\020\001\022\t\n\005RESET\020\002\022"
    "\017\n\013RUN_REVERSE\020\003\022\014\n\010SET_HOME\020\004\022\n\n\006RUN_2X"
    "\020\005\022\n\n\006RUN_3X\020\006\" \n\004Mode\022\n\n\006NORMAL\020\000\022\014\n\010PA"
    "SSTHRU\020\001\"\323\002\n\025MotorControlStatusMsg\022G\n\005st"
    "ate\030\001 \001(\01628.analogic.ancp00.MotorControl"
    "StatusMsg.MotorControlState\022M\n\010substate\030"
    "\002 \001(\0162;.analogic.ancp00.MotorControlStat"
    "usMsg.MotorControlSubstate\"o\n\021MotorContr"
    "olState\022\n\n\006UNINIT\020\000\022\010\n\004IDLE\020\001\022\t\n\005ACCEL\020\002"
    "\022\013\n\007RUNNING\020\003\022\t\n\005DECEL\020\004\022\t\n\005FAULT\020\005\022\026\n\022R"
    "UNNING_IN_REVERSE\020\006\"1\n\024MotorControlSubst"
    "ate\022\014\n\010WO_ALARM\020\000\022\013\n\007W_ALARM\020\001\"\333\001\n\021Motor"
    "ControlEvent\"\305\001\n\010EVENT_ID\022\024\n\020INIT_COMPLE"
    "TE_ID\020\000\022\022\n\016RUN_COMMAND_ID\020\001\022\020\n\014RUN_ALARM"
    "_ID\020\002\022\026\n\022RUN_ALARM_CLEAR_ID\020\003\022\023\n\017STOP_CO"
    "MMAND_ID\020\004\022\025\n\021ACCEL_COMPLETE_ID\020\005\022\025\n\021DEC"
    "EL_COMPLETE_ID\020\006\022\014\n\010FAULT_ID\020\007\022\024\n\020RESET_"
    "COMMAND_ID\020\010b\006proto3", 900);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/MotorControl.proto", &protobuf_RegisterTypes);
  MotorControlMsg::default_instance_ = new MotorControlMsg();
  MotorControlStatusMsg::default_instance_ = new MotorControlStatusMsg();
  MotorControlEvent::default_instance_ = new MotorControlEvent();
  MotorControlMsg::default_instance_->InitAsDefaultInstance();
  MotorControlStatusMsg::default_instance_->InitAsDefaultInstance();
  MotorControlEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fMotorControl_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fMotorControl_2eproto {
  StaticDescriptorInitializer_proto_2fMotorControl_2eproto() {
    protobuf_AddDesc_proto_2fMotorControl_2eproto();
  }
} static_descriptor_initializer_proto_2fMotorControl_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* MotorControlMsg_MotorControlCommand_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlMsg_MotorControlCommand_descriptor_;
}
bool MotorControlMsg_MotorControlCommand_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MotorControlMsg_MotorControlCommand MotorControlMsg::RUN;
const MotorControlMsg_MotorControlCommand MotorControlMsg::STOP;
const MotorControlMsg_MotorControlCommand MotorControlMsg::RESET;
const MotorControlMsg_MotorControlCommand MotorControlMsg::RUN_REVERSE;
const MotorControlMsg_MotorControlCommand MotorControlMsg::SET_HOME;
const MotorControlMsg_MotorControlCommand MotorControlMsg::RUN_2X;
const MotorControlMsg_MotorControlCommand MotorControlMsg::RUN_3X;
const MotorControlMsg_MotorControlCommand MotorControlMsg::MotorControlCommand_MIN;
const MotorControlMsg_MotorControlCommand MotorControlMsg::MotorControlCommand_MAX;
const int MotorControlMsg::MotorControlCommand_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MotorControlMsg_Mode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlMsg_Mode_descriptor_;
}
bool MotorControlMsg_Mode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MotorControlMsg_Mode MotorControlMsg::NORMAL;
const MotorControlMsg_Mode MotorControlMsg::PASSTHRU;
const MotorControlMsg_Mode MotorControlMsg::Mode_MIN;
const MotorControlMsg_Mode MotorControlMsg::Mode_MAX;
const int MotorControlMsg::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotorControlMsg::kCmdIdFieldNumber;
const int MotorControlMsg::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotorControlMsg::MotorControlMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.MotorControlMsg)
}

void MotorControlMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MotorControlMsg::MotorControlMsg(const MotorControlMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.MotorControlMsg)
}

void MotorControlMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  cmd_id_ = 0;
  mode_ = 0;
}

MotorControlMsg::~MotorControlMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.MotorControlMsg)
  SharedDtor();
}

void MotorControlMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MotorControlMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotorControlMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlMsg_descriptor_;
}

const MotorControlMsg& MotorControlMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fMotorControl_2eproto();
  return *default_instance_;
}

MotorControlMsg* MotorControlMsg::default_instance_ = NULL;

MotorControlMsg* MotorControlMsg::New(::google::protobuf::Arena* arena) const {
  MotorControlMsg* n = new MotorControlMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotorControlMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.MotorControlMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MotorControlMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MotorControlMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(cmd_id_, mode_);

#undef ZR_HELPER_
#undef ZR_

}

bool MotorControlMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.MotorControlMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.MotorControlMsg.MotorControlCommand cmd_id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_id(static_cast< ::analogic::ancp00::MotorControlMsg_MotorControlCommand >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional .analogic.ancp00.MotorControlMsg.Mode mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::analogic::ancp00::MotorControlMsg_Mode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.MotorControlMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.MotorControlMsg)
  return false;
#undef DO_
}

void MotorControlMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.MotorControlMsg)
  // optional .analogic.ancp00.MotorControlMsg.MotorControlCommand cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_id(), output);
  }

  // optional .analogic.ancp00.MotorControlMsg.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.MotorControlMsg)
}

::google::protobuf::uint8* MotorControlMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.MotorControlMsg)
  // optional .analogic.ancp00.MotorControlMsg.MotorControlCommand cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_id(), target);
  }

  // optional .analogic.ancp00.MotorControlMsg.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.MotorControlMsg)
  return target;
}

int MotorControlMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.MotorControlMsg)
  int total_size = 0;

  // optional .analogic.ancp00.MotorControlMsg.MotorControlCommand cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_id());
  }

  // optional .analogic.ancp00.MotorControlMsg.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotorControlMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.MotorControlMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MotorControlMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MotorControlMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.MotorControlMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.MotorControlMsg)
    MergeFrom(*source);
  }
}

void MotorControlMsg::MergeFrom(const MotorControlMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.MotorControlMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void MotorControlMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.MotorControlMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotorControlMsg::CopyFrom(const MotorControlMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.MotorControlMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotorControlMsg::IsInitialized() const {

  return true;
}

void MotorControlMsg::Swap(MotorControlMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotorControlMsg::InternalSwap(MotorControlMsg* other) {
  std::swap(cmd_id_, other->cmd_id_);
  std::swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotorControlMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MotorControlMsg_descriptor_;
  metadata.reflection = MotorControlMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MotorControlMsg

// optional .analogic.ancp00.MotorControlMsg.MotorControlCommand cmd_id = 1;
void MotorControlMsg::clear_cmd_id() {
  cmd_id_ = 0;
}
 ::analogic::ancp00::MotorControlMsg_MotorControlCommand MotorControlMsg::cmd_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.MotorControlMsg.cmd_id)
  return static_cast< ::analogic::ancp00::MotorControlMsg_MotorControlCommand >(cmd_id_);
}
 void MotorControlMsg::set_cmd_id(::analogic::ancp00::MotorControlMsg_MotorControlCommand value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.MotorControlMsg.cmd_id)
}

// optional .analogic.ancp00.MotorControlMsg.Mode mode = 2;
void MotorControlMsg::clear_mode() {
  mode_ = 0;
}
 ::analogic::ancp00::MotorControlMsg_Mode MotorControlMsg::mode() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.MotorControlMsg.mode)
  return static_cast< ::analogic::ancp00::MotorControlMsg_Mode >(mode_);
}
 void MotorControlMsg::set_mode(::analogic::ancp00::MotorControlMsg_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.MotorControlMsg.mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* MotorControlStatusMsg_MotorControlState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlStatusMsg_MotorControlState_descriptor_;
}
bool MotorControlStatusMsg_MotorControlState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::UNINIT;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::IDLE;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::ACCEL;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::RUNNING;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::DECEL;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::FAULT;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::RUNNING_IN_REVERSE;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::MotorControlState_MIN;
const MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::MotorControlState_MAX;
const int MotorControlStatusMsg::MotorControlState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MotorControlStatusMsg_MotorControlSubstate_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlStatusMsg_MotorControlSubstate_descriptor_;
}
bool MotorControlStatusMsg_MotorControlSubstate_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MotorControlStatusMsg_MotorControlSubstate MotorControlStatusMsg::WO_ALARM;
const MotorControlStatusMsg_MotorControlSubstate MotorControlStatusMsg::W_ALARM;
const MotorControlStatusMsg_MotorControlSubstate MotorControlStatusMsg::MotorControlSubstate_MIN;
const MotorControlStatusMsg_MotorControlSubstate MotorControlStatusMsg::MotorControlSubstate_MAX;
const int MotorControlStatusMsg::MotorControlSubstate_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotorControlStatusMsg::kStateFieldNumber;
const int MotorControlStatusMsg::kSubstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotorControlStatusMsg::MotorControlStatusMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.MotorControlStatusMsg)
}

void MotorControlStatusMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MotorControlStatusMsg::MotorControlStatusMsg(const MotorControlStatusMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.MotorControlStatusMsg)
}

void MotorControlStatusMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  state_ = 0;
  substate_ = 0;
}

MotorControlStatusMsg::~MotorControlStatusMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.MotorControlStatusMsg)
  SharedDtor();
}

void MotorControlStatusMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MotorControlStatusMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotorControlStatusMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlStatusMsg_descriptor_;
}

const MotorControlStatusMsg& MotorControlStatusMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fMotorControl_2eproto();
  return *default_instance_;
}

MotorControlStatusMsg* MotorControlStatusMsg::default_instance_ = NULL;

MotorControlStatusMsg* MotorControlStatusMsg::New(::google::protobuf::Arena* arena) const {
  MotorControlStatusMsg* n = new MotorControlStatusMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotorControlStatusMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.MotorControlStatusMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MotorControlStatusMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MotorControlStatusMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(state_, substate_);

#undef ZR_HELPER_
#undef ZR_

}

bool MotorControlStatusMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.MotorControlStatusMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlState state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::analogic::ancp00::MotorControlStatusMsg_MotorControlState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_substate;
        break;
      }

      // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlSubstate substate = 2;
      case 2: {
        if (tag == 16) {
         parse_substate:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_substate(static_cast< ::analogic::ancp00::MotorControlStatusMsg_MotorControlSubstate >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.MotorControlStatusMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.MotorControlStatusMsg)
  return false;
#undef DO_
}

void MotorControlStatusMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.MotorControlStatusMsg)
  // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlState state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlSubstate substate = 2;
  if (this->substate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->substate(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.MotorControlStatusMsg)
}

::google::protobuf::uint8* MotorControlStatusMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.MotorControlStatusMsg)
  // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlState state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlSubstate substate = 2;
  if (this->substate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->substate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.MotorControlStatusMsg)
  return target;
}

int MotorControlStatusMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.MotorControlStatusMsg)
  int total_size = 0;

  // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional .analogic.ancp00.MotorControlStatusMsg.MotorControlSubstate substate = 2;
  if (this->substate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->substate());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotorControlStatusMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.MotorControlStatusMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MotorControlStatusMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MotorControlStatusMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.MotorControlStatusMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.MotorControlStatusMsg)
    MergeFrom(*source);
  }
}

void MotorControlStatusMsg::MergeFrom(const MotorControlStatusMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.MotorControlStatusMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.substate() != 0) {
    set_substate(from.substate());
  }
}

void MotorControlStatusMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.MotorControlStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotorControlStatusMsg::CopyFrom(const MotorControlStatusMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.MotorControlStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotorControlStatusMsg::IsInitialized() const {

  return true;
}

void MotorControlStatusMsg::Swap(MotorControlStatusMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotorControlStatusMsg::InternalSwap(MotorControlStatusMsg* other) {
  std::swap(state_, other->state_);
  std::swap(substate_, other->substate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotorControlStatusMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MotorControlStatusMsg_descriptor_;
  metadata.reflection = MotorControlStatusMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MotorControlStatusMsg

// optional .analogic.ancp00.MotorControlStatusMsg.MotorControlState state = 1;
void MotorControlStatusMsg::clear_state() {
  state_ = 0;
}
 ::analogic::ancp00::MotorControlStatusMsg_MotorControlState MotorControlStatusMsg::state() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.MotorControlStatusMsg.state)
  return static_cast< ::analogic::ancp00::MotorControlStatusMsg_MotorControlState >(state_);
}
 void MotorControlStatusMsg::set_state(::analogic::ancp00::MotorControlStatusMsg_MotorControlState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.MotorControlStatusMsg.state)
}

// optional .analogic.ancp00.MotorControlStatusMsg.MotorControlSubstate substate = 2;
void MotorControlStatusMsg::clear_substate() {
  substate_ = 0;
}
 ::analogic::ancp00::MotorControlStatusMsg_MotorControlSubstate MotorControlStatusMsg::substate() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.MotorControlStatusMsg.substate)
  return static_cast< ::analogic::ancp00::MotorControlStatusMsg_MotorControlSubstate >(substate_);
}
 void MotorControlStatusMsg::set_substate(::analogic::ancp00::MotorControlStatusMsg_MotorControlSubstate value) {
  
  substate_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.MotorControlStatusMsg.substate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* MotorControlEvent_EVENT_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlEvent_EVENT_ID_descriptor_;
}
bool MotorControlEvent_EVENT_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MotorControlEvent_EVENT_ID MotorControlEvent::INIT_COMPLETE_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::RUN_COMMAND_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::RUN_ALARM_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::RUN_ALARM_CLEAR_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::STOP_COMMAND_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::ACCEL_COMPLETE_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::DECEL_COMPLETE_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::FAULT_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::RESET_COMMAND_ID;
const MotorControlEvent_EVENT_ID MotorControlEvent::EVENT_ID_MIN;
const MotorControlEvent_EVENT_ID MotorControlEvent::EVENT_ID_MAX;
const int MotorControlEvent::EVENT_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotorControlEvent::MotorControlEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.MotorControlEvent)
}

void MotorControlEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MotorControlEvent::MotorControlEvent(const MotorControlEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.MotorControlEvent)
}

void MotorControlEvent::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MotorControlEvent::~MotorControlEvent() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.MotorControlEvent)
  SharedDtor();
}

void MotorControlEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MotorControlEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotorControlEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorControlEvent_descriptor_;
}

const MotorControlEvent& MotorControlEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fMotorControl_2eproto();
  return *default_instance_;
}

MotorControlEvent* MotorControlEvent::default_instance_ = NULL;

MotorControlEvent* MotorControlEvent::New(::google::protobuf::Arena* arena) const {
  MotorControlEvent* n = new MotorControlEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotorControlEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.MotorControlEvent)
}

bool MotorControlEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.MotorControlEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.MotorControlEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.MotorControlEvent)
  return false;
#undef DO_
}

void MotorControlEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.MotorControlEvent)
  // @@protoc_insertion_point(serialize_end:analogic.ancp00.MotorControlEvent)
}

::google::protobuf::uint8* MotorControlEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.MotorControlEvent)
  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.MotorControlEvent)
  return target;
}

int MotorControlEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.MotorControlEvent)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotorControlEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.MotorControlEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MotorControlEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MotorControlEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.MotorControlEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.MotorControlEvent)
    MergeFrom(*source);
  }
}

void MotorControlEvent::MergeFrom(const MotorControlEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.MotorControlEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void MotorControlEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.MotorControlEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotorControlEvent::CopyFrom(const MotorControlEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.MotorControlEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotorControlEvent::IsInitialized() const {

  return true;
}

void MotorControlEvent::Swap(MotorControlEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotorControlEvent::InternalSwap(MotorControlEvent* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotorControlEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MotorControlEvent_descriptor_;
  metadata.reflection = MotorControlEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MotorControlEvent

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ancp00
}  // namespace analogic

// @@protoc_insertion_point(global_scope)
