// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/BagLifecycle.proto

#ifndef PROTOBUF_proto_2fBagLifecycle_2eproto__INCLUDED
#define PROTOBUF_proto_2fBagLifecycle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/CalService.pb.h"
// @@protoc_insertion_point(includes)

namespace analogic {
namespace ancp00 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

class BagEvent;
class BlmInternalMsg;
class BlmStatusMsg;
class BlmToScannerMsg;
class CalServerToBlmMsg;
class DetectionMsg;
class DetectionStatusMsg;
class ScannerToBlmMsg;

enum BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID {
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BAG_START_ALGO_REQ = 0,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_ASK_AIR_REQ = 1,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_ASK_OFFSET_REQ = 2,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_NEED_AIR_REQ = 3,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_NEED_OFFSET_REQ = 4,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_WANT_AIR_REQ = 5,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_WANT_OFFSET_REQ = 6,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_IsValid(int value);
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BLM_TO_SCANNER_CMD_ID_MIN = BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BAG_START_ALGO_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BLM_TO_SCANNER_CMD_ID_MAX = BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_WANT_OFFSET_REQ;
const int BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BLM_TO_SCANNER_CMD_ID_ARRAYSIZE = BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BLM_TO_SCANNER_CMD_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor();
inline const ::std::string& BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_Name(BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor(), value);
}
inline bool BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_Parse(
    const ::std::string& name, BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID>(
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor(), name, value);
}
enum ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID {
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_AIR_CAL_REQ = 0,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_OFFSET_CAL_REQ = 1,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_RAW_DATA_COLLECT = 2,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IMAGE_QUALITY_START = 3,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IMAGE_QUALITY_END = 4,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_AIR_CAL_NZC_REQ = 5,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_BLM_FLUSH = 6,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNING = 7,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_NOT_SCANNING = 8,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IsValid(int value);
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MIN = ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_AIR_CAL_REQ;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MAX = ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_NOT_SCANNING;
const int ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_ARRAYSIZE = ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor();
inline const ::std::string& ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_Name(ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor(), value);
}
inline bool ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_Parse(
    const ::std::string& name, ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID>(
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor(), name, value);
}
enum BlmInternalMsg_BLM_INTERNAL_CMD {
  BlmInternalMsg_BLM_INTERNAL_CMD_BOGUS_PLACE_HOLDER = 0,
  BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_OFFSET_DATA = 1,
  BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_AIR_DATA = 2,
  BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_BAG_START = 3,
  BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_BAG_STOP = 4,
  BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_BAG_STOP_PADDED = 5,
  BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_RAW_DATA_DONE = 6,
  BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_AIR_DATA_VALIDATION = 7,
  BlmInternalMsg_BLM_INTERNAL_CMD_UPDATE_BAGOMETER = 8,
  BlmInternalMsg_BLM_INTERNAL_CMD_BlmInternalMsg_BLM_INTERNAL_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BlmInternalMsg_BLM_INTERNAL_CMD_BlmInternalMsg_BLM_INTERNAL_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BlmInternalMsg_BLM_INTERNAL_CMD_IsValid(int value);
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg_BLM_INTERNAL_CMD_BLM_INTERNAL_CMD_MIN = BlmInternalMsg_BLM_INTERNAL_CMD_BOGUS_PLACE_HOLDER;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg_BLM_INTERNAL_CMD_BLM_INTERNAL_CMD_MAX = BlmInternalMsg_BLM_INTERNAL_CMD_UPDATE_BAGOMETER;
const int BlmInternalMsg_BLM_INTERNAL_CMD_BLM_INTERNAL_CMD_ARRAYSIZE = BlmInternalMsg_BLM_INTERNAL_CMD_BLM_INTERNAL_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* BlmInternalMsg_BLM_INTERNAL_CMD_descriptor();
inline const ::std::string& BlmInternalMsg_BLM_INTERNAL_CMD_Name(BlmInternalMsg_BLM_INTERNAL_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    BlmInternalMsg_BLM_INTERNAL_CMD_descriptor(), value);
}
inline bool BlmInternalMsg_BLM_INTERNAL_CMD_Parse(
    const ::std::string& name, BlmInternalMsg_BLM_INTERNAL_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BlmInternalMsg_BLM_INTERNAL_CMD>(
    BlmInternalMsg_BLM_INTERNAL_CMD_descriptor(), name, value);
}
enum BagEvent_BAG_EVENT_ID {
  BagEvent_BAG_EVENT_ID_BAG_CREATE = 0,
  BagEvent_BAG_EVENT_ID_BAG_SLICES_AVAILABLE = 1,
  BagEvent_BAG_EVENT_ID_BAG_AVAILABLE = 2,
  BagEvent_BAG_EVENT_ID_BAG_DETECTION_CANCEL = 3,
  BagEvent_BAG_EVENT_ID_BAG_DETECTION_COMPLETE = 4,
  BagEvent_BAG_EVENT_ID_BAG_ARCHIVAL_DONE = 5,
  BagEvent_BAG_EVENT_ID_BAG_NIM_DONE = 6,
  BagEvent_BAG_EVENT_ID_BAG_PVS_DECISION = 7,
  BagEvent_BAG_EVENT_ID_BAG_SWS_DECISION = 8,
  BagEvent_BAG_EVENT_ID_BagEvent_BAG_EVENT_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BagEvent_BAG_EVENT_ID_BagEvent_BAG_EVENT_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BagEvent_BAG_EVENT_ID_IsValid(int value);
const BagEvent_BAG_EVENT_ID BagEvent_BAG_EVENT_ID_BAG_EVENT_ID_MIN = BagEvent_BAG_EVENT_ID_BAG_CREATE;
const BagEvent_BAG_EVENT_ID BagEvent_BAG_EVENT_ID_BAG_EVENT_ID_MAX = BagEvent_BAG_EVENT_ID_BAG_SWS_DECISION;
const int BagEvent_BAG_EVENT_ID_BAG_EVENT_ID_ARRAYSIZE = BagEvent_BAG_EVENT_ID_BAG_EVENT_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* BagEvent_BAG_EVENT_ID_descriptor();
inline const ::std::string& BagEvent_BAG_EVENT_ID_Name(BagEvent_BAG_EVENT_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    BagEvent_BAG_EVENT_ID_descriptor(), value);
}
inline bool BagEvent_BAG_EVENT_ID_Parse(
    const ::std::string& name, BagEvent_BAG_EVENT_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BagEvent_BAG_EVENT_ID>(
    BagEvent_BAG_EVENT_ID_descriptor(), name, value);
}
enum DetectionMsg_DETECTION_CMD_ID {
  DetectionMsg_DETECTION_CMD_ID_QUERY_ALGORITHMS = 0,
  DetectionMsg_DETECTION_CMD_ID_SET_EMULATOR_MODE = 1,
  DetectionMsg_DETECTION_CMD_ID_DetectionMsg_DETECTION_CMD_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DetectionMsg_DETECTION_CMD_ID_DetectionMsg_DETECTION_CMD_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DetectionMsg_DETECTION_CMD_ID_IsValid(int value);
const DetectionMsg_DETECTION_CMD_ID DetectionMsg_DETECTION_CMD_ID_DETECTION_CMD_ID_MIN = DetectionMsg_DETECTION_CMD_ID_QUERY_ALGORITHMS;
const DetectionMsg_DETECTION_CMD_ID DetectionMsg_DETECTION_CMD_ID_DETECTION_CMD_ID_MAX = DetectionMsg_DETECTION_CMD_ID_SET_EMULATOR_MODE;
const int DetectionMsg_DETECTION_CMD_ID_DETECTION_CMD_ID_ARRAYSIZE = DetectionMsg_DETECTION_CMD_ID_DETECTION_CMD_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DetectionMsg_DETECTION_CMD_ID_descriptor();
inline const ::std::string& DetectionMsg_DETECTION_CMD_ID_Name(DetectionMsg_DETECTION_CMD_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DetectionMsg_DETECTION_CMD_ID_descriptor(), value);
}
inline bool DetectionMsg_DETECTION_CMD_ID_Parse(
    const ::std::string& name, DetectionMsg_DETECTION_CMD_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectionMsg_DETECTION_CMD_ID>(
    DetectionMsg_DETECTION_CMD_ID_descriptor(), name, value);
}
enum DetectionStatusMsg_DETECTION_STATUS_ID {
  DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_NOT_USED = 0,
  DetectionStatusMsg_DETECTION_STATUS_ID_QPID_CONNECTION_STARTED = 100,
  DetectionStatusMsg_DETECTION_STATUS_ID_DCS_DD_INITIALIZED = 101,
  DetectionStatusMsg_DETECTION_STATUS_ID_DetectionStatusMsg_DETECTION_STATUS_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DetectionStatusMsg_DETECTION_STATUS_ID_DetectionStatusMsg_DETECTION_STATUS_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DetectionStatusMsg_DETECTION_STATUS_ID_IsValid(int value);
const DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_MIN = DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_NOT_USED;
const DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_MAX = DetectionStatusMsg_DETECTION_STATUS_ID_DCS_DD_INITIALIZED;
const int DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_ARRAYSIZE = DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DetectionStatusMsg_DETECTION_STATUS_ID_descriptor();
inline const ::std::string& DetectionStatusMsg_DETECTION_STATUS_ID_Name(DetectionStatusMsg_DETECTION_STATUS_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DetectionStatusMsg_DETECTION_STATUS_ID_descriptor(), value);
}
inline bool DetectionStatusMsg_DETECTION_STATUS_ID_Parse(
    const ::std::string& name, DetectionStatusMsg_DETECTION_STATUS_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectionStatusMsg_DETECTION_STATUS_ID>(
    DetectionStatusMsg_DETECTION_STATUS_ID_descriptor(), name, value);
}
enum CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID {
  CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_SET_OFFSET_CAL_TIME = 0,
  CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_SET_AIR_CAL_TIME = 1,
  CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_DYNAMIC_AIR_CAL_ERROR = 2,
  CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_DYNAMIC_OFFSET_CAL_ERROR = 3,
  CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_IsValid(int value);
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CAL_SERVER_TO_BLM_CMD_ID_MIN = CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_SET_OFFSET_CAL_TIME;
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CAL_SERVER_TO_BLM_CMD_ID_MAX = CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_DYNAMIC_OFFSET_CAL_ERROR;
const int CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CAL_SERVER_TO_BLM_CMD_ID_ARRAYSIZE = CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CAL_SERVER_TO_BLM_CMD_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor();
inline const ::std::string& CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_Name(CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor(), value);
}
inline bool CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_Parse(
    const ::std::string& name, CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID>(
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor(), name, value);
}
// ===================================================================

class BlmToScannerMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BlmToScannerMsg) */ {
 public:
  BlmToScannerMsg();
  virtual ~BlmToScannerMsg();

  BlmToScannerMsg(const BlmToScannerMsg& from);

  inline BlmToScannerMsg& operator=(const BlmToScannerMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlmToScannerMsg& default_instance();

  void Swap(BlmToScannerMsg* other);

  // implements Message ----------------------------------------------

  inline BlmToScannerMsg* New() const { return New(NULL); }

  BlmToScannerMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlmToScannerMsg& from);
  void MergeFrom(const BlmToScannerMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlmToScannerMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BLM_TO_SCANNER_CMD_ID;
  static const BLM_TO_SCANNER_CMD_ID BAG_START_ALGO_REQ =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BAG_START_ALGO_REQ;
  static const BLM_TO_SCANNER_CMD_ID DYNAMIC_CAL_ASK_AIR_REQ =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_ASK_AIR_REQ;
  static const BLM_TO_SCANNER_CMD_ID DYNAMIC_CAL_ASK_OFFSET_REQ =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_ASK_OFFSET_REQ;
  static const BLM_TO_SCANNER_CMD_ID DYNAMIC_CAL_NEED_AIR_REQ =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_NEED_AIR_REQ;
  static const BLM_TO_SCANNER_CMD_ID DYNAMIC_CAL_NEED_OFFSET_REQ =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_NEED_OFFSET_REQ;
  static const BLM_TO_SCANNER_CMD_ID DYNAMIC_CAL_WANT_AIR_REQ =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_WANT_AIR_REQ;
  static const BLM_TO_SCANNER_CMD_ID DYNAMIC_CAL_WANT_OFFSET_REQ =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_DYNAMIC_CAL_WANT_OFFSET_REQ;
  static inline bool BLM_TO_SCANNER_CMD_ID_IsValid(int value) {
    return BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_IsValid(value);
  }
  static const BLM_TO_SCANNER_CMD_ID BLM_TO_SCANNER_CMD_ID_MIN =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BLM_TO_SCANNER_CMD_ID_MIN;
  static const BLM_TO_SCANNER_CMD_ID BLM_TO_SCANNER_CMD_ID_MAX =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BLM_TO_SCANNER_CMD_ID_MAX;
  static const int BLM_TO_SCANNER_CMD_ID_ARRAYSIZE =
    BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_BLM_TO_SCANNER_CMD_ID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BLM_TO_SCANNER_CMD_ID_descriptor() {
    return BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor();
  }
  static inline const ::std::string& BLM_TO_SCANNER_CMD_ID_Name(BLM_TO_SCANNER_CMD_ID value) {
    return BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_Name(value);
  }
  static inline bool BLM_TO_SCANNER_CMD_ID_Parse(const ::std::string& name,
      BLM_TO_SCANNER_CMD_ID* value) {
    return BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID cmd_id = 1;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID cmd_id() const;
  void set_cmd_id(::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID value);

  // optional uint64 bag_buffer_index = 2;
  void clear_bag_buffer_index();
  static const int kBagBufferIndexFieldNumber = 2;
  ::google::protobuf::uint64 bag_buffer_index() const;
  void set_bag_buffer_index(::google::protobuf::uint64 value);

  // optional string bag_basename = 3;
  void clear_bag_basename();
  static const int kBagBasenameFieldNumber = 3;
  const ::std::string& bag_basename() const;
  void set_bag_basename(const ::std::string& value);
  void set_bag_basename(const char* value);
  void set_bag_basename(const char* value, size_t size);
  ::std::string* mutable_bag_basename();
  ::std::string* release_bag_basename();
  void set_allocated_bag_basename(::std::string* bag_basename);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BlmToScannerMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 bag_buffer_index_;
  ::google::protobuf::internal::ArenaStringPtr bag_basename_;
  int cmd_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static BlmToScannerMsg* default_instance_;
};
// -------------------------------------------------------------------

class ScannerToBlmMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.ScannerToBlmMsg) */ {
 public:
  ScannerToBlmMsg();
  virtual ~ScannerToBlmMsg();

  ScannerToBlmMsg(const ScannerToBlmMsg& from);

  inline ScannerToBlmMsg& operator=(const ScannerToBlmMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScannerToBlmMsg& default_instance();

  void Swap(ScannerToBlmMsg* other);

  // implements Message ----------------------------------------------

  inline ScannerToBlmMsg* New() const { return New(NULL); }

  ScannerToBlmMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScannerToBlmMsg& from);
  void MergeFrom(const ScannerToBlmMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScannerToBlmMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID SCANNER_TO_BAG_LIFECYCLE_CMD_ID;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID AIR_CAL_REQ =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_AIR_CAL_REQ;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID OFFSET_CAL_REQ =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_OFFSET_CAL_REQ;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID RAW_DATA_COLLECT =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_RAW_DATA_COLLECT;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID IMAGE_QUALITY_START =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IMAGE_QUALITY_START;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID IMAGE_QUALITY_END =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IMAGE_QUALITY_END;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID AIR_CAL_NZC_REQ =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_AIR_CAL_NZC_REQ;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID BLM_FLUSH =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_BLM_FLUSH;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID SCANNING =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNING;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID NOT_SCANNING =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_NOT_SCANNING;
  static inline bool SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IsValid(int value) {
    return ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IsValid(value);
  }
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MIN =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MIN;
  static const SCANNER_TO_BAG_LIFECYCLE_CMD_ID SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MAX =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MAX;
  static const int SCANNER_TO_BAG_LIFECYCLE_CMD_ID_ARRAYSIZE =
    ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor() {
    return ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor();
  }
  static inline const ::std::string& SCANNER_TO_BAG_LIFECYCLE_CMD_ID_Name(SCANNER_TO_BAG_LIFECYCLE_CMD_ID value) {
    return ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_Name(value);
  }
  static inline bool SCANNER_TO_BAG_LIFECYCLE_CMD_ID_Parse(const ::std::string& name,
      SCANNER_TO_BAG_LIFECYCLE_CMD_ID* value) {
    return ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.ScannerToBlmMsg.SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id = 1;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id() const;
  void set_cmd_id(::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID value);

  // optional uint32 num_rotations = 2;
  void clear_num_rotations();
  static const int kNumRotationsFieldNumber = 2;
  ::google::protobuf::uint32 num_rotations() const;
  void set_num_rotations(::google::protobuf::uint32 value);

  // optional string dest_folder = 3;
  void clear_dest_folder();
  static const int kDestFolderFieldNumber = 3;
  const ::std::string& dest_folder() const;
  void set_dest_folder(const ::std::string& value);
  void set_dest_folder(const char* value);
  void set_dest_folder(const char* value, size_t size);
  ::std::string* mutable_dest_folder();
  ::std::string* release_dest_folder();
  void set_allocated_dest_folder(::std::string* dest_folder);

  // optional string file_name = 4;
  void clear_file_name();
  static const int kFileNameFieldNumber = 4;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional float float_data_1 = 5;
  void clear_float_data_1();
  static const int kFloatData1FieldNumber = 5;
  float float_data_1() const;
  void set_float_data_1(float value);

  // optional float float_data_2 = 6;
  void clear_float_data_2();
  static const int kFloatData2FieldNumber = 6;
  float float_data_2() const;
  void set_float_data_2(float value);

  // optional float float_data_3 = 7;
  void clear_float_data_3();
  static const int kFloatData3FieldNumber = 7;
  float float_data_3() const;
  void set_float_data_3(float value);

  // optional string source_user = 8;
  void clear_source_user();
  static const int kSourceUserFieldNumber = 8;
  const ::std::string& source_user() const;
  void set_source_user(const ::std::string& value);
  void set_source_user(const char* value);
  void set_source_user(const char* value, size_t size);
  ::std::string* mutable_source_user();
  ::std::string* release_source_user();
  void set_allocated_source_user(::std::string* source_user);

  // optional .analogic.ImageQualityTestRpc.IQ_TEST_TYPE iq_test_type = 9;
  void clear_iq_test_type();
  static const int kIqTestTypeFieldNumber = 9;
  ::analogic::ImageQualityTestRpc_IQ_TEST_TYPE iq_test_type() const;
  void set_iq_test_type(::analogic::ImageQualityTestRpc_IQ_TEST_TYPE value);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.ScannerToBlmMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int cmd_id_;
  ::google::protobuf::uint32 num_rotations_;
  ::google::protobuf::internal::ArenaStringPtr dest_folder_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  float float_data_1_;
  float float_data_2_;
  ::google::protobuf::internal::ArenaStringPtr source_user_;
  float float_data_3_;
  int iq_test_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static ScannerToBlmMsg* default_instance_;
};
// -------------------------------------------------------------------

class BlmInternalMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BlmInternalMsg) */ {
 public:
  BlmInternalMsg();
  virtual ~BlmInternalMsg();

  BlmInternalMsg(const BlmInternalMsg& from);

  inline BlmInternalMsg& operator=(const BlmInternalMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlmInternalMsg& default_instance();

  void Swap(BlmInternalMsg* other);

  // implements Message ----------------------------------------------

  inline BlmInternalMsg* New() const { return New(NULL); }

  BlmInternalMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlmInternalMsg& from);
  void MergeFrom(const BlmInternalMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlmInternalMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BlmInternalMsg_BLM_INTERNAL_CMD BLM_INTERNAL_CMD;
  static const BLM_INTERNAL_CMD BOGUS_PLACE_HOLDER =
    BlmInternalMsg_BLM_INTERNAL_CMD_BOGUS_PLACE_HOLDER;
  static const BLM_INTERNAL_CMD HANDLE_OFFSET_DATA =
    BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_OFFSET_DATA;
  static const BLM_INTERNAL_CMD HANDLE_AIR_DATA =
    BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_AIR_DATA;
  static const BLM_INTERNAL_CMD HANDLE_BAG_START =
    BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_BAG_START;
  static const BLM_INTERNAL_CMD HANDLE_BAG_STOP =
    BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_BAG_STOP;
  static const BLM_INTERNAL_CMD HANDLE_BAG_STOP_PADDED =
    BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_BAG_STOP_PADDED;
  static const BLM_INTERNAL_CMD HANDLE_RAW_DATA_DONE =
    BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_RAW_DATA_DONE;
  static const BLM_INTERNAL_CMD HANDLE_AIR_DATA_VALIDATION =
    BlmInternalMsg_BLM_INTERNAL_CMD_HANDLE_AIR_DATA_VALIDATION;
  static const BLM_INTERNAL_CMD UPDATE_BAGOMETER =
    BlmInternalMsg_BLM_INTERNAL_CMD_UPDATE_BAGOMETER;
  static inline bool BLM_INTERNAL_CMD_IsValid(int value) {
    return BlmInternalMsg_BLM_INTERNAL_CMD_IsValid(value);
  }
  static const BLM_INTERNAL_CMD BLM_INTERNAL_CMD_MIN =
    BlmInternalMsg_BLM_INTERNAL_CMD_BLM_INTERNAL_CMD_MIN;
  static const BLM_INTERNAL_CMD BLM_INTERNAL_CMD_MAX =
    BlmInternalMsg_BLM_INTERNAL_CMD_BLM_INTERNAL_CMD_MAX;
  static const int BLM_INTERNAL_CMD_ARRAYSIZE =
    BlmInternalMsg_BLM_INTERNAL_CMD_BLM_INTERNAL_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BLM_INTERNAL_CMD_descriptor() {
    return BlmInternalMsg_BLM_INTERNAL_CMD_descriptor();
  }
  static inline const ::std::string& BLM_INTERNAL_CMD_Name(BLM_INTERNAL_CMD value) {
    return BlmInternalMsg_BLM_INTERNAL_CMD_Name(value);
  }
  static inline bool BLM_INTERNAL_CMD_Parse(const ::std::string& name,
      BLM_INTERNAL_CMD* value) {
    return BlmInternalMsg_BLM_INTERNAL_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.BlmInternalMsg.BLM_INTERNAL_CMD cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD cmd() const;
  void set_cmd(::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD value);

  // optional uint64 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BlmInternalMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 index_;
  int cmd_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static BlmInternalMsg* default_instance_;
};
// -------------------------------------------------------------------

class BagEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BagEvent) */ {
 public:
  BagEvent();
  virtual ~BagEvent();

  BagEvent(const BagEvent& from);

  inline BagEvent& operator=(const BagEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagEvent& default_instance();

  void Swap(BagEvent* other);

  // implements Message ----------------------------------------------

  inline BagEvent* New() const { return New(NULL); }

  BagEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BagEvent& from);
  void MergeFrom(const BagEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BagEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BagEvent_BAG_EVENT_ID BAG_EVENT_ID;
  static const BAG_EVENT_ID BAG_CREATE =
    BagEvent_BAG_EVENT_ID_BAG_CREATE;
  static const BAG_EVENT_ID BAG_SLICES_AVAILABLE =
    BagEvent_BAG_EVENT_ID_BAG_SLICES_AVAILABLE;
  static const BAG_EVENT_ID BAG_AVAILABLE =
    BagEvent_BAG_EVENT_ID_BAG_AVAILABLE;
  static const BAG_EVENT_ID BAG_DETECTION_CANCEL =
    BagEvent_BAG_EVENT_ID_BAG_DETECTION_CANCEL;
  static const BAG_EVENT_ID BAG_DETECTION_COMPLETE =
    BagEvent_BAG_EVENT_ID_BAG_DETECTION_COMPLETE;
  static const BAG_EVENT_ID BAG_ARCHIVAL_DONE =
    BagEvent_BAG_EVENT_ID_BAG_ARCHIVAL_DONE;
  static const BAG_EVENT_ID BAG_NIM_DONE =
    BagEvent_BAG_EVENT_ID_BAG_NIM_DONE;
  static const BAG_EVENT_ID BAG_PVS_DECISION =
    BagEvent_BAG_EVENT_ID_BAG_PVS_DECISION;
  static const BAG_EVENT_ID BAG_SWS_DECISION =
    BagEvent_BAG_EVENT_ID_BAG_SWS_DECISION;
  static inline bool BAG_EVENT_ID_IsValid(int value) {
    return BagEvent_BAG_EVENT_ID_IsValid(value);
  }
  static const BAG_EVENT_ID BAG_EVENT_ID_MIN =
    BagEvent_BAG_EVENT_ID_BAG_EVENT_ID_MIN;
  static const BAG_EVENT_ID BAG_EVENT_ID_MAX =
    BagEvent_BAG_EVENT_ID_BAG_EVENT_ID_MAX;
  static const int BAG_EVENT_ID_ARRAYSIZE =
    BagEvent_BAG_EVENT_ID_BAG_EVENT_ID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BAG_EVENT_ID_descriptor() {
    return BagEvent_BAG_EVENT_ID_descriptor();
  }
  static inline const ::std::string& BAG_EVENT_ID_Name(BAG_EVENT_ID value) {
    return BagEvent_BAG_EVENT_ID_Name(value);
  }
  static inline bool BAG_EVENT_ID_Parse(const ::std::string& name,
      BAG_EVENT_ID* value) {
    return BagEvent_BAG_EVENT_ID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.BagEvent.BAG_EVENT_ID id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::analogic::ancp00::BagEvent_BAG_EVENT_ID id() const;
  void set_id(::analogic::ancp00::BagEvent_BAG_EVENT_ID value);

  // optional uint64 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BagEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 index_;
  int id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static BagEvent* default_instance_;
};
// -------------------------------------------------------------------

class DetectionMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.DetectionMsg) */ {
 public:
  DetectionMsg();
  virtual ~DetectionMsg();

  DetectionMsg(const DetectionMsg& from);

  inline DetectionMsg& operator=(const DetectionMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectionMsg& default_instance();

  void Swap(DetectionMsg* other);

  // implements Message ----------------------------------------------

  inline DetectionMsg* New() const { return New(NULL); }

  DetectionMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DetectionMsg& from);
  void MergeFrom(const DetectionMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DetectionMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DetectionMsg_DETECTION_CMD_ID DETECTION_CMD_ID;
  static const DETECTION_CMD_ID QUERY_ALGORITHMS =
    DetectionMsg_DETECTION_CMD_ID_QUERY_ALGORITHMS;
  static const DETECTION_CMD_ID SET_EMULATOR_MODE =
    DetectionMsg_DETECTION_CMD_ID_SET_EMULATOR_MODE;
  static inline bool DETECTION_CMD_ID_IsValid(int value) {
    return DetectionMsg_DETECTION_CMD_ID_IsValid(value);
  }
  static const DETECTION_CMD_ID DETECTION_CMD_ID_MIN =
    DetectionMsg_DETECTION_CMD_ID_DETECTION_CMD_ID_MIN;
  static const DETECTION_CMD_ID DETECTION_CMD_ID_MAX =
    DetectionMsg_DETECTION_CMD_ID_DETECTION_CMD_ID_MAX;
  static const int DETECTION_CMD_ID_ARRAYSIZE =
    DetectionMsg_DETECTION_CMD_ID_DETECTION_CMD_ID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DETECTION_CMD_ID_descriptor() {
    return DetectionMsg_DETECTION_CMD_ID_descriptor();
  }
  static inline const ::std::string& DETECTION_CMD_ID_Name(DETECTION_CMD_ID value) {
    return DetectionMsg_DETECTION_CMD_ID_Name(value);
  }
  static inline bool DETECTION_CMD_ID_Parse(const ::std::string& name,
      DETECTION_CMD_ID* value) {
    return DetectionMsg_DETECTION_CMD_ID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.DetectionMsg.DETECTION_CMD_ID id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID id() const;
  void set_id(::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID value);

  // optional bool is_response = 2;
  void clear_is_response();
  static const int kIsResponseFieldNumber = 2;
  bool is_response() const;
  void set_is_response(bool value);

  // optional string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.DetectionMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int id_;
  bool is_response_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static DetectionMsg* default_instance_;
};
// -------------------------------------------------------------------

class DetectionStatusMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.DetectionStatusMsg) */ {
 public:
  DetectionStatusMsg();
  virtual ~DetectionStatusMsg();

  DetectionStatusMsg(const DetectionStatusMsg& from);

  inline DetectionStatusMsg& operator=(const DetectionStatusMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectionStatusMsg& default_instance();

  void Swap(DetectionStatusMsg* other);

  // implements Message ----------------------------------------------

  inline DetectionStatusMsg* New() const { return New(NULL); }

  DetectionStatusMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DetectionStatusMsg& from);
  void MergeFrom(const DetectionStatusMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DetectionStatusMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DetectionStatusMsg_DETECTION_STATUS_ID DETECTION_STATUS_ID;
  static const DETECTION_STATUS_ID DETECTION_STATUS_ID_NOT_USED =
    DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_NOT_USED;
  static const DETECTION_STATUS_ID QPID_CONNECTION_STARTED =
    DetectionStatusMsg_DETECTION_STATUS_ID_QPID_CONNECTION_STARTED;
  static const DETECTION_STATUS_ID DCS_DD_INITIALIZED =
    DetectionStatusMsg_DETECTION_STATUS_ID_DCS_DD_INITIALIZED;
  static inline bool DETECTION_STATUS_ID_IsValid(int value) {
    return DetectionStatusMsg_DETECTION_STATUS_ID_IsValid(value);
  }
  static const DETECTION_STATUS_ID DETECTION_STATUS_ID_MIN =
    DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_MIN;
  static const DETECTION_STATUS_ID DETECTION_STATUS_ID_MAX =
    DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_MAX;
  static const int DETECTION_STATUS_ID_ARRAYSIZE =
    DetectionStatusMsg_DETECTION_STATUS_ID_DETECTION_STATUS_ID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DETECTION_STATUS_ID_descriptor() {
    return DetectionStatusMsg_DETECTION_STATUS_ID_descriptor();
  }
  static inline const ::std::string& DETECTION_STATUS_ID_Name(DETECTION_STATUS_ID value) {
    return DetectionStatusMsg_DETECTION_STATUS_ID_Name(value);
  }
  static inline bool DETECTION_STATUS_ID_Parse(const ::std::string& name,
      DETECTION_STATUS_ID* value) {
    return DetectionStatusMsg_DETECTION_STATUS_ID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.DetectionStatusMsg.DETECTION_STATUS_ID id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID id() const;
  void set_id(::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID value);

  // optional string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.DetectionStatusMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static DetectionStatusMsg* default_instance_;
};
// -------------------------------------------------------------------

class BlmStatusMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BlmStatusMsg) */ {
 public:
  BlmStatusMsg();
  virtual ~BlmStatusMsg();

  BlmStatusMsg(const BlmStatusMsg& from);

  inline BlmStatusMsg& operator=(const BlmStatusMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlmStatusMsg& default_instance();

  void Swap(BlmStatusMsg* other);

  // implements Message ----------------------------------------------

  inline BlmStatusMsg* New() const { return New(NULL); }

  BlmStatusMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlmStatusMsg& from);
  void MergeFrom(const BlmStatusMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BlmStatusMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bags_processed = 1;
  void clear_bags_processed();
  static const int kBagsProcessedFieldNumber = 1;
  ::google::protobuf::uint32 bags_processed() const;
  void set_bags_processed(::google::protobuf::uint32 value);

  // optional bool rtr = 2;
  void clear_rtr();
  static const int kRtrFieldNumber = 2;
  bool rtr() const;
  void set_rtr(bool value);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BlmStatusMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 bags_processed_;
  bool rtr_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static BlmStatusMsg* default_instance_;
};
// -------------------------------------------------------------------

class CalServerToBlmMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.CalServerToBlmMsg) */ {
 public:
  CalServerToBlmMsg();
  virtual ~CalServerToBlmMsg();

  CalServerToBlmMsg(const CalServerToBlmMsg& from);

  inline CalServerToBlmMsg& operator=(const CalServerToBlmMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalServerToBlmMsg& default_instance();

  void Swap(CalServerToBlmMsg* other);

  // implements Message ----------------------------------------------

  inline CalServerToBlmMsg* New() const { return New(NULL); }

  CalServerToBlmMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalServerToBlmMsg& from);
  void MergeFrom(const CalServerToBlmMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CalServerToBlmMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CAL_SERVER_TO_BLM_CMD_ID;
  static const CAL_SERVER_TO_BLM_CMD_ID SET_OFFSET_CAL_TIME =
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_SET_OFFSET_CAL_TIME;
  static const CAL_SERVER_TO_BLM_CMD_ID SET_AIR_CAL_TIME =
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_SET_AIR_CAL_TIME;
  static const CAL_SERVER_TO_BLM_CMD_ID DYNAMIC_AIR_CAL_ERROR =
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_DYNAMIC_AIR_CAL_ERROR;
  static const CAL_SERVER_TO_BLM_CMD_ID DYNAMIC_OFFSET_CAL_ERROR =
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_DYNAMIC_OFFSET_CAL_ERROR;
  static inline bool CAL_SERVER_TO_BLM_CMD_ID_IsValid(int value) {
    return CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_IsValid(value);
  }
  static const CAL_SERVER_TO_BLM_CMD_ID CAL_SERVER_TO_BLM_CMD_ID_MIN =
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CAL_SERVER_TO_BLM_CMD_ID_MIN;
  static const CAL_SERVER_TO_BLM_CMD_ID CAL_SERVER_TO_BLM_CMD_ID_MAX =
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CAL_SERVER_TO_BLM_CMD_ID_MAX;
  static const int CAL_SERVER_TO_BLM_CMD_ID_ARRAYSIZE =
    CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_CAL_SERVER_TO_BLM_CMD_ID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CAL_SERVER_TO_BLM_CMD_ID_descriptor() {
    return CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor();
  }
  static inline const ::std::string& CAL_SERVER_TO_BLM_CMD_ID_Name(CAL_SERVER_TO_BLM_CMD_ID value) {
    return CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_Name(value);
  }
  static inline bool CAL_SERVER_TO_BLM_CMD_ID_Parse(const ::std::string& name,
      CAL_SERVER_TO_BLM_CMD_ID* value) {
    return CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.CalServerToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID id() const;
  void set_id(::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID value);

  // optional string cal_time = 2;
  void clear_cal_time();
  static const int kCalTimeFieldNumber = 2;
  const ::std::string& cal_time() const;
  void set_cal_time(const ::std::string& value);
  void set_cal_time(const char* value);
  void set_cal_time(const char* value, size_t size);
  ::std::string* mutable_cal_time();
  ::std::string* release_cal_time();
  void set_allocated_cal_time(::std::string* cal_time);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.CalServerToBlmMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr cal_time_;
  int id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto();

  void InitAsDefaultInstance();
  static CalServerToBlmMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BlmToScannerMsg

// optional .analogic.ancp00.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID cmd_id = 1;
inline void BlmToScannerMsg::clear_cmd_id() {
  cmd_id_ = 0;
}
inline ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::cmd_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmToScannerMsg.cmd_id)
  return static_cast< ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID >(cmd_id_);
}
inline void BlmToScannerMsg::set_cmd_id(::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmToScannerMsg.cmd_id)
}

// optional uint64 bag_buffer_index = 2;
inline void BlmToScannerMsg::clear_bag_buffer_index() {
  bag_buffer_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlmToScannerMsg::bag_buffer_index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmToScannerMsg.bag_buffer_index)
  return bag_buffer_index_;
}
inline void BlmToScannerMsg::set_bag_buffer_index(::google::protobuf::uint64 value) {
  
  bag_buffer_index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmToScannerMsg.bag_buffer_index)
}

// optional string bag_basename = 3;
inline void BlmToScannerMsg::clear_bag_basename() {
  bag_basename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlmToScannerMsg::bag_basename() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmToScannerMsg.bag_basename)
  return bag_basename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlmToScannerMsg::set_bag_basename(const ::std::string& value) {
  
  bag_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmToScannerMsg.bag_basename)
}
inline void BlmToScannerMsg::set_bag_basename(const char* value) {
  
  bag_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BlmToScannerMsg.bag_basename)
}
inline void BlmToScannerMsg::set_bag_basename(const char* value, size_t size) {
  
  bag_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BlmToScannerMsg.bag_basename)
}
inline ::std::string* BlmToScannerMsg::mutable_bag_basename() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BlmToScannerMsg.bag_basename)
  return bag_basename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlmToScannerMsg::release_bag_basename() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BlmToScannerMsg.bag_basename)
  
  return bag_basename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlmToScannerMsg::set_allocated_bag_basename(::std::string* bag_basename) {
  if (bag_basename != NULL) {
    
  } else {
    
  }
  bag_basename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_basename);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BlmToScannerMsg.bag_basename)
}

// -------------------------------------------------------------------

// ScannerToBlmMsg

// optional .analogic.ancp00.ScannerToBlmMsg.SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id = 1;
inline void ScannerToBlmMsg::clear_cmd_id() {
  cmd_id_ = 0;
}
inline ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::cmd_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.cmd_id)
  return static_cast< ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID >(cmd_id_);
}
inline void ScannerToBlmMsg::set_cmd_id(::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.cmd_id)
}

// optional uint32 num_rotations = 2;
inline void ScannerToBlmMsg::clear_num_rotations() {
  num_rotations_ = 0u;
}
inline ::google::protobuf::uint32 ScannerToBlmMsg::num_rotations() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.num_rotations)
  return num_rotations_;
}
inline void ScannerToBlmMsg::set_num_rotations(::google::protobuf::uint32 value) {
  
  num_rotations_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.num_rotations)
}

// optional string dest_folder = 3;
inline void ScannerToBlmMsg::clear_dest_folder() {
  dest_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScannerToBlmMsg::dest_folder() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.dest_folder)
  return dest_folder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScannerToBlmMsg::set_dest_folder(const ::std::string& value) {
  
  dest_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}
inline void ScannerToBlmMsg::set_dest_folder(const char* value) {
  
  dest_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}
inline void ScannerToBlmMsg::set_dest_folder(const char* value, size_t size) {
  
  dest_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}
inline ::std::string* ScannerToBlmMsg::mutable_dest_folder() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.ScannerToBlmMsg.dest_folder)
  return dest_folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScannerToBlmMsg::release_dest_folder() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.ScannerToBlmMsg.dest_folder)
  
  return dest_folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScannerToBlmMsg::set_allocated_dest_folder(::std::string* dest_folder) {
  if (dest_folder != NULL) {
    
  } else {
    
  }
  dest_folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_folder);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}

// optional string file_name = 4;
inline void ScannerToBlmMsg::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScannerToBlmMsg::file_name() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.file_name)
  return file_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScannerToBlmMsg::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.file_name)
}
inline void ScannerToBlmMsg::set_file_name(const char* value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.ScannerToBlmMsg.file_name)
}
inline void ScannerToBlmMsg::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.ScannerToBlmMsg.file_name)
}
inline ::std::string* ScannerToBlmMsg::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.ScannerToBlmMsg.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScannerToBlmMsg::release_file_name() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.ScannerToBlmMsg.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScannerToBlmMsg::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.ScannerToBlmMsg.file_name)
}

// optional float float_data_1 = 5;
inline void ScannerToBlmMsg::clear_float_data_1() {
  float_data_1_ = 0;
}
inline float ScannerToBlmMsg::float_data_1() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.float_data_1)
  return float_data_1_;
}
inline void ScannerToBlmMsg::set_float_data_1(float value) {
  
  float_data_1_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.float_data_1)
}

// optional float float_data_2 = 6;
inline void ScannerToBlmMsg::clear_float_data_2() {
  float_data_2_ = 0;
}
inline float ScannerToBlmMsg::float_data_2() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.float_data_2)
  return float_data_2_;
}
inline void ScannerToBlmMsg::set_float_data_2(float value) {
  
  float_data_2_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.float_data_2)
}

// optional float float_data_3 = 7;
inline void ScannerToBlmMsg::clear_float_data_3() {
  float_data_3_ = 0;
}
inline float ScannerToBlmMsg::float_data_3() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.float_data_3)
  return float_data_3_;
}
inline void ScannerToBlmMsg::set_float_data_3(float value) {
  
  float_data_3_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.float_data_3)
}

// optional string source_user = 8;
inline void ScannerToBlmMsg::clear_source_user() {
  source_user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScannerToBlmMsg::source_user() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.source_user)
  return source_user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScannerToBlmMsg::set_source_user(const ::std::string& value) {
  
  source_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.source_user)
}
inline void ScannerToBlmMsg::set_source_user(const char* value) {
  
  source_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.ScannerToBlmMsg.source_user)
}
inline void ScannerToBlmMsg::set_source_user(const char* value, size_t size) {
  
  source_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.ScannerToBlmMsg.source_user)
}
inline ::std::string* ScannerToBlmMsg::mutable_source_user() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.ScannerToBlmMsg.source_user)
  return source_user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScannerToBlmMsg::release_source_user() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.ScannerToBlmMsg.source_user)
  
  return source_user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScannerToBlmMsg::set_allocated_source_user(::std::string* source_user) {
  if (source_user != NULL) {
    
  } else {
    
  }
  source_user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_user);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.ScannerToBlmMsg.source_user)
}

// optional .analogic.ImageQualityTestRpc.IQ_TEST_TYPE iq_test_type = 9;
inline void ScannerToBlmMsg::clear_iq_test_type() {
  iq_test_type_ = 0;
}
inline ::analogic::ImageQualityTestRpc_IQ_TEST_TYPE ScannerToBlmMsg::iq_test_type() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.iq_test_type)
  return static_cast< ::analogic::ImageQualityTestRpc_IQ_TEST_TYPE >(iq_test_type_);
}
inline void ScannerToBlmMsg::set_iq_test_type(::analogic::ImageQualityTestRpc_IQ_TEST_TYPE value) {
  
  iq_test_type_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.iq_test_type)
}

// -------------------------------------------------------------------

// BlmInternalMsg

// optional .analogic.ancp00.BlmInternalMsg.BLM_INTERNAL_CMD cmd = 1;
inline void BlmInternalMsg::clear_cmd() {
  cmd_ = 0;
}
inline ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::cmd() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmInternalMsg.cmd)
  return static_cast< ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD >(cmd_);
}
inline void BlmInternalMsg::set_cmd(::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmInternalMsg.cmd)
}

// optional uint64 index = 2;
inline void BlmInternalMsg::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlmInternalMsg::index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmInternalMsg.index)
  return index_;
}
inline void BlmInternalMsg::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmInternalMsg.index)
}

// -------------------------------------------------------------------

// BagEvent

// optional .analogic.ancp00.BagEvent.BAG_EVENT_ID id = 1;
inline void BagEvent::clear_id() {
  id_ = 0;
}
inline ::analogic::ancp00::BagEvent_BAG_EVENT_ID BagEvent::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagEvent.id)
  return static_cast< ::analogic::ancp00::BagEvent_BAG_EVENT_ID >(id_);
}
inline void BagEvent::set_id(::analogic::ancp00::BagEvent_BAG_EVENT_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagEvent.id)
}

// optional uint64 index = 2;
inline void BagEvent::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BagEvent::index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagEvent.index)
  return index_;
}
inline void BagEvent::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagEvent.index)
}

// -------------------------------------------------------------------

// DetectionMsg

// optional .analogic.ancp00.DetectionMsg.DETECTION_CMD_ID id = 1;
inline void DetectionMsg::clear_id() {
  id_ = 0;
}
inline ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID DetectionMsg::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionMsg.id)
  return static_cast< ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID >(id_);
}
inline void DetectionMsg::set_id(::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionMsg.id)
}

// optional bool is_response = 2;
inline void DetectionMsg::clear_is_response() {
  is_response_ = false;
}
inline bool DetectionMsg::is_response() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionMsg.is_response)
  return is_response_;
}
inline void DetectionMsg::set_is_response(bool value) {
  
  is_response_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionMsg.is_response)
}

// optional string message = 3;
inline void DetectionMsg::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DetectionMsg::message() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionMsg.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DetectionMsg::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionMsg.message)
}
inline void DetectionMsg::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.DetectionMsg.message)
}
inline void DetectionMsg::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.DetectionMsg.message)
}
inline ::std::string* DetectionMsg::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.DetectionMsg.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DetectionMsg::release_message() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.DetectionMsg.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DetectionMsg::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.DetectionMsg.message)
}

// -------------------------------------------------------------------

// DetectionStatusMsg

// optional .analogic.ancp00.DetectionStatusMsg.DETECTION_STATUS_ID id = 1;
inline void DetectionStatusMsg::clear_id() {
  id_ = 0;
}
inline ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionStatusMsg.id)
  return static_cast< ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID >(id_);
}
inline void DetectionStatusMsg::set_id(::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionStatusMsg.id)
}

// optional string message = 2;
inline void DetectionStatusMsg::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DetectionStatusMsg::message() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionStatusMsg.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DetectionStatusMsg::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionStatusMsg.message)
}
inline void DetectionStatusMsg::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.DetectionStatusMsg.message)
}
inline void DetectionStatusMsg::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.DetectionStatusMsg.message)
}
inline ::std::string* DetectionStatusMsg::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.DetectionStatusMsg.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DetectionStatusMsg::release_message() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.DetectionStatusMsg.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DetectionStatusMsg::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.DetectionStatusMsg.message)
}

// -------------------------------------------------------------------

// BlmStatusMsg

// optional uint32 bags_processed = 1;
inline void BlmStatusMsg::clear_bags_processed() {
  bags_processed_ = 0u;
}
inline ::google::protobuf::uint32 BlmStatusMsg::bags_processed() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmStatusMsg.bags_processed)
  return bags_processed_;
}
inline void BlmStatusMsg::set_bags_processed(::google::protobuf::uint32 value) {
  
  bags_processed_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmStatusMsg.bags_processed)
}

// optional bool rtr = 2;
inline void BlmStatusMsg::clear_rtr() {
  rtr_ = false;
}
inline bool BlmStatusMsg::rtr() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmStatusMsg.rtr)
  return rtr_;
}
inline void BlmStatusMsg::set_rtr(bool value) {
  
  rtr_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmStatusMsg.rtr)
}

// -------------------------------------------------------------------

// CalServerToBlmMsg

// optional .analogic.ancp00.CalServerToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID id = 1;
inline void CalServerToBlmMsg::clear_id() {
  id_ = 0;
}
inline ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.CalServerToBlmMsg.id)
  return static_cast< ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID >(id_);
}
inline void CalServerToBlmMsg::set_id(::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.CalServerToBlmMsg.id)
}

// optional string cal_time = 2;
inline void CalServerToBlmMsg::clear_cal_time() {
  cal_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CalServerToBlmMsg::cal_time() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.CalServerToBlmMsg.cal_time)
  return cal_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalServerToBlmMsg::set_cal_time(const ::std::string& value) {
  
  cal_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.CalServerToBlmMsg.cal_time)
}
inline void CalServerToBlmMsg::set_cal_time(const char* value) {
  
  cal_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.CalServerToBlmMsg.cal_time)
}
inline void CalServerToBlmMsg::set_cal_time(const char* value, size_t size) {
  
  cal_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.CalServerToBlmMsg.cal_time)
}
inline ::std::string* CalServerToBlmMsg::mutable_cal_time() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.CalServerToBlmMsg.cal_time)
  return cal_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalServerToBlmMsg::release_cal_time() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.CalServerToBlmMsg.cal_time)
  
  return cal_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalServerToBlmMsg::set_allocated_cal_time(::std::string* cal_time) {
  if (cal_time != NULL) {
    
  } else {
    
  }
  cal_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cal_time);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.CalServerToBlmMsg.cal_time)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ancp00
}  // namespace analogic

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID>() {
  return ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID>() {
  return ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD>() {
  return ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::BagEvent_BAG_EVENT_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::BagEvent_BAG_EVENT_ID>() {
  return ::analogic::ancp00::BagEvent_BAG_EVENT_ID_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID>() {
  return ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID>() {
  return ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID>() {
  return ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fBagLifecycle_2eproto__INCLUDED
