// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/Bhs.proto

#ifndef PROTOBUF_proto_2fBhs_2eproto__INCLUDED
#define PROTOBUF_proto_2fBhs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace analogic {
namespace ancp00 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2fBhs_2eproto();
void protobuf_AssignDesc_proto_2fBhs_2eproto();
void protobuf_ShutdownFile_proto_2fBhs_2eproto();

class BagStatusUpdate;
class BhsBagInfo;
class BhsEvent;
class BhsIntfMessage;
class BhsStatus;

enum BhsIntfMessage_BHS_INTF_COMMAND {
  BhsIntfMessage_BHS_INTF_COMMAND_GET_ALGORITHM = 0,
  BhsIntfMessage_BHS_INTF_COMMAND_SET_ALGORITHM = 1,
  BhsIntfMessage_BHS_INTF_COMMAND_LINK_BAG_REQ = 2,
  BhsIntfMessage_BHS_INTF_COMMAND_LINK_BAG_REPLY = 3,
  BhsIntfMessage_BHS_INTF_COMMAND_BAG_STATUS_REQ = 4,
  BhsIntfMessage_BHS_INTF_COMMAND_BAG_PICKUP_NOTIFICATION = 5,
  BhsIntfMessage_BHS_INTF_COMMAND_BhsIntfMessage_BHS_INTF_COMMAND_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BhsIntfMessage_BHS_INTF_COMMAND_BhsIntfMessage_BHS_INTF_COMMAND_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BhsIntfMessage_BHS_INTF_COMMAND_IsValid(int value);
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage_BHS_INTF_COMMAND_BHS_INTF_COMMAND_MIN = BhsIntfMessage_BHS_INTF_COMMAND_GET_ALGORITHM;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage_BHS_INTF_COMMAND_BHS_INTF_COMMAND_MAX = BhsIntfMessage_BHS_INTF_COMMAND_BAG_PICKUP_NOTIFICATION;
const int BhsIntfMessage_BHS_INTF_COMMAND_BHS_INTF_COMMAND_ARRAYSIZE = BhsIntfMessage_BHS_INTF_COMMAND_BHS_INTF_COMMAND_MAX + 1;

const ::google::protobuf::EnumDescriptor* BhsIntfMessage_BHS_INTF_COMMAND_descriptor();
inline const ::std::string& BhsIntfMessage_BHS_INTF_COMMAND_Name(BhsIntfMessage_BHS_INTF_COMMAND value) {
  return ::google::protobuf::internal::NameOfEnum(
    BhsIntfMessage_BHS_INTF_COMMAND_descriptor(), value);
}
inline bool BhsIntfMessage_BHS_INTF_COMMAND_Parse(
    const ::std::string& name, BhsIntfMessage_BHS_INTF_COMMAND* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BhsIntfMessage_BHS_INTF_COMMAND>(
    BhsIntfMessage_BHS_INTF_COMMAND_descriptor(), name, value);
}
enum BagStatusUpdate_BAG_DISPOSITION {
  BagStatusUpdate_BAG_DISPOSITION_UNKNOWN_DISPOSITION = 0,
  BagStatusUpdate_BAG_DISPOSITION_ALARM = 1,
  BagStatusUpdate_BAG_DISPOSITION_CLEAR = 2,
  BagStatusUpdate_BAG_DISPOSITION_SEARCH = 3,
  BagStatusUpdate_BAG_DISPOSITION_RETAIN = 4,
  BagStatusUpdate_BAG_DISPOSITION_TIMEOUT = 5,
  BagStatusUpdate_BAG_DISPOSITION_BAG_NOT_ANALYZED = 6,
  BagStatusUpdate_BAG_DISPOSITION_UNPROCESSED = 9,
  BagStatusUpdate_BAG_DISPOSITION_HIGH_THREAT = 10,
  BagStatusUpdate_BAG_DISPOSITION_AUTO_REJECT = 11,
  BagStatusUpdate_BAG_DISPOSITION_BagStatusUpdate_BAG_DISPOSITION_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BagStatusUpdate_BAG_DISPOSITION_BagStatusUpdate_BAG_DISPOSITION_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BagStatusUpdate_BAG_DISPOSITION_IsValid(int value);
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate_BAG_DISPOSITION_BAG_DISPOSITION_MIN = BagStatusUpdate_BAG_DISPOSITION_UNKNOWN_DISPOSITION;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate_BAG_DISPOSITION_BAG_DISPOSITION_MAX = BagStatusUpdate_BAG_DISPOSITION_AUTO_REJECT;
const int BagStatusUpdate_BAG_DISPOSITION_BAG_DISPOSITION_ARRAYSIZE = BagStatusUpdate_BAG_DISPOSITION_BAG_DISPOSITION_MAX + 1;

const ::google::protobuf::EnumDescriptor* BagStatusUpdate_BAG_DISPOSITION_descriptor();
inline const ::std::string& BagStatusUpdate_BAG_DISPOSITION_Name(BagStatusUpdate_BAG_DISPOSITION value) {
  return ::google::protobuf::internal::NameOfEnum(
    BagStatusUpdate_BAG_DISPOSITION_descriptor(), value);
}
inline bool BagStatusUpdate_BAG_DISPOSITION_Parse(
    const ::std::string& name, BagStatusUpdate_BAG_DISPOSITION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BagStatusUpdate_BAG_DISPOSITION>(
    BagStatusUpdate_BAG_DISPOSITION_descriptor(), name, value);
}
enum BhsEvent_BHS_EVENT_ID {
  BhsEvent_BHS_EVENT_ID_BAG_NULL_EVENT = 0,
  BhsEvent_BHS_EVENT_ID_BAG_DIVERTER_CLEAR_EVENT = 1,
  BhsEvent_BHS_EVENT_ID_BAG_DIVERTER_SEARCH_EVENT = 2,
  BhsEvent_BHS_EVENT_ID_BAG_ADD_INFO_EVENT = 3,
  BhsEvent_BHS_EVENT_ID_BAG_INFO_FINISHED_EVENT = 4,
  BhsEvent_BHS_EVENT_ID_BAG_PICKUP_REQUEST = 5,
  BhsEvent_BHS_EVENT_ID_INVALIDATE_BAG_REQUEST = 6,
  BhsEvent_BHS_EVENT_ID_BhsEvent_BHS_EVENT_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BhsEvent_BHS_EVENT_ID_BhsEvent_BHS_EVENT_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BhsEvent_BHS_EVENT_ID_IsValid(int value);
const BhsEvent_BHS_EVENT_ID BhsEvent_BHS_EVENT_ID_BHS_EVENT_ID_MIN = BhsEvent_BHS_EVENT_ID_BAG_NULL_EVENT;
const BhsEvent_BHS_EVENT_ID BhsEvent_BHS_EVENT_ID_BHS_EVENT_ID_MAX = BhsEvent_BHS_EVENT_ID_INVALIDATE_BAG_REQUEST;
const int BhsEvent_BHS_EVENT_ID_BHS_EVENT_ID_ARRAYSIZE = BhsEvent_BHS_EVENT_ID_BHS_EVENT_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* BhsEvent_BHS_EVENT_ID_descriptor();
inline const ::std::string& BhsEvent_BHS_EVENT_ID_Name(BhsEvent_BHS_EVENT_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    BhsEvent_BHS_EVENT_ID_descriptor(), value);
}
inline bool BhsEvent_BHS_EVENT_ID_Parse(
    const ::std::string& name, BhsEvent_BHS_EVENT_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BhsEvent_BHS_EVENT_ID>(
    BhsEvent_BHS_EVENT_ID_descriptor(), name, value);
}
// ===================================================================

class BhsIntfMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BhsIntfMessage) */ {
 public:
  BhsIntfMessage();
  virtual ~BhsIntfMessage();

  BhsIntfMessage(const BhsIntfMessage& from);

  inline BhsIntfMessage& operator=(const BhsIntfMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BhsIntfMessage& default_instance();

  void Swap(BhsIntfMessage* other);

  // implements Message ----------------------------------------------

  inline BhsIntfMessage* New() const { return New(NULL); }

  BhsIntfMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BhsIntfMessage& from);
  void MergeFrom(const BhsIntfMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BhsIntfMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BhsIntfMessage_BHS_INTF_COMMAND BHS_INTF_COMMAND;
  static const BHS_INTF_COMMAND GET_ALGORITHM =
    BhsIntfMessage_BHS_INTF_COMMAND_GET_ALGORITHM;
  static const BHS_INTF_COMMAND SET_ALGORITHM =
    BhsIntfMessage_BHS_INTF_COMMAND_SET_ALGORITHM;
  static const BHS_INTF_COMMAND LINK_BAG_REQ =
    BhsIntfMessage_BHS_INTF_COMMAND_LINK_BAG_REQ;
  static const BHS_INTF_COMMAND LINK_BAG_REPLY =
    BhsIntfMessage_BHS_INTF_COMMAND_LINK_BAG_REPLY;
  static const BHS_INTF_COMMAND BAG_STATUS_REQ =
    BhsIntfMessage_BHS_INTF_COMMAND_BAG_STATUS_REQ;
  static const BHS_INTF_COMMAND BAG_PICKUP_NOTIFICATION =
    BhsIntfMessage_BHS_INTF_COMMAND_BAG_PICKUP_NOTIFICATION;
  static inline bool BHS_INTF_COMMAND_IsValid(int value) {
    return BhsIntfMessage_BHS_INTF_COMMAND_IsValid(value);
  }
  static const BHS_INTF_COMMAND BHS_INTF_COMMAND_MIN =
    BhsIntfMessage_BHS_INTF_COMMAND_BHS_INTF_COMMAND_MIN;
  static const BHS_INTF_COMMAND BHS_INTF_COMMAND_MAX =
    BhsIntfMessage_BHS_INTF_COMMAND_BHS_INTF_COMMAND_MAX;
  static const int BHS_INTF_COMMAND_ARRAYSIZE =
    BhsIntfMessage_BHS_INTF_COMMAND_BHS_INTF_COMMAND_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BHS_INTF_COMMAND_descriptor() {
    return BhsIntfMessage_BHS_INTF_COMMAND_descriptor();
  }
  static inline const ::std::string& BHS_INTF_COMMAND_Name(BHS_INTF_COMMAND value) {
    return BhsIntfMessage_BHS_INTF_COMMAND_Name(value);
  }
  static inline bool BHS_INTF_COMMAND_Parse(const ::std::string& name,
      BHS_INTF_COMMAND* value) {
    return BhsIntfMessage_BHS_INTF_COMMAND_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.BhsIntfMessage.BHS_INTF_COMMAND cmd_id = 1;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND cmd_id() const;
  void set_cmd_id(::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND value);

  // optional uint64 bag_index = 2;
  void clear_bag_index();
  static const int kBagIndexFieldNumber = 2;
  ::google::protobuf::uint64 bag_index() const;
  void set_bag_index(::google::protobuf::uint64 value);

  // optional string bag_id = 3;
  void clear_bag_id();
  static const int kBagIdFieldNumber = 3;
  const ::std::string& bag_id() const;
  void set_bag_id(const ::std::string& value);
  void set_bag_id(const char* value);
  void set_bag_id(const char* value, size_t size);
  ::std::string* mutable_bag_id();
  ::std::string* release_bag_id();
  void set_allocated_bag_id(::std::string* bag_id);

  // optional string bhs_bag_id = 4;
  void clear_bhs_bag_id();
  static const int kBhsBagIdFieldNumber = 4;
  const ::std::string& bhs_bag_id() const;
  void set_bhs_bag_id(const ::std::string& value);
  void set_bhs_bag_id(const char* value);
  void set_bhs_bag_id(const char* value, size_t size);
  ::std::string* mutable_bhs_bag_id();
  ::std::string* release_bhs_bag_id();
  void set_allocated_bhs_bag_id(::std::string* bhs_bag_id);

  // optional string algorithm = 5;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 5;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BhsIntfMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 bag_index_;
  ::google::protobuf::internal::ArenaStringPtr bag_id_;
  ::google::protobuf::internal::ArenaStringPtr bhs_bag_id_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  int cmd_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBhs_2eproto();
  friend void protobuf_AssignDesc_proto_2fBhs_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBhs_2eproto();

  void InitAsDefaultInstance();
  static BhsIntfMessage* default_instance_;
};
// -------------------------------------------------------------------

class BagStatusUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BagStatusUpdate) */ {
 public:
  BagStatusUpdate();
  virtual ~BagStatusUpdate();

  BagStatusUpdate(const BagStatusUpdate& from);

  inline BagStatusUpdate& operator=(const BagStatusUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagStatusUpdate& default_instance();

  void Swap(BagStatusUpdate* other);

  // implements Message ----------------------------------------------

  inline BagStatusUpdate* New() const { return New(NULL); }

  BagStatusUpdate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BagStatusUpdate& from);
  void MergeFrom(const BagStatusUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BagStatusUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BagStatusUpdate_BAG_DISPOSITION BAG_DISPOSITION;
  static const BAG_DISPOSITION UNKNOWN_DISPOSITION =
    BagStatusUpdate_BAG_DISPOSITION_UNKNOWN_DISPOSITION;
  static const BAG_DISPOSITION ALARM =
    BagStatusUpdate_BAG_DISPOSITION_ALARM;
  static const BAG_DISPOSITION CLEAR =
    BagStatusUpdate_BAG_DISPOSITION_CLEAR;
  static const BAG_DISPOSITION SEARCH =
    BagStatusUpdate_BAG_DISPOSITION_SEARCH;
  static const BAG_DISPOSITION RETAIN =
    BagStatusUpdate_BAG_DISPOSITION_RETAIN;
  static const BAG_DISPOSITION TIMEOUT =
    BagStatusUpdate_BAG_DISPOSITION_TIMEOUT;
  static const BAG_DISPOSITION BAG_NOT_ANALYZED =
    BagStatusUpdate_BAG_DISPOSITION_BAG_NOT_ANALYZED;
  static const BAG_DISPOSITION UNPROCESSED =
    BagStatusUpdate_BAG_DISPOSITION_UNPROCESSED;
  static const BAG_DISPOSITION HIGH_THREAT =
    BagStatusUpdate_BAG_DISPOSITION_HIGH_THREAT;
  static const BAG_DISPOSITION AUTO_REJECT =
    BagStatusUpdate_BAG_DISPOSITION_AUTO_REJECT;
  static inline bool BAG_DISPOSITION_IsValid(int value) {
    return BagStatusUpdate_BAG_DISPOSITION_IsValid(value);
  }
  static const BAG_DISPOSITION BAG_DISPOSITION_MIN =
    BagStatusUpdate_BAG_DISPOSITION_BAG_DISPOSITION_MIN;
  static const BAG_DISPOSITION BAG_DISPOSITION_MAX =
    BagStatusUpdate_BAG_DISPOSITION_BAG_DISPOSITION_MAX;
  static const int BAG_DISPOSITION_ARRAYSIZE =
    BagStatusUpdate_BAG_DISPOSITION_BAG_DISPOSITION_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BAG_DISPOSITION_descriptor() {
    return BagStatusUpdate_BAG_DISPOSITION_descriptor();
  }
  static inline const ::std::string& BAG_DISPOSITION_Name(BAG_DISPOSITION value) {
    return BagStatusUpdate_BAG_DISPOSITION_Name(value);
  }
  static inline bool BAG_DISPOSITION_Parse(const ::std::string& name,
      BAG_DISPOSITION* value) {
    return BagStatusUpdate_BAG_DISPOSITION_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 bag_index = 1;
  void clear_bag_index();
  static const int kBagIndexFieldNumber = 1;
  ::google::protobuf::uint64 bag_index() const;
  void set_bag_index(::google::protobuf::uint64 value);

  // optional uint64 conveyor_pos = 2;
  void clear_conveyor_pos();
  static const int kConveyorPosFieldNumber = 2;
  ::google::protobuf::uint64 conveyor_pos() const;
  void set_conveyor_pos(::google::protobuf::uint64 value);

  // optional string bag_id = 3;
  void clear_bag_id();
  static const int kBagIdFieldNumber = 3;
  const ::std::string& bag_id() const;
  void set_bag_id(const ::std::string& value);
  void set_bag_id(const char* value);
  void set_bag_id(const char* value, size_t size);
  ::std::string* mutable_bag_id();
  ::std::string* release_bag_id();
  void set_allocated_bag_id(::std::string* bag_id);

  // optional string bhs_bag_id = 4;
  void clear_bhs_bag_id();
  static const int kBhsBagIdFieldNumber = 4;
  const ::std::string& bhs_bag_id() const;
  void set_bhs_bag_id(const ::std::string& value);
  void set_bhs_bag_id(const char* value);
  void set_bhs_bag_id(const char* value, size_t size);
  ::std::string* mutable_bhs_bag_id();
  ::std::string* release_bhs_bag_id();
  void set_allocated_bhs_bag_id(::std::string* bhs_bag_id);

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION machine_decision = 5;
  void clear_machine_decision();
  static const int kMachineDecisionFieldNumber = 5;
  ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION machine_decision() const;
  void set_machine_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value);

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION laptop_decision = 6;
  void clear_laptop_decision();
  static const int kLaptopDecisionFieldNumber = 6;
  ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION laptop_decision() const;
  void set_laptop_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value);

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION weapon_decision = 7;
  void clear_weapon_decision();
  static const int kWeaponDecisionFieldNumber = 7;
  ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION weapon_decision() const;
  void set_weapon_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value);

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION pvs_decision = 8;
  void clear_pvs_decision();
  static const int kPvsDecisionFieldNumber = 8;
  ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION pvs_decision() const;
  void set_pvs_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value);

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION sws_decision = 9;
  void clear_sws_decision();
  static const int kSwsDecisionFieldNumber = 9;
  ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION sws_decision() const;
  void set_sws_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value);

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION op_test_decision = 10;
  void clear_op_test_decision();
  static const int kOpTestDecisionFieldNumber = 10;
  ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION op_test_decision() const;
  void set_op_test_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BagStatusUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 bag_index_;
  ::google::protobuf::uint64 conveyor_pos_;
  ::google::protobuf::internal::ArenaStringPtr bag_id_;
  ::google::protobuf::internal::ArenaStringPtr bhs_bag_id_;
  int machine_decision_;
  int laptop_decision_;
  int weapon_decision_;
  int pvs_decision_;
  int sws_decision_;
  int op_test_decision_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBhs_2eproto();
  friend void protobuf_AssignDesc_proto_2fBhs_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBhs_2eproto();

  void InitAsDefaultInstance();
  static BagStatusUpdate* default_instance_;
};
// -------------------------------------------------------------------

class BhsBagInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BhsBagInfo) */ {
 public:
  BhsBagInfo();
  virtual ~BhsBagInfo();

  BhsBagInfo(const BhsBagInfo& from);

  inline BhsBagInfo& operator=(const BhsBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BhsBagInfo& default_instance();

  void Swap(BhsBagInfo* other);

  // implements Message ----------------------------------------------

  inline BhsBagInfo* New() const { return New(NULL); }

  BhsBagInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BhsBagInfo& from);
  void MergeFrom(const BhsBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BhsBagInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BhsBagInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBhs_2eproto();
  friend void protobuf_AssignDesc_proto_2fBhs_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBhs_2eproto();

  void InitAsDefaultInstance();
  static BhsBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class BhsEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BhsEvent) */ {
 public:
  BhsEvent();
  virtual ~BhsEvent();

  BhsEvent(const BhsEvent& from);

  inline BhsEvent& operator=(const BhsEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BhsEvent& default_instance();

  void Swap(BhsEvent* other);

  // implements Message ----------------------------------------------

  inline BhsEvent* New() const { return New(NULL); }

  BhsEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BhsEvent& from);
  void MergeFrom(const BhsEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BhsEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BhsEvent_BHS_EVENT_ID BHS_EVENT_ID;
  static const BHS_EVENT_ID BAG_NULL_EVENT =
    BhsEvent_BHS_EVENT_ID_BAG_NULL_EVENT;
  static const BHS_EVENT_ID BAG_DIVERTER_CLEAR_EVENT =
    BhsEvent_BHS_EVENT_ID_BAG_DIVERTER_CLEAR_EVENT;
  static const BHS_EVENT_ID BAG_DIVERTER_SEARCH_EVENT =
    BhsEvent_BHS_EVENT_ID_BAG_DIVERTER_SEARCH_EVENT;
  static const BHS_EVENT_ID BAG_ADD_INFO_EVENT =
    BhsEvent_BHS_EVENT_ID_BAG_ADD_INFO_EVENT;
  static const BHS_EVENT_ID BAG_INFO_FINISHED_EVENT =
    BhsEvent_BHS_EVENT_ID_BAG_INFO_FINISHED_EVENT;
  static const BHS_EVENT_ID BAG_PICKUP_REQUEST =
    BhsEvent_BHS_EVENT_ID_BAG_PICKUP_REQUEST;
  static const BHS_EVENT_ID INVALIDATE_BAG_REQUEST =
    BhsEvent_BHS_EVENT_ID_INVALIDATE_BAG_REQUEST;
  static inline bool BHS_EVENT_ID_IsValid(int value) {
    return BhsEvent_BHS_EVENT_ID_IsValid(value);
  }
  static const BHS_EVENT_ID BHS_EVENT_ID_MIN =
    BhsEvent_BHS_EVENT_ID_BHS_EVENT_ID_MIN;
  static const BHS_EVENT_ID BHS_EVENT_ID_MAX =
    BhsEvent_BHS_EVENT_ID_BHS_EVENT_ID_MAX;
  static const int BHS_EVENT_ID_ARRAYSIZE =
    BhsEvent_BHS_EVENT_ID_BHS_EVENT_ID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BHS_EVENT_ID_descriptor() {
    return BhsEvent_BHS_EVENT_ID_descriptor();
  }
  static inline const ::std::string& BHS_EVENT_ID_Name(BHS_EVENT_ID value) {
    return BhsEvent_BHS_EVENT_ID_Name(value);
  }
  static inline bool BHS_EVENT_ID_Parse(const ::std::string& name,
      BHS_EVENT_ID* value) {
    return BhsEvent_BHS_EVENT_ID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .analogic.ancp00.BhsEvent.BHS_EVENT_ID id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::analogic::ancp00::BhsEvent_BHS_EVENT_ID id() const;
  void set_id(::analogic::ancp00::BhsEvent_BHS_EVENT_ID value);

  // optional string bhs_bag_id = 2;
  void clear_bhs_bag_id();
  static const int kBhsBagIdFieldNumber = 2;
  const ::std::string& bhs_bag_id() const;
  void set_bhs_bag_id(const ::std::string& value);
  void set_bhs_bag_id(const char* value);
  void set_bhs_bag_id(const char* value, size_t size);
  ::std::string* mutable_bhs_bag_id();
  ::std::string* release_bhs_bag_id();
  void set_allocated_bhs_bag_id(::std::string* bhs_bag_id);

  // optional string vendor_id = 3;
  void clear_vendor_id();
  static const int kVendorIdFieldNumber = 3;
  const ::std::string& vendor_id() const;
  void set_vendor_id(const ::std::string& value);
  void set_vendor_id(const char* value);
  void set_vendor_id(const char* value, size_t size);
  ::std::string* mutable_vendor_id();
  ::std::string* release_vendor_id();
  void set_allocated_vendor_id(::std::string* vendor_id);

  // optional string vendor_data = 4;
  void clear_vendor_data();
  static const int kVendorDataFieldNumber = 4;
  const ::std::string& vendor_data() const;
  void set_vendor_data(const ::std::string& value);
  void set_vendor_data(const char* value);
  void set_vendor_data(const char* value, size_t size);
  ::std::string* mutable_vendor_data();
  ::std::string* release_vendor_data();
  void set_allocated_vendor_data(::std::string* vendor_data);

  // repeated .analogic.ancp00.BhsBagInfo bag_info = 5;
  int bag_info_size() const;
  void clear_bag_info();
  static const int kBagInfoFieldNumber = 5;
  const ::analogic::ancp00::BhsBagInfo& bag_info(int index) const;
  ::analogic::ancp00::BhsBagInfo* mutable_bag_info(int index);
  ::analogic::ancp00::BhsBagInfo* add_bag_info();
  ::google::protobuf::RepeatedPtrField< ::analogic::ancp00::BhsBagInfo >*
      mutable_bag_info();
  const ::google::protobuf::RepeatedPtrField< ::analogic::ancp00::BhsBagInfo >&
      bag_info() const;

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BhsEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr bhs_bag_id_;
  ::google::protobuf::internal::ArenaStringPtr vendor_id_;
  ::google::protobuf::internal::ArenaStringPtr vendor_data_;
  ::google::protobuf::RepeatedPtrField< ::analogic::ancp00::BhsBagInfo > bag_info_;
  int id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBhs_2eproto();
  friend void protobuf_AssignDesc_proto_2fBhs_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBhs_2eproto();

  void InitAsDefaultInstance();
  static BhsEvent* default_instance_;
};
// -------------------------------------------------------------------

class BhsStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:analogic.ancp00.BhsStatus) */ {
 public:
  BhsStatus();
  virtual ~BhsStatus();

  BhsStatus(const BhsStatus& from);

  inline BhsStatus& operator=(const BhsStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BhsStatus& default_instance();

  void Swap(BhsStatus* other);

  // implements Message ----------------------------------------------

  inline BhsStatus* New() const { return New(NULL); }

  BhsStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BhsStatus& from);
  void MergeFrom(const BhsStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BhsStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool rtr = 1;
  void clear_rtr();
  static const int kRtrFieldNumber = 1;
  bool rtr() const;
  void set_rtr(bool value);

  // optional bool rts = 2;
  void clear_rts();
  static const int kRtsFieldNumber = 2;
  bool rts() const;
  void set_rts(bool value);

  // @@protoc_insertion_point(class_scope:analogic.ancp00.BhsStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool rtr_;
  bool rts_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fBhs_2eproto();
  friend void protobuf_AssignDesc_proto_2fBhs_2eproto();
  friend void protobuf_ShutdownFile_proto_2fBhs_2eproto();

  void InitAsDefaultInstance();
  static BhsStatus* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BhsIntfMessage

// optional .analogic.ancp00.BhsIntfMessage.BHS_INTF_COMMAND cmd_id = 1;
inline void BhsIntfMessage::clear_cmd_id() {
  cmd_id_ = 0;
}
inline ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::cmd_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.cmd_id)
  return static_cast< ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND >(cmd_id_);
}
inline void BhsIntfMessage::set_cmd_id(::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.cmd_id)
}

// optional uint64 bag_index = 2;
inline void BhsIntfMessage::clear_bag_index() {
  bag_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BhsIntfMessage::bag_index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.bag_index)
  return bag_index_;
}
inline void BhsIntfMessage::set_bag_index(::google::protobuf::uint64 value) {
  
  bag_index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.bag_index)
}

// optional string bag_id = 3;
inline void BhsIntfMessage::clear_bag_id() {
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsIntfMessage::bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.bag_id)
  return bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsIntfMessage::set_bag_id(const ::std::string& value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.bag_id)
}
inline void BhsIntfMessage::set_bag_id(const char* value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsIntfMessage.bag_id)
}
inline void BhsIntfMessage::set_bag_id(const char* value, size_t size) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsIntfMessage.bag_id)
}
inline ::std::string* BhsIntfMessage::mutable_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsIntfMessage.bag_id)
  return bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsIntfMessage::release_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsIntfMessage.bag_id)
  
  return bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsIntfMessage::set_allocated_bag_id(::std::string* bag_id) {
  if (bag_id != NULL) {
    
  } else {
    
  }
  bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsIntfMessage.bag_id)
}

// optional string bhs_bag_id = 4;
inline void BhsIntfMessage::clear_bhs_bag_id() {
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsIntfMessage::bhs_bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
  return bhs_bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsIntfMessage::set_bhs_bag_id(const ::std::string& value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}
inline void BhsIntfMessage::set_bhs_bag_id(const char* value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}
inline void BhsIntfMessage::set_bhs_bag_id(const char* value, size_t size) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}
inline ::std::string* BhsIntfMessage::mutable_bhs_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
  return bhs_bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsIntfMessage::release_bhs_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
  
  return bhs_bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsIntfMessage::set_allocated_bhs_bag_id(::std::string* bhs_bag_id) {
  if (bhs_bag_id != NULL) {
    
  } else {
    
  }
  bhs_bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bhs_bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}

// optional string algorithm = 5;
inline void BhsIntfMessage::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsIntfMessage::algorithm() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.algorithm)
  return algorithm_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsIntfMessage::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.algorithm)
}
inline void BhsIntfMessage::set_algorithm(const char* value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsIntfMessage.algorithm)
}
inline void BhsIntfMessage::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsIntfMessage.algorithm)
}
inline ::std::string* BhsIntfMessage::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsIntfMessage.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsIntfMessage::release_algorithm() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsIntfMessage.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsIntfMessage::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsIntfMessage.algorithm)
}

// -------------------------------------------------------------------

// BagStatusUpdate

// optional uint64 bag_index = 1;
inline void BagStatusUpdate::clear_bag_index() {
  bag_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BagStatusUpdate::bag_index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.bag_index)
  return bag_index_;
}
inline void BagStatusUpdate::set_bag_index(::google::protobuf::uint64 value) {
  
  bag_index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.bag_index)
}

// optional uint64 conveyor_pos = 2;
inline void BagStatusUpdate::clear_conveyor_pos() {
  conveyor_pos_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BagStatusUpdate::conveyor_pos() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.conveyor_pos)
  return conveyor_pos_;
}
inline void BagStatusUpdate::set_conveyor_pos(::google::protobuf::uint64 value) {
  
  conveyor_pos_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.conveyor_pos)
}

// optional string bag_id = 3;
inline void BagStatusUpdate::clear_bag_id() {
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BagStatusUpdate::bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.bag_id)
  return bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BagStatusUpdate::set_bag_id(const ::std::string& value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.bag_id)
}
inline void BagStatusUpdate::set_bag_id(const char* value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BagStatusUpdate.bag_id)
}
inline void BagStatusUpdate::set_bag_id(const char* value, size_t size) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BagStatusUpdate.bag_id)
}
inline ::std::string* BagStatusUpdate::mutable_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BagStatusUpdate.bag_id)
  return bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BagStatusUpdate::release_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BagStatusUpdate.bag_id)
  
  return bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BagStatusUpdate::set_allocated_bag_id(::std::string* bag_id) {
  if (bag_id != NULL) {
    
  } else {
    
  }
  bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BagStatusUpdate.bag_id)
}

// optional string bhs_bag_id = 4;
inline void BagStatusUpdate::clear_bhs_bag_id() {
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BagStatusUpdate::bhs_bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
  return bhs_bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BagStatusUpdate::set_bhs_bag_id(const ::std::string& value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}
inline void BagStatusUpdate::set_bhs_bag_id(const char* value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}
inline void BagStatusUpdate::set_bhs_bag_id(const char* value, size_t size) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}
inline ::std::string* BagStatusUpdate::mutable_bhs_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
  return bhs_bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BagStatusUpdate::release_bhs_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
  
  return bhs_bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BagStatusUpdate::set_allocated_bhs_bag_id(::std::string* bhs_bag_id) {
  if (bhs_bag_id != NULL) {
    
  } else {
    
  }
  bhs_bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bhs_bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION machine_decision = 5;
inline void BagStatusUpdate::clear_machine_decision() {
  machine_decision_ = 0;
}
inline ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::machine_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.machine_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(machine_decision_);
}
inline void BagStatusUpdate::set_machine_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  machine_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.machine_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION laptop_decision = 6;
inline void BagStatusUpdate::clear_laptop_decision() {
  laptop_decision_ = 0;
}
inline ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::laptop_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.laptop_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(laptop_decision_);
}
inline void BagStatusUpdate::set_laptop_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  laptop_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.laptop_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION weapon_decision = 7;
inline void BagStatusUpdate::clear_weapon_decision() {
  weapon_decision_ = 0;
}
inline ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::weapon_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.weapon_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(weapon_decision_);
}
inline void BagStatusUpdate::set_weapon_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  weapon_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.weapon_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION pvs_decision = 8;
inline void BagStatusUpdate::clear_pvs_decision() {
  pvs_decision_ = 0;
}
inline ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::pvs_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.pvs_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(pvs_decision_);
}
inline void BagStatusUpdate::set_pvs_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  pvs_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.pvs_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION sws_decision = 9;
inline void BagStatusUpdate::clear_sws_decision() {
  sws_decision_ = 0;
}
inline ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::sws_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.sws_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(sws_decision_);
}
inline void BagStatusUpdate::set_sws_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  sws_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.sws_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION op_test_decision = 10;
inline void BagStatusUpdate::clear_op_test_decision() {
  op_test_decision_ = 0;
}
inline ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::op_test_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.op_test_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(op_test_decision_);
}
inline void BagStatusUpdate::set_op_test_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  op_test_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.op_test_decision)
}

// -------------------------------------------------------------------

// BhsBagInfo

// optional string key = 1;
inline void BhsBagInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsBagInfo::key() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsBagInfo.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsBagInfo::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsBagInfo.key)
}
inline void BhsBagInfo::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsBagInfo.key)
}
inline void BhsBagInfo::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsBagInfo.key)
}
inline ::std::string* BhsBagInfo::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsBagInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsBagInfo::release_key() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsBagInfo.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsBagInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsBagInfo.key)
}

// optional string value = 2;
inline void BhsBagInfo::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsBagInfo::value() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsBagInfo.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsBagInfo::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsBagInfo.value)
}
inline void BhsBagInfo::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsBagInfo.value)
}
inline void BhsBagInfo::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsBagInfo.value)
}
inline ::std::string* BhsBagInfo::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsBagInfo.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsBagInfo::release_value() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsBagInfo.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsBagInfo::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsBagInfo.value)
}

// -------------------------------------------------------------------

// BhsEvent

// optional .analogic.ancp00.BhsEvent.BHS_EVENT_ID id = 1;
inline void BhsEvent::clear_id() {
  id_ = 0;
}
inline ::analogic::ancp00::BhsEvent_BHS_EVENT_ID BhsEvent::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.id)
  return static_cast< ::analogic::ancp00::BhsEvent_BHS_EVENT_ID >(id_);
}
inline void BhsEvent::set_id(::analogic::ancp00::BhsEvent_BHS_EVENT_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.id)
}

// optional string bhs_bag_id = 2;
inline void BhsEvent::clear_bhs_bag_id() {
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsEvent::bhs_bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.bhs_bag_id)
  return bhs_bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsEvent::set_bhs_bag_id(const ::std::string& value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.bhs_bag_id)
}
inline void BhsEvent::set_bhs_bag_id(const char* value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsEvent.bhs_bag_id)
}
inline void BhsEvent::set_bhs_bag_id(const char* value, size_t size) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsEvent.bhs_bag_id)
}
inline ::std::string* BhsEvent::mutable_bhs_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.bhs_bag_id)
  return bhs_bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsEvent::release_bhs_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsEvent.bhs_bag_id)
  
  return bhs_bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsEvent::set_allocated_bhs_bag_id(::std::string* bhs_bag_id) {
  if (bhs_bag_id != NULL) {
    
  } else {
    
  }
  bhs_bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bhs_bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsEvent.bhs_bag_id)
}

// optional string vendor_id = 3;
inline void BhsEvent::clear_vendor_id() {
  vendor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsEvent::vendor_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.vendor_id)
  return vendor_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsEvent::set_vendor_id(const ::std::string& value) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.vendor_id)
}
inline void BhsEvent::set_vendor_id(const char* value) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsEvent.vendor_id)
}
inline void BhsEvent::set_vendor_id(const char* value, size_t size) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsEvent.vendor_id)
}
inline ::std::string* BhsEvent::mutable_vendor_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.vendor_id)
  return vendor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsEvent::release_vendor_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsEvent.vendor_id)
  
  return vendor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsEvent::set_allocated_vendor_id(::std::string* vendor_id) {
  if (vendor_id != NULL) {
    
  } else {
    
  }
  vendor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vendor_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsEvent.vendor_id)
}

// optional string vendor_data = 4;
inline void BhsEvent::clear_vendor_data() {
  vendor_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BhsEvent::vendor_data() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.vendor_data)
  return vendor_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsEvent::set_vendor_data(const ::std::string& value) {
  
  vendor_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.vendor_data)
}
inline void BhsEvent::set_vendor_data(const char* value) {
  
  vendor_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsEvent.vendor_data)
}
inline void BhsEvent::set_vendor_data(const char* value, size_t size) {
  
  vendor_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsEvent.vendor_data)
}
inline ::std::string* BhsEvent::mutable_vendor_data() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.vendor_data)
  return vendor_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BhsEvent::release_vendor_data() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsEvent.vendor_data)
  
  return vendor_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BhsEvent::set_allocated_vendor_data(::std::string* vendor_data) {
  if (vendor_data != NULL) {
    
  } else {
    
  }
  vendor_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vendor_data);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsEvent.vendor_data)
}

// repeated .analogic.ancp00.BhsBagInfo bag_info = 5;
inline int BhsEvent::bag_info_size() const {
  return bag_info_.size();
}
inline void BhsEvent::clear_bag_info() {
  bag_info_.Clear();
}
inline const ::analogic::ancp00::BhsBagInfo& BhsEvent::bag_info(int index) const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_.Get(index);
}
inline ::analogic::ancp00::BhsBagInfo* BhsEvent::mutable_bag_info(int index) {
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_.Mutable(index);
}
inline ::analogic::ancp00::BhsBagInfo* BhsEvent::add_bag_info() {
  // @@protoc_insertion_point(field_add:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::analogic::ancp00::BhsBagInfo >*
BhsEvent::mutable_bag_info() {
  // @@protoc_insertion_point(field_mutable_list:analogic.ancp00.BhsEvent.bag_info)
  return &bag_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::analogic::ancp00::BhsBagInfo >&
BhsEvent::bag_info() const {
  // @@protoc_insertion_point(field_list:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_;
}

// -------------------------------------------------------------------

// BhsStatus

// optional bool rtr = 1;
inline void BhsStatus::clear_rtr() {
  rtr_ = false;
}
inline bool BhsStatus::rtr() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsStatus.rtr)
  return rtr_;
}
inline void BhsStatus::set_rtr(bool value) {
  
  rtr_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsStatus.rtr)
}

// optional bool rts = 2;
inline void BhsStatus::clear_rts() {
  rts_ = false;
}
inline bool BhsStatus::rts() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsStatus.rts)
  return rts_;
}
inline void BhsStatus::set_rts(bool value) {
  
  rts_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsStatus.rts)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ancp00
}  // namespace analogic

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND>() {
  return ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION>() {
  return ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION_descriptor();
}
template <> struct is_proto_enum< ::analogic::ancp00::BhsEvent_BHS_EVENT_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::analogic::ancp00::BhsEvent_BHS_EVENT_ID>() {
  return ::analogic::ancp00::BhsEvent_BHS_EVENT_ID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fBhs_2eproto__INCLUDED
