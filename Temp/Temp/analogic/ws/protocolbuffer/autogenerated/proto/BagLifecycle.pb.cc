// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/BagLifecycle.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/BagLifecycle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace analogic {
namespace ancp00 {

namespace {

const ::google::protobuf::Descriptor* BlmToScannerMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlmToScannerMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ScannerToBlmMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScannerToBlmMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BlmInternalMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlmInternalMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BlmInternalMsg_BLM_INTERNAL_CMD_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BagEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BagEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BagEvent_BAG_EVENT_ID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DetectionMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectionMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DetectionMsg_DETECTION_CMD_ID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DetectionStatusMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectionStatusMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DetectionStatusMsg_DETECTION_STATUS_ID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BlmStatusMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlmStatusMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CalServerToBlmMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CalServerToBlmMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fBagLifecycle_2eproto() {
  protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/BagLifecycle.proto");
  GOOGLE_CHECK(file != NULL);
  BlmToScannerMsg_descriptor_ = file->message_type(0);
  static const int BlmToScannerMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmToScannerMsg, cmd_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmToScannerMsg, bag_buffer_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmToScannerMsg, bag_basename_),
  };
  BlmToScannerMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlmToScannerMsg_descriptor_,
      BlmToScannerMsg::default_instance_,
      BlmToScannerMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlmToScannerMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmToScannerMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmToScannerMsg, _is_default_instance_));
  BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor_ = BlmToScannerMsg_descriptor_->enum_type(0);
  ScannerToBlmMsg_descriptor_ = file->message_type(1);
  static const int ScannerToBlmMsg_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, cmd_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, num_rotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, dest_folder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, file_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, float_data_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, float_data_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, float_data_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, source_user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, iq_test_type_),
  };
  ScannerToBlmMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScannerToBlmMsg_descriptor_,
      ScannerToBlmMsg::default_instance_,
      ScannerToBlmMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScannerToBlmMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScannerToBlmMsg, _is_default_instance_));
  ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor_ = ScannerToBlmMsg_descriptor_->enum_type(0);
  BlmInternalMsg_descriptor_ = file->message_type(2);
  static const int BlmInternalMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmInternalMsg, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmInternalMsg, index_),
  };
  BlmInternalMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlmInternalMsg_descriptor_,
      BlmInternalMsg::default_instance_,
      BlmInternalMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlmInternalMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmInternalMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmInternalMsg, _is_default_instance_));
  BlmInternalMsg_BLM_INTERNAL_CMD_descriptor_ = BlmInternalMsg_descriptor_->enum_type(0);
  BagEvent_descriptor_ = file->message_type(3);
  static const int BagEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEvent, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEvent, index_),
  };
  BagEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BagEvent_descriptor_,
      BagEvent::default_instance_,
      BagEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(BagEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEvent, _is_default_instance_));
  BagEvent_BAG_EVENT_ID_descriptor_ = BagEvent_descriptor_->enum_type(0);
  DetectionMsg_descriptor_ = file->message_type(4);
  static const int DetectionMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionMsg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionMsg, is_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionMsg, message_),
  };
  DetectionMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DetectionMsg_descriptor_,
      DetectionMsg::default_instance_,
      DetectionMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(DetectionMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionMsg, _is_default_instance_));
  DetectionMsg_DETECTION_CMD_ID_descriptor_ = DetectionMsg_descriptor_->enum_type(0);
  DetectionStatusMsg_descriptor_ = file->message_type(5);
  static const int DetectionStatusMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionStatusMsg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionStatusMsg, message_),
  };
  DetectionStatusMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DetectionStatusMsg_descriptor_,
      DetectionStatusMsg::default_instance_,
      DetectionStatusMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(DetectionStatusMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionStatusMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectionStatusMsg, _is_default_instance_));
  DetectionStatusMsg_DETECTION_STATUS_ID_descriptor_ = DetectionStatusMsg_descriptor_->enum_type(0);
  BlmStatusMsg_descriptor_ = file->message_type(6);
  static const int BlmStatusMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmStatusMsg, bags_processed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmStatusMsg, rtr_),
  };
  BlmStatusMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlmStatusMsg_descriptor_,
      BlmStatusMsg::default_instance_,
      BlmStatusMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlmStatusMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmStatusMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlmStatusMsg, _is_default_instance_));
  CalServerToBlmMsg_descriptor_ = file->message_type(7);
  static const int CalServerToBlmMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalServerToBlmMsg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalServerToBlmMsg, cal_time_),
  };
  CalServerToBlmMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CalServerToBlmMsg_descriptor_,
      CalServerToBlmMsg::default_instance_,
      CalServerToBlmMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(CalServerToBlmMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalServerToBlmMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalServerToBlmMsg, _is_default_instance_));
  CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor_ = CalServerToBlmMsg_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fBagLifecycle_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlmToScannerMsg_descriptor_, &BlmToScannerMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScannerToBlmMsg_descriptor_, &ScannerToBlmMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlmInternalMsg_descriptor_, &BlmInternalMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BagEvent_descriptor_, &BagEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DetectionMsg_descriptor_, &DetectionMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DetectionStatusMsg_descriptor_, &DetectionStatusMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlmStatusMsg_descriptor_, &BlmStatusMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CalServerToBlmMsg_descriptor_, &CalServerToBlmMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto() {
  delete BlmToScannerMsg::default_instance_;
  delete BlmToScannerMsg_reflection_;
  delete ScannerToBlmMsg::default_instance_;
  delete ScannerToBlmMsg_reflection_;
  delete BlmInternalMsg::default_instance_;
  delete BlmInternalMsg_reflection_;
  delete BagEvent::default_instance_;
  delete BagEvent_reflection_;
  delete DetectionMsg::default_instance_;
  delete DetectionMsg_reflection_;
  delete DetectionStatusMsg::default_instance_;
  delete DetectionStatusMsg_reflection_;
  delete BlmStatusMsg::default_instance_;
  delete BlmStatusMsg_reflection_;
  delete CalServerToBlmMsg::default_instance_;
  delete CalServerToBlmMsg_reflection_;
}

void protobuf_AddDesc_proto_2fBagLifecycle_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fBagLifecycle_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::analogic::protobuf_AddDesc_proto_2fCalService_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030proto/BagLifecycle.proto\022\017analogic.anc"
    "p00\032\026proto/CalService.proto\"\366\002\n\017BlmToSca"
    "nnerMsg\022F\n\006cmd_id\030\001 \001(\01626.analogic.ancp0"
    "0.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID\022"
    "\030\n\020bag_buffer_index\030\002 \001(\004\022\024\n\014bag_basenam"
    "e\030\003 \001(\t\"\352\001\n\025BLM_TO_SCANNER_CMD_ID\022\026\n\022BAG"
    "_START_ALGO_REQ\020\000\022\033\n\027DYNAMIC_CAL_ASK_AIR"
    "_REQ\020\001\022\036\n\032DYNAMIC_CAL_ASK_OFFSET_REQ\020\002\022\034"
    "\n\030DYNAMIC_CAL_NEED_AIR_REQ\020\003\022\037\n\033DYNAMIC_"
    "CAL_NEED_OFFSET_REQ\020\004\022\034\n\030DYNAMIC_CAL_WAN"
    "T_AIR_REQ\020\005\022\037\n\033DYNAMIC_CAL_WANT_OFFSET_R"
    "EQ\020\006\"\216\004\n\017ScannerToBlmMsg\022P\n\006cmd_id\030\001 \001(\016"
    "2@.analogic.ancp00.ScannerToBlmMsg.SCANN"
    "ER_TO_BAG_LIFECYCLE_CMD_ID\022\025\n\rnum_rotati"
    "ons\030\002 \001(\r\022\023\n\013dest_folder\030\003 \001(\t\022\021\n\tfile_n"
    "ame\030\004 \001(\t\022\024\n\014float_data_1\030\005 \001(\002\022\024\n\014float"
    "_data_2\030\006 \001(\002\022\024\n\014float_data_3\030\007 \001(\002\022\023\n\013s"
    "ource_user\030\010 \001(\t\022@\n\014iq_test_type\030\t \001(\0162*"
    ".analogic.ImageQualityTestRpc.IQ_TEST_TY"
    "PE\"\320\001\n\037SCANNER_TO_BAG_LIFECYCLE_CMD_ID\022\017"
    "\n\013AIR_CAL_REQ\020\000\022\022\n\016OFFSET_CAL_REQ\020\001\022\024\n\020R"
    "AW_DATA_COLLECT\020\002\022\027\n\023IMAGE_QUALITY_START"
    "\020\003\022\025\n\021IMAGE_QUALITY_END\020\004\022\023\n\017AIR_CAL_NZC"
    "_REQ\020\005\022\r\n\tBLM_FLUSH\020\006\022\014\n\010SCANNING\020\007\022\020\n\014N"
    "OT_SCANNING\020\010\"\317\002\n\016BlmInternalMsg\022=\n\003cmd\030"
    "\001 \001(\01620.analogic.ancp00.BlmInternalMsg.B"
    "LM_INTERNAL_CMD\022\r\n\005index\030\002 \001(\004\"\356\001\n\020BLM_I"
    "NTERNAL_CMD\022\026\n\022BOGUS_PLACE_HOLDER\020\000\022\026\n\022H"
    "ANDLE_OFFSET_DATA\020\001\022\023\n\017HANDLE_AIR_DATA\020\002"
    "\022\024\n\020HANDLE_BAG_START\020\003\022\023\n\017HANDLE_BAG_STO"
    "P\020\004\022\032\n\026HANDLE_BAG_STOP_PADDED\020\005\022\030\n\024HANDL"
    "E_RAW_DATA_DONE\020\006\022\036\n\032HANDLE_AIR_DATA_VAL"
    "IDATION\020\007\022\024\n\020UPDATE_BAGOMETER\020\010\"\246\002\n\010BagE"
    "vent\0222\n\002id\030\001 \001(\0162&.analogic.ancp00.BagEv"
    "ent.BAG_EVENT_ID\022\r\n\005index\030\002 \001(\004\"\326\001\n\014BAG_"
    "EVENT_ID\022\016\n\nBAG_CREATE\020\000\022\030\n\024BAG_SLICES_A"
    "VAILABLE\020\001\022\021\n\rBAG_AVAILABLE\020\002\022\030\n\024BAG_DET"
    "ECTION_CANCEL\020\003\022\032\n\026BAG_DETECTION_COMPLET"
    "E\020\004\022\025\n\021BAG_ARCHIVAL_DONE\020\005\022\020\n\014BAG_NIM_DO"
    "NE\020\006\022\024\n\020BAG_PVS_DECISION\020\007\022\024\n\020BAG_SWS_DE"
    "CISION\020\010\"\261\001\n\014DetectionMsg\022:\n\002id\030\001 \001(\0162.."
    "analogic.ancp00.DetectionMsg.DETECTION_C"
    "MD_ID\022\023\n\013is_response\030\002 \001(\010\022\017\n\007message\030\003 "
    "\001(\t\"\?\n\020DETECTION_CMD_ID\022\024\n\020QUERY_ALGORIT"
    "HMS\020\000\022\025\n\021SET_EMULATOR_MODE\020\001\"\330\001\n\022Detecti"
    "onStatusMsg\022C\n\002id\030\001 \001(\01627.analogic.ancp0"
    "0.DetectionStatusMsg.DETECTION_STATUS_ID"
    "\022\017\n\007message\030\002 \001(\t\"l\n\023DETECTION_STATUS_ID"
    "\022 \n\034DETECTION_STATUS_ID_NOT_USED\020\000\022\033\n\027QP"
    "ID_CONNECTION_STARTED\020d\022\026\n\022DCS_DD_INITIA"
    "LIZED\020e\"3\n\014BlmStatusMsg\022\026\n\016bags_processe"
    "d\030\001 \001(\r\022\013\n\003rtr\030\002 \001(\010\"\363\001\n\021CalServerToBlmM"
    "sg\022G\n\002id\030\001 \001(\0162;.analogic.ancp00.CalServ"
    "erToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID\022\020\n\010c"
    "al_time\030\002 \001(\t\"\202\001\n\030CAL_SERVER_TO_BLM_CMD_"
    "ID\022\027\n\023SET_OFFSET_CAL_TIME\020\000\022\024\n\020SET_AIR_C"
    "AL_TIME\020\001\022\031\n\025DYNAMIC_AIR_CAL_ERROR\020\002\022\034\n\030"
    "DYNAMIC_OFFSET_CAL_ERROR\020\003b\006proto3", 2314);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/BagLifecycle.proto", &protobuf_RegisterTypes);
  BlmToScannerMsg::default_instance_ = new BlmToScannerMsg();
  ScannerToBlmMsg::default_instance_ = new ScannerToBlmMsg();
  BlmInternalMsg::default_instance_ = new BlmInternalMsg();
  BagEvent::default_instance_ = new BagEvent();
  DetectionMsg::default_instance_ = new DetectionMsg();
  DetectionStatusMsg::default_instance_ = new DetectionStatusMsg();
  BlmStatusMsg::default_instance_ = new BlmStatusMsg();
  CalServerToBlmMsg::default_instance_ = new CalServerToBlmMsg();
  BlmToScannerMsg::default_instance_->InitAsDefaultInstance();
  ScannerToBlmMsg::default_instance_->InitAsDefaultInstance();
  BlmInternalMsg::default_instance_->InitAsDefaultInstance();
  BagEvent::default_instance_->InitAsDefaultInstance();
  DetectionMsg::default_instance_->InitAsDefaultInstance();
  DetectionStatusMsg::default_instance_->InitAsDefaultInstance();
  BlmStatusMsg::default_instance_->InitAsDefaultInstance();
  CalServerToBlmMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fBagLifecycle_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fBagLifecycle_2eproto {
  StaticDescriptorInitializer_proto_2fBagLifecycle_2eproto() {
    protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  }
} static_descriptor_initializer_proto_2fBagLifecycle_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_descriptor_;
}
bool BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::BAG_START_ALGO_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::DYNAMIC_CAL_ASK_AIR_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::DYNAMIC_CAL_ASK_OFFSET_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::DYNAMIC_CAL_NEED_AIR_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::DYNAMIC_CAL_NEED_OFFSET_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::DYNAMIC_CAL_WANT_AIR_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::DYNAMIC_CAL_WANT_OFFSET_REQ;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::BLM_TO_SCANNER_CMD_ID_MIN;
const BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::BLM_TO_SCANNER_CMD_ID_MAX;
const int BlmToScannerMsg::BLM_TO_SCANNER_CMD_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlmToScannerMsg::kCmdIdFieldNumber;
const int BlmToScannerMsg::kBagBufferIndexFieldNumber;
const int BlmToScannerMsg::kBagBasenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlmToScannerMsg::BlmToScannerMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BlmToScannerMsg)
}

void BlmToScannerMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BlmToScannerMsg::BlmToScannerMsg(const BlmToScannerMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BlmToScannerMsg)
}

void BlmToScannerMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_id_ = 0;
  bag_buffer_index_ = GOOGLE_ULONGLONG(0);
  bag_basename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BlmToScannerMsg::~BlmToScannerMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BlmToScannerMsg)
  SharedDtor();
}

void BlmToScannerMsg::SharedDtor() {
  bag_basename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BlmToScannerMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlmToScannerMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlmToScannerMsg_descriptor_;
}

const BlmToScannerMsg& BlmToScannerMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

BlmToScannerMsg* BlmToScannerMsg::default_instance_ = NULL;

BlmToScannerMsg* BlmToScannerMsg::New(::google::protobuf::Arena* arena) const {
  BlmToScannerMsg* n = new BlmToScannerMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlmToScannerMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BlmToScannerMsg)
  cmd_id_ = 0;
  bag_buffer_index_ = GOOGLE_ULONGLONG(0);
  bag_basename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlmToScannerMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BlmToScannerMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID cmd_id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_id(static_cast< ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bag_buffer_index;
        break;
      }

      // optional uint64 bag_buffer_index = 2;
      case 2: {
        if (tag == 16) {
         parse_bag_buffer_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bag_buffer_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bag_basename;
        break;
      }

      // optional string bag_basename = 3;
      case 3: {
        if (tag == 26) {
         parse_bag_basename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bag_basename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bag_basename().data(), this->bag_basename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BlmToScannerMsg.bag_basename"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BlmToScannerMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BlmToScannerMsg)
  return false;
#undef DO_
}

void BlmToScannerMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BlmToScannerMsg)
  // optional .analogic.ancp00.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_id(), output);
  }

  // optional uint64 bag_buffer_index = 2;
  if (this->bag_buffer_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bag_buffer_index(), output);
  }

  // optional string bag_basename = 3;
  if (this->bag_basename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bag_basename().data(), this->bag_basename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BlmToScannerMsg.bag_basename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bag_basename(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BlmToScannerMsg)
}

::google::protobuf::uint8* BlmToScannerMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BlmToScannerMsg)
  // optional .analogic.ancp00.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_id(), target);
  }

  // optional uint64 bag_buffer_index = 2;
  if (this->bag_buffer_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bag_buffer_index(), target);
  }

  // optional string bag_basename = 3;
  if (this->bag_basename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bag_basename().data(), this->bag_basename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BlmToScannerMsg.bag_basename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bag_basename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BlmToScannerMsg)
  return target;
}

int BlmToScannerMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BlmToScannerMsg)
  int total_size = 0;

  // optional .analogic.ancp00.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_id());
  }

  // optional uint64 bag_buffer_index = 2;
  if (this->bag_buffer_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bag_buffer_index());
  }

  // optional string bag_basename = 3;
  if (this->bag_basename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bag_basename());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlmToScannerMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BlmToScannerMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BlmToScannerMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BlmToScannerMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BlmToScannerMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BlmToScannerMsg)
    MergeFrom(*source);
  }
}

void BlmToScannerMsg::MergeFrom(const BlmToScannerMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BlmToScannerMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.bag_buffer_index() != 0) {
    set_bag_buffer_index(from.bag_buffer_index());
  }
  if (from.bag_basename().size() > 0) {

    bag_basename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bag_basename_);
  }
}

void BlmToScannerMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BlmToScannerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlmToScannerMsg::CopyFrom(const BlmToScannerMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BlmToScannerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlmToScannerMsg::IsInitialized() const {

  return true;
}

void BlmToScannerMsg::Swap(BlmToScannerMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlmToScannerMsg::InternalSwap(BlmToScannerMsg* other) {
  std::swap(cmd_id_, other->cmd_id_);
  std::swap(bag_buffer_index_, other->bag_buffer_index_);
  bag_basename_.Swap(&other->bag_basename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlmToScannerMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlmToScannerMsg_descriptor_;
  metadata.reflection = BlmToScannerMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlmToScannerMsg

// optional .analogic.ancp00.BlmToScannerMsg.BLM_TO_SCANNER_CMD_ID cmd_id = 1;
void BlmToScannerMsg::clear_cmd_id() {
  cmd_id_ = 0;
}
 ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID BlmToScannerMsg::cmd_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmToScannerMsg.cmd_id)
  return static_cast< ::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID >(cmd_id_);
}
 void BlmToScannerMsg::set_cmd_id(::analogic::ancp00::BlmToScannerMsg_BLM_TO_SCANNER_CMD_ID value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmToScannerMsg.cmd_id)
}

// optional uint64 bag_buffer_index = 2;
void BlmToScannerMsg::clear_bag_buffer_index() {
  bag_buffer_index_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BlmToScannerMsg::bag_buffer_index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmToScannerMsg.bag_buffer_index)
  return bag_buffer_index_;
}
 void BlmToScannerMsg::set_bag_buffer_index(::google::protobuf::uint64 value) {
  
  bag_buffer_index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmToScannerMsg.bag_buffer_index)
}

// optional string bag_basename = 3;
void BlmToScannerMsg::clear_bag_basename() {
  bag_basename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BlmToScannerMsg::bag_basename() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmToScannerMsg.bag_basename)
  return bag_basename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlmToScannerMsg::set_bag_basename(const ::std::string& value) {
  
  bag_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmToScannerMsg.bag_basename)
}
 void BlmToScannerMsg::set_bag_basename(const char* value) {
  
  bag_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BlmToScannerMsg.bag_basename)
}
 void BlmToScannerMsg::set_bag_basename(const char* value, size_t size) {
  
  bag_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BlmToScannerMsg.bag_basename)
}
 ::std::string* BlmToScannerMsg::mutable_bag_basename() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BlmToScannerMsg.bag_basename)
  return bag_basename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BlmToScannerMsg::release_bag_basename() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BlmToScannerMsg.bag_basename)
  
  return bag_basename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BlmToScannerMsg::set_allocated_bag_basename(::std::string* bag_basename) {
  if (bag_basename != NULL) {
    
  } else {
    
  }
  bag_basename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_basename);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BlmToScannerMsg.bag_basename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_descriptor_;
}
bool ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::AIR_CAL_REQ;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::OFFSET_CAL_REQ;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::RAW_DATA_COLLECT;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::IMAGE_QUALITY_START;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::IMAGE_QUALITY_END;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::AIR_CAL_NZC_REQ;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::BLM_FLUSH;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::SCANNING;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::NOT_SCANNING;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MIN;
const ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::SCANNER_TO_BAG_LIFECYCLE_CMD_ID_MAX;
const int ScannerToBlmMsg::SCANNER_TO_BAG_LIFECYCLE_CMD_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScannerToBlmMsg::kCmdIdFieldNumber;
const int ScannerToBlmMsg::kNumRotationsFieldNumber;
const int ScannerToBlmMsg::kDestFolderFieldNumber;
const int ScannerToBlmMsg::kFileNameFieldNumber;
const int ScannerToBlmMsg::kFloatData1FieldNumber;
const int ScannerToBlmMsg::kFloatData2FieldNumber;
const int ScannerToBlmMsg::kFloatData3FieldNumber;
const int ScannerToBlmMsg::kSourceUserFieldNumber;
const int ScannerToBlmMsg::kIqTestTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScannerToBlmMsg::ScannerToBlmMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.ScannerToBlmMsg)
}

void ScannerToBlmMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ScannerToBlmMsg::ScannerToBlmMsg(const ScannerToBlmMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.ScannerToBlmMsg)
}

void ScannerToBlmMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_id_ = 0;
  num_rotations_ = 0u;
  dest_folder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  float_data_1_ = 0;
  float_data_2_ = 0;
  float_data_3_ = 0;
  source_user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iq_test_type_ = 0;
}

ScannerToBlmMsg::~ScannerToBlmMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.ScannerToBlmMsg)
  SharedDtor();
}

void ScannerToBlmMsg::SharedDtor() {
  dest_folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ScannerToBlmMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScannerToBlmMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScannerToBlmMsg_descriptor_;
}

const ScannerToBlmMsg& ScannerToBlmMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

ScannerToBlmMsg* ScannerToBlmMsg::default_instance_ = NULL;

ScannerToBlmMsg* ScannerToBlmMsg::New(::google::protobuf::Arena* arena) const {
  ScannerToBlmMsg* n = new ScannerToBlmMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScannerToBlmMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.ScannerToBlmMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ScannerToBlmMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ScannerToBlmMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(cmd_id_, num_rotations_);
  ZR_(float_data_1_, float_data_2_);
  dest_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  float_data_3_ = 0;
  source_user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iq_test_type_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool ScannerToBlmMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.ScannerToBlmMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.ScannerToBlmMsg.SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_id(static_cast< ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num_rotations;
        break;
      }

      // optional uint32 num_rotations = 2;
      case 2: {
        if (tag == 16) {
         parse_num_rotations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_rotations_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dest_folder;
        break;
      }

      // optional string dest_folder = 3;
      case 3: {
        if (tag == 26) {
         parse_dest_folder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dest_folder().data(), this->dest_folder().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.ScannerToBlmMsg.dest_folder"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_file_name;
        break;
      }

      // optional string file_name = 4;
      case 4: {
        if (tag == 34) {
         parse_file_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.ScannerToBlmMsg.file_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_float_data_1;
        break;
      }

      // optional float float_data_1 = 5;
      case 5: {
        if (tag == 45) {
         parse_float_data_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_data_1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_float_data_2;
        break;
      }

      // optional float float_data_2 = 6;
      case 6: {
        if (tag == 53) {
         parse_float_data_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_data_2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_float_data_3;
        break;
      }

      // optional float float_data_3 = 7;
      case 7: {
        if (tag == 61) {
         parse_float_data_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_data_3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_source_user;
        break;
      }

      // optional string source_user = 8;
      case 8: {
        if (tag == 66) {
         parse_source_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_user().data(), this->source_user().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.ScannerToBlmMsg.source_user"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_iq_test_type;
        break;
      }

      // optional .analogic.ImageQualityTestRpc.IQ_TEST_TYPE iq_test_type = 9;
      case 9: {
        if (tag == 72) {
         parse_iq_test_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_iq_test_type(static_cast< ::analogic::ImageQualityTestRpc_IQ_TEST_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.ScannerToBlmMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.ScannerToBlmMsg)
  return false;
#undef DO_
}

void ScannerToBlmMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.ScannerToBlmMsg)
  // optional .analogic.ancp00.ScannerToBlmMsg.SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_id(), output);
  }

  // optional uint32 num_rotations = 2;
  if (this->num_rotations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num_rotations(), output);
  }

  // optional string dest_folder = 3;
  if (this->dest_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_folder().data(), this->dest_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.ScannerToBlmMsg.dest_folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dest_folder(), output);
  }

  // optional string file_name = 4;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.ScannerToBlmMsg.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->file_name(), output);
  }

  // optional float float_data_1 = 5;
  if (this->float_data_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->float_data_1(), output);
  }

  // optional float float_data_2 = 6;
  if (this->float_data_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->float_data_2(), output);
  }

  // optional float float_data_3 = 7;
  if (this->float_data_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->float_data_3(), output);
  }

  // optional string source_user = 8;
  if (this->source_user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_user().data(), this->source_user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.ScannerToBlmMsg.source_user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->source_user(), output);
  }

  // optional .analogic.ImageQualityTestRpc.IQ_TEST_TYPE iq_test_type = 9;
  if (this->iq_test_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->iq_test_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.ScannerToBlmMsg)
}

::google::protobuf::uint8* ScannerToBlmMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.ScannerToBlmMsg)
  // optional .analogic.ancp00.ScannerToBlmMsg.SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_id(), target);
  }

  // optional uint32 num_rotations = 2;
  if (this->num_rotations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num_rotations(), target);
  }

  // optional string dest_folder = 3;
  if (this->dest_folder().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest_folder().data(), this->dest_folder().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.ScannerToBlmMsg.dest_folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dest_folder(), target);
  }

  // optional string file_name = 4;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.ScannerToBlmMsg.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file_name(), target);
  }

  // optional float float_data_1 = 5;
  if (this->float_data_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->float_data_1(), target);
  }

  // optional float float_data_2 = 6;
  if (this->float_data_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->float_data_2(), target);
  }

  // optional float float_data_3 = 7;
  if (this->float_data_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->float_data_3(), target);
  }

  // optional string source_user = 8;
  if (this->source_user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_user().data(), this->source_user().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.ScannerToBlmMsg.source_user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->source_user(), target);
  }

  // optional .analogic.ImageQualityTestRpc.IQ_TEST_TYPE iq_test_type = 9;
  if (this->iq_test_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->iq_test_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.ScannerToBlmMsg)
  return target;
}

int ScannerToBlmMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.ScannerToBlmMsg)
  int total_size = 0;

  // optional .analogic.ancp00.ScannerToBlmMsg.SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_id());
  }

  // optional uint32 num_rotations = 2;
  if (this->num_rotations() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_rotations());
  }

  // optional string dest_folder = 3;
  if (this->dest_folder().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dest_folder());
  }

  // optional string file_name = 4;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // optional float float_data_1 = 5;
  if (this->float_data_1() != 0) {
    total_size += 1 + 4;
  }

  // optional float float_data_2 = 6;
  if (this->float_data_2() != 0) {
    total_size += 1 + 4;
  }

  // optional float float_data_3 = 7;
  if (this->float_data_3() != 0) {
    total_size += 1 + 4;
  }

  // optional string source_user = 8;
  if (this->source_user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_user());
  }

  // optional .analogic.ImageQualityTestRpc.IQ_TEST_TYPE iq_test_type = 9;
  if (this->iq_test_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->iq_test_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScannerToBlmMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.ScannerToBlmMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScannerToBlmMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScannerToBlmMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.ScannerToBlmMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.ScannerToBlmMsg)
    MergeFrom(*source);
  }
}

void ScannerToBlmMsg::MergeFrom(const ScannerToBlmMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.ScannerToBlmMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.num_rotations() != 0) {
    set_num_rotations(from.num_rotations());
  }
  if (from.dest_folder().size() > 0) {

    dest_folder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_folder_);
  }
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.float_data_1() != 0) {
    set_float_data_1(from.float_data_1());
  }
  if (from.float_data_2() != 0) {
    set_float_data_2(from.float_data_2());
  }
  if (from.float_data_3() != 0) {
    set_float_data_3(from.float_data_3());
  }
  if (from.source_user().size() > 0) {

    source_user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_user_);
  }
  if (from.iq_test_type() != 0) {
    set_iq_test_type(from.iq_test_type());
  }
}

void ScannerToBlmMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.ScannerToBlmMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScannerToBlmMsg::CopyFrom(const ScannerToBlmMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.ScannerToBlmMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScannerToBlmMsg::IsInitialized() const {

  return true;
}

void ScannerToBlmMsg::Swap(ScannerToBlmMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScannerToBlmMsg::InternalSwap(ScannerToBlmMsg* other) {
  std::swap(cmd_id_, other->cmd_id_);
  std::swap(num_rotations_, other->num_rotations_);
  dest_folder_.Swap(&other->dest_folder_);
  file_name_.Swap(&other->file_name_);
  std::swap(float_data_1_, other->float_data_1_);
  std::swap(float_data_2_, other->float_data_2_);
  std::swap(float_data_3_, other->float_data_3_);
  source_user_.Swap(&other->source_user_);
  std::swap(iq_test_type_, other->iq_test_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScannerToBlmMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScannerToBlmMsg_descriptor_;
  metadata.reflection = ScannerToBlmMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScannerToBlmMsg

// optional .analogic.ancp00.ScannerToBlmMsg.SCANNER_TO_BAG_LIFECYCLE_CMD_ID cmd_id = 1;
void ScannerToBlmMsg::clear_cmd_id() {
  cmd_id_ = 0;
}
 ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID ScannerToBlmMsg::cmd_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.cmd_id)
  return static_cast< ::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID >(cmd_id_);
}
 void ScannerToBlmMsg::set_cmd_id(::analogic::ancp00::ScannerToBlmMsg_SCANNER_TO_BAG_LIFECYCLE_CMD_ID value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.cmd_id)
}

// optional uint32 num_rotations = 2;
void ScannerToBlmMsg::clear_num_rotations() {
  num_rotations_ = 0u;
}
 ::google::protobuf::uint32 ScannerToBlmMsg::num_rotations() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.num_rotations)
  return num_rotations_;
}
 void ScannerToBlmMsg::set_num_rotations(::google::protobuf::uint32 value) {
  
  num_rotations_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.num_rotations)
}

// optional string dest_folder = 3;
void ScannerToBlmMsg::clear_dest_folder() {
  dest_folder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ScannerToBlmMsg::dest_folder() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.dest_folder)
  return dest_folder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScannerToBlmMsg::set_dest_folder(const ::std::string& value) {
  
  dest_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}
 void ScannerToBlmMsg::set_dest_folder(const char* value) {
  
  dest_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}
 void ScannerToBlmMsg::set_dest_folder(const char* value, size_t size) {
  
  dest_folder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}
 ::std::string* ScannerToBlmMsg::mutable_dest_folder() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.ScannerToBlmMsg.dest_folder)
  return dest_folder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ScannerToBlmMsg::release_dest_folder() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.ScannerToBlmMsg.dest_folder)
  
  return dest_folder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScannerToBlmMsg::set_allocated_dest_folder(::std::string* dest_folder) {
  if (dest_folder != NULL) {
    
  } else {
    
  }
  dest_folder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_folder);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.ScannerToBlmMsg.dest_folder)
}

// optional string file_name = 4;
void ScannerToBlmMsg::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ScannerToBlmMsg::file_name() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.file_name)
  return file_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScannerToBlmMsg::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.file_name)
}
 void ScannerToBlmMsg::set_file_name(const char* value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.ScannerToBlmMsg.file_name)
}
 void ScannerToBlmMsg::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.ScannerToBlmMsg.file_name)
}
 ::std::string* ScannerToBlmMsg::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.ScannerToBlmMsg.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ScannerToBlmMsg::release_file_name() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.ScannerToBlmMsg.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScannerToBlmMsg::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.ScannerToBlmMsg.file_name)
}

// optional float float_data_1 = 5;
void ScannerToBlmMsg::clear_float_data_1() {
  float_data_1_ = 0;
}
 float ScannerToBlmMsg::float_data_1() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.float_data_1)
  return float_data_1_;
}
 void ScannerToBlmMsg::set_float_data_1(float value) {
  
  float_data_1_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.float_data_1)
}

// optional float float_data_2 = 6;
void ScannerToBlmMsg::clear_float_data_2() {
  float_data_2_ = 0;
}
 float ScannerToBlmMsg::float_data_2() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.float_data_2)
  return float_data_2_;
}
 void ScannerToBlmMsg::set_float_data_2(float value) {
  
  float_data_2_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.float_data_2)
}

// optional float float_data_3 = 7;
void ScannerToBlmMsg::clear_float_data_3() {
  float_data_3_ = 0;
}
 float ScannerToBlmMsg::float_data_3() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.float_data_3)
  return float_data_3_;
}
 void ScannerToBlmMsg::set_float_data_3(float value) {
  
  float_data_3_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.float_data_3)
}

// optional string source_user = 8;
void ScannerToBlmMsg::clear_source_user() {
  source_user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ScannerToBlmMsg::source_user() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.source_user)
  return source_user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScannerToBlmMsg::set_source_user(const ::std::string& value) {
  
  source_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.source_user)
}
 void ScannerToBlmMsg::set_source_user(const char* value) {
  
  source_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.ScannerToBlmMsg.source_user)
}
 void ScannerToBlmMsg::set_source_user(const char* value, size_t size) {
  
  source_user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.ScannerToBlmMsg.source_user)
}
 ::std::string* ScannerToBlmMsg::mutable_source_user() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.ScannerToBlmMsg.source_user)
  return source_user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ScannerToBlmMsg::release_source_user() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.ScannerToBlmMsg.source_user)
  
  return source_user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScannerToBlmMsg::set_allocated_source_user(::std::string* source_user) {
  if (source_user != NULL) {
    
  } else {
    
  }
  source_user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_user);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.ScannerToBlmMsg.source_user)
}

// optional .analogic.ImageQualityTestRpc.IQ_TEST_TYPE iq_test_type = 9;
void ScannerToBlmMsg::clear_iq_test_type() {
  iq_test_type_ = 0;
}
 ::analogic::ImageQualityTestRpc_IQ_TEST_TYPE ScannerToBlmMsg::iq_test_type() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.ScannerToBlmMsg.iq_test_type)
  return static_cast< ::analogic::ImageQualityTestRpc_IQ_TEST_TYPE >(iq_test_type_);
}
 void ScannerToBlmMsg::set_iq_test_type(::analogic::ImageQualityTestRpc_IQ_TEST_TYPE value) {
  
  iq_test_type_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.ScannerToBlmMsg.iq_test_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BlmInternalMsg_BLM_INTERNAL_CMD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlmInternalMsg_BLM_INTERNAL_CMD_descriptor_;
}
bool BlmInternalMsg_BLM_INTERNAL_CMD_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::BOGUS_PLACE_HOLDER;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::HANDLE_OFFSET_DATA;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::HANDLE_AIR_DATA;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::HANDLE_BAG_START;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::HANDLE_BAG_STOP;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::HANDLE_BAG_STOP_PADDED;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::HANDLE_RAW_DATA_DONE;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::HANDLE_AIR_DATA_VALIDATION;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::UPDATE_BAGOMETER;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::BLM_INTERNAL_CMD_MIN;
const BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::BLM_INTERNAL_CMD_MAX;
const int BlmInternalMsg::BLM_INTERNAL_CMD_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlmInternalMsg::kCmdFieldNumber;
const int BlmInternalMsg::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlmInternalMsg::BlmInternalMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BlmInternalMsg)
}

void BlmInternalMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BlmInternalMsg::BlmInternalMsg(const BlmInternalMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BlmInternalMsg)
}

void BlmInternalMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  cmd_ = 0;
  index_ = GOOGLE_ULONGLONG(0);
}

BlmInternalMsg::~BlmInternalMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BlmInternalMsg)
  SharedDtor();
}

void BlmInternalMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlmInternalMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlmInternalMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlmInternalMsg_descriptor_;
}

const BlmInternalMsg& BlmInternalMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

BlmInternalMsg* BlmInternalMsg::default_instance_ = NULL;

BlmInternalMsg* BlmInternalMsg::New(::google::protobuf::Arena* arena) const {
  BlmInternalMsg* n = new BlmInternalMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlmInternalMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BlmInternalMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BlmInternalMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BlmInternalMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, cmd_);

#undef ZR_HELPER_
#undef ZR_

}

bool BlmInternalMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BlmInternalMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.BlmInternalMsg.BLM_INTERNAL_CMD cmd = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // optional uint64 index = 2;
      case 2: {
        if (tag == 16) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BlmInternalMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BlmInternalMsg)
  return false;
#undef DO_
}

void BlmInternalMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BlmInternalMsg)
  // optional .analogic.ancp00.BlmInternalMsg.BLM_INTERNAL_CMD cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // optional uint64 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->index(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BlmInternalMsg)
}

::google::protobuf::uint8* BlmInternalMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BlmInternalMsg)
  // optional .analogic.ancp00.BlmInternalMsg.BLM_INTERNAL_CMD cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // optional uint64 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->index(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BlmInternalMsg)
  return target;
}

int BlmInternalMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BlmInternalMsg)
  int total_size = 0;

  // optional .analogic.ancp00.BlmInternalMsg.BLM_INTERNAL_CMD cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  // optional uint64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlmInternalMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BlmInternalMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BlmInternalMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BlmInternalMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BlmInternalMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BlmInternalMsg)
    MergeFrom(*source);
  }
}

void BlmInternalMsg::MergeFrom(const BlmInternalMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BlmInternalMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void BlmInternalMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BlmInternalMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlmInternalMsg::CopyFrom(const BlmInternalMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BlmInternalMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlmInternalMsg::IsInitialized() const {

  return true;
}

void BlmInternalMsg::Swap(BlmInternalMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlmInternalMsg::InternalSwap(BlmInternalMsg* other) {
  std::swap(cmd_, other->cmd_);
  std::swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlmInternalMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlmInternalMsg_descriptor_;
  metadata.reflection = BlmInternalMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlmInternalMsg

// optional .analogic.ancp00.BlmInternalMsg.BLM_INTERNAL_CMD cmd = 1;
void BlmInternalMsg::clear_cmd() {
  cmd_ = 0;
}
 ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD BlmInternalMsg::cmd() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmInternalMsg.cmd)
  return static_cast< ::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD >(cmd_);
}
 void BlmInternalMsg::set_cmd(::analogic::ancp00::BlmInternalMsg_BLM_INTERNAL_CMD value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmInternalMsg.cmd)
}

// optional uint64 index = 2;
void BlmInternalMsg::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BlmInternalMsg::index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmInternalMsg.index)
  return index_;
}
 void BlmInternalMsg::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmInternalMsg.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BagEvent_BAG_EVENT_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagEvent_BAG_EVENT_ID_descriptor_;
}
bool BagEvent_BAG_EVENT_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BagEvent_BAG_EVENT_ID BagEvent::BAG_CREATE;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_SLICES_AVAILABLE;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_AVAILABLE;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_DETECTION_CANCEL;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_DETECTION_COMPLETE;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_ARCHIVAL_DONE;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_NIM_DONE;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_PVS_DECISION;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_SWS_DECISION;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_EVENT_ID_MIN;
const BagEvent_BAG_EVENT_ID BagEvent::BAG_EVENT_ID_MAX;
const int BagEvent::BAG_EVENT_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagEvent::kIdFieldNumber;
const int BagEvent::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagEvent::BagEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BagEvent)
}

void BagEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BagEvent::BagEvent(const BagEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BagEvent)
}

void BagEvent::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  index_ = GOOGLE_ULONGLONG(0);
}

BagEvent::~BagEvent() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BagEvent)
  SharedDtor();
}

void BagEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BagEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagEvent_descriptor_;
}

const BagEvent& BagEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

BagEvent* BagEvent::default_instance_ = NULL;

BagEvent* BagEvent::New(::google::protobuf::Arena* arena) const {
  BagEvent* n = new BagEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BagEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BagEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BagEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, id_);

#undef ZR_HELPER_
#undef ZR_

}

bool BagEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BagEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.BagEvent.BAG_EVENT_ID id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::analogic::ancp00::BagEvent_BAG_EVENT_ID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // optional uint64 index = 2;
      case 2: {
        if (tag == 16) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BagEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BagEvent)
  return false;
#undef DO_
}

void BagEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BagEvent)
  // optional .analogic.ancp00.BagEvent.BAG_EVENT_ID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // optional uint64 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->index(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BagEvent)
}

::google::protobuf::uint8* BagEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BagEvent)
  // optional .analogic.ancp00.BagEvent.BAG_EVENT_ID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // optional uint64 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->index(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BagEvent)
  return target;
}

int BagEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BagEvent)
  int total_size = 0;

  // optional .analogic.ancp00.BagEvent.BAG_EVENT_ID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // optional uint64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BagEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BagEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BagEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BagEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BagEvent)
    MergeFrom(*source);
  }
}

void BagEvent::MergeFrom(const BagEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BagEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void BagEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BagEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagEvent::CopyFrom(const BagEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BagEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagEvent::IsInitialized() const {

  return true;
}

void BagEvent::Swap(BagEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagEvent::InternalSwap(BagEvent* other) {
  std::swap(id_, other->id_);
  std::swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BagEvent_descriptor_;
  metadata.reflection = BagEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagEvent

// optional .analogic.ancp00.BagEvent.BAG_EVENT_ID id = 1;
void BagEvent::clear_id() {
  id_ = 0;
}
 ::analogic::ancp00::BagEvent_BAG_EVENT_ID BagEvent::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagEvent.id)
  return static_cast< ::analogic::ancp00::BagEvent_BAG_EVENT_ID >(id_);
}
 void BagEvent::set_id(::analogic::ancp00::BagEvent_BAG_EVENT_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagEvent.id)
}

// optional uint64 index = 2;
void BagEvent::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BagEvent::index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagEvent.index)
  return index_;
}
 void BagEvent::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagEvent.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* DetectionMsg_DETECTION_CMD_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectionMsg_DETECTION_CMD_ID_descriptor_;
}
bool DetectionMsg_DETECTION_CMD_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectionMsg_DETECTION_CMD_ID DetectionMsg::QUERY_ALGORITHMS;
const DetectionMsg_DETECTION_CMD_ID DetectionMsg::SET_EMULATOR_MODE;
const DetectionMsg_DETECTION_CMD_ID DetectionMsg::DETECTION_CMD_ID_MIN;
const DetectionMsg_DETECTION_CMD_ID DetectionMsg::DETECTION_CMD_ID_MAX;
const int DetectionMsg::DETECTION_CMD_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectionMsg::kIdFieldNumber;
const int DetectionMsg::kIsResponseFieldNumber;
const int DetectionMsg::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectionMsg::DetectionMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.DetectionMsg)
}

void DetectionMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DetectionMsg::DetectionMsg(const DetectionMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.DetectionMsg)
}

void DetectionMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  is_response_ = false;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DetectionMsg::~DetectionMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.DetectionMsg)
  SharedDtor();
}

void DetectionMsg::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DetectionMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectionMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectionMsg_descriptor_;
}

const DetectionMsg& DetectionMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

DetectionMsg* DetectionMsg::default_instance_ = NULL;

DetectionMsg* DetectionMsg::New(::google::protobuf::Arena* arena) const {
  DetectionMsg* n = new DetectionMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectionMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.DetectionMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DetectionMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DetectionMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, is_response_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool DetectionMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.DetectionMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.DetectionMsg.DETECTION_CMD_ID id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_is_response;
        break;
      }

      // optional bool is_response = 2;
      case 2: {
        if (tag == 16) {
         parse_is_response:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_response_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional string message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.DetectionMsg.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.DetectionMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.DetectionMsg)
  return false;
#undef DO_
}

void DetectionMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.DetectionMsg)
  // optional .analogic.ancp00.DetectionMsg.DETECTION_CMD_ID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // optional bool is_response = 2;
  if (this->is_response() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_response(), output);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.DetectionMsg.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.DetectionMsg)
}

::google::protobuf::uint8* DetectionMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.DetectionMsg)
  // optional .analogic.ancp00.DetectionMsg.DETECTION_CMD_ID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // optional bool is_response = 2;
  if (this->is_response() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_response(), target);
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.DetectionMsg.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.DetectionMsg)
  return target;
}

int DetectionMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.DetectionMsg)
  int total_size = 0;

  // optional .analogic.ancp00.DetectionMsg.DETECTION_CMD_ID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // optional bool is_response = 2;
  if (this->is_response() != 0) {
    total_size += 1 + 1;
  }

  // optional string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectionMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.DetectionMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DetectionMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectionMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.DetectionMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.DetectionMsg)
    MergeFrom(*source);
  }
}

void DetectionMsg::MergeFrom(const DetectionMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.DetectionMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.is_response() != 0) {
    set_is_response(from.is_response());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void DetectionMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.DetectionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectionMsg::CopyFrom(const DetectionMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.DetectionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectionMsg::IsInitialized() const {

  return true;
}

void DetectionMsg::Swap(DetectionMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectionMsg::InternalSwap(DetectionMsg* other) {
  std::swap(id_, other->id_);
  std::swap(is_response_, other->is_response_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectionMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectionMsg_descriptor_;
  metadata.reflection = DetectionMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DetectionMsg

// optional .analogic.ancp00.DetectionMsg.DETECTION_CMD_ID id = 1;
void DetectionMsg::clear_id() {
  id_ = 0;
}
 ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID DetectionMsg::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionMsg.id)
  return static_cast< ::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID >(id_);
}
 void DetectionMsg::set_id(::analogic::ancp00::DetectionMsg_DETECTION_CMD_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionMsg.id)
}

// optional bool is_response = 2;
void DetectionMsg::clear_is_response() {
  is_response_ = false;
}
 bool DetectionMsg::is_response() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionMsg.is_response)
  return is_response_;
}
 void DetectionMsg::set_is_response(bool value) {
  
  is_response_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionMsg.is_response)
}

// optional string message = 3;
void DetectionMsg::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DetectionMsg::message() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionMsg.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DetectionMsg::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionMsg.message)
}
 void DetectionMsg::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.DetectionMsg.message)
}
 void DetectionMsg::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.DetectionMsg.message)
}
 ::std::string* DetectionMsg::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.DetectionMsg.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DetectionMsg::release_message() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.DetectionMsg.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DetectionMsg::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.DetectionMsg.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* DetectionStatusMsg_DETECTION_STATUS_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectionStatusMsg_DETECTION_STATUS_ID_descriptor_;
}
bool DetectionStatusMsg_DETECTION_STATUS_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 100:
    case 101:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg::DETECTION_STATUS_ID_NOT_USED;
const DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg::QPID_CONNECTION_STARTED;
const DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg::DCS_DD_INITIALIZED;
const DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg::DETECTION_STATUS_ID_MIN;
const DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg::DETECTION_STATUS_ID_MAX;
const int DetectionStatusMsg::DETECTION_STATUS_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectionStatusMsg::kIdFieldNumber;
const int DetectionStatusMsg::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectionStatusMsg::DetectionStatusMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.DetectionStatusMsg)
}

void DetectionStatusMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DetectionStatusMsg::DetectionStatusMsg(const DetectionStatusMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.DetectionStatusMsg)
}

void DetectionStatusMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DetectionStatusMsg::~DetectionStatusMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.DetectionStatusMsg)
  SharedDtor();
}

void DetectionStatusMsg::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DetectionStatusMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectionStatusMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectionStatusMsg_descriptor_;
}

const DetectionStatusMsg& DetectionStatusMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

DetectionStatusMsg* DetectionStatusMsg::default_instance_ = NULL;

DetectionStatusMsg* DetectionStatusMsg::New(::google::protobuf::Arena* arena) const {
  DetectionStatusMsg* n = new DetectionStatusMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectionStatusMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.DetectionStatusMsg)
  id_ = 0;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DetectionStatusMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.DetectionStatusMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.DetectionStatusMsg.DETECTION_STATUS_ID id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.DetectionStatusMsg.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.DetectionStatusMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.DetectionStatusMsg)
  return false;
#undef DO_
}

void DetectionStatusMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.DetectionStatusMsg)
  // optional .analogic.ancp00.DetectionStatusMsg.DETECTION_STATUS_ID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.DetectionStatusMsg.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.DetectionStatusMsg)
}

::google::protobuf::uint8* DetectionStatusMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.DetectionStatusMsg)
  // optional .analogic.ancp00.DetectionStatusMsg.DETECTION_STATUS_ID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.DetectionStatusMsg.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.DetectionStatusMsg)
  return target;
}

int DetectionStatusMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.DetectionStatusMsg)
  int total_size = 0;

  // optional .analogic.ancp00.DetectionStatusMsg.DETECTION_STATUS_ID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectionStatusMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.DetectionStatusMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DetectionStatusMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectionStatusMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.DetectionStatusMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.DetectionStatusMsg)
    MergeFrom(*source);
  }
}

void DetectionStatusMsg::MergeFrom(const DetectionStatusMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.DetectionStatusMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void DetectionStatusMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.DetectionStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectionStatusMsg::CopyFrom(const DetectionStatusMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.DetectionStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectionStatusMsg::IsInitialized() const {

  return true;
}

void DetectionStatusMsg::Swap(DetectionStatusMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectionStatusMsg::InternalSwap(DetectionStatusMsg* other) {
  std::swap(id_, other->id_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectionStatusMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectionStatusMsg_descriptor_;
  metadata.reflection = DetectionStatusMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DetectionStatusMsg

// optional .analogic.ancp00.DetectionStatusMsg.DETECTION_STATUS_ID id = 1;
void DetectionStatusMsg::clear_id() {
  id_ = 0;
}
 ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID DetectionStatusMsg::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionStatusMsg.id)
  return static_cast< ::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID >(id_);
}
 void DetectionStatusMsg::set_id(::analogic::ancp00::DetectionStatusMsg_DETECTION_STATUS_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionStatusMsg.id)
}

// optional string message = 2;
void DetectionStatusMsg::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DetectionStatusMsg::message() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.DetectionStatusMsg.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DetectionStatusMsg::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.DetectionStatusMsg.message)
}
 void DetectionStatusMsg::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.DetectionStatusMsg.message)
}
 void DetectionStatusMsg::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.DetectionStatusMsg.message)
}
 ::std::string* DetectionStatusMsg::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.DetectionStatusMsg.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DetectionStatusMsg::release_message() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.DetectionStatusMsg.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DetectionStatusMsg::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.DetectionStatusMsg.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlmStatusMsg::kBagsProcessedFieldNumber;
const int BlmStatusMsg::kRtrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlmStatusMsg::BlmStatusMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BlmStatusMsg)
}

void BlmStatusMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BlmStatusMsg::BlmStatusMsg(const BlmStatusMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BlmStatusMsg)
}

void BlmStatusMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bags_processed_ = 0u;
  rtr_ = false;
}

BlmStatusMsg::~BlmStatusMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BlmStatusMsg)
  SharedDtor();
}

void BlmStatusMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlmStatusMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlmStatusMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlmStatusMsg_descriptor_;
}

const BlmStatusMsg& BlmStatusMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

BlmStatusMsg* BlmStatusMsg::default_instance_ = NULL;

BlmStatusMsg* BlmStatusMsg::New(::google::protobuf::Arena* arena) const {
  BlmStatusMsg* n = new BlmStatusMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlmStatusMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BlmStatusMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BlmStatusMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BlmStatusMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bags_processed_, rtr_);

#undef ZR_HELPER_
#undef ZR_

}

bool BlmStatusMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BlmStatusMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 bags_processed = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bags_processed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rtr;
        break;
      }

      // optional bool rtr = 2;
      case 2: {
        if (tag == 16) {
         parse_rtr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rtr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BlmStatusMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BlmStatusMsg)
  return false;
#undef DO_
}

void BlmStatusMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BlmStatusMsg)
  // optional uint32 bags_processed = 1;
  if (this->bags_processed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bags_processed(), output);
  }

  // optional bool rtr = 2;
  if (this->rtr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->rtr(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BlmStatusMsg)
}

::google::protobuf::uint8* BlmStatusMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BlmStatusMsg)
  // optional uint32 bags_processed = 1;
  if (this->bags_processed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bags_processed(), target);
  }

  // optional bool rtr = 2;
  if (this->rtr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->rtr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BlmStatusMsg)
  return target;
}

int BlmStatusMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BlmStatusMsg)
  int total_size = 0;

  // optional uint32 bags_processed = 1;
  if (this->bags_processed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bags_processed());
  }

  // optional bool rtr = 2;
  if (this->rtr() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlmStatusMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BlmStatusMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BlmStatusMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BlmStatusMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BlmStatusMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BlmStatusMsg)
    MergeFrom(*source);
  }
}

void BlmStatusMsg::MergeFrom(const BlmStatusMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BlmStatusMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.bags_processed() != 0) {
    set_bags_processed(from.bags_processed());
  }
  if (from.rtr() != 0) {
    set_rtr(from.rtr());
  }
}

void BlmStatusMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BlmStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlmStatusMsg::CopyFrom(const BlmStatusMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BlmStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlmStatusMsg::IsInitialized() const {

  return true;
}

void BlmStatusMsg::Swap(BlmStatusMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlmStatusMsg::InternalSwap(BlmStatusMsg* other) {
  std::swap(bags_processed_, other->bags_processed_);
  std::swap(rtr_, other->rtr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlmStatusMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlmStatusMsg_descriptor_;
  metadata.reflection = BlmStatusMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlmStatusMsg

// optional uint32 bags_processed = 1;
void BlmStatusMsg::clear_bags_processed() {
  bags_processed_ = 0u;
}
 ::google::protobuf::uint32 BlmStatusMsg::bags_processed() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmStatusMsg.bags_processed)
  return bags_processed_;
}
 void BlmStatusMsg::set_bags_processed(::google::protobuf::uint32 value) {
  
  bags_processed_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmStatusMsg.bags_processed)
}

// optional bool rtr = 2;
void BlmStatusMsg::clear_rtr() {
  rtr_ = false;
}
 bool BlmStatusMsg::rtr() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BlmStatusMsg.rtr)
  return rtr_;
}
 void BlmStatusMsg::set_rtr(bool value) {
  
  rtr_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BlmStatusMsg.rtr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_descriptor_;
}
bool CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::SET_OFFSET_CAL_TIME;
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::SET_AIR_CAL_TIME;
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::DYNAMIC_AIR_CAL_ERROR;
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::DYNAMIC_OFFSET_CAL_ERROR;
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::CAL_SERVER_TO_BLM_CMD_ID_MIN;
const CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::CAL_SERVER_TO_BLM_CMD_ID_MAX;
const int CalServerToBlmMsg::CAL_SERVER_TO_BLM_CMD_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalServerToBlmMsg::kIdFieldNumber;
const int CalServerToBlmMsg::kCalTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalServerToBlmMsg::CalServerToBlmMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.CalServerToBlmMsg)
}

void CalServerToBlmMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CalServerToBlmMsg::CalServerToBlmMsg(const CalServerToBlmMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.CalServerToBlmMsg)
}

void CalServerToBlmMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  cal_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CalServerToBlmMsg::~CalServerToBlmMsg() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.CalServerToBlmMsg)
  SharedDtor();
}

void CalServerToBlmMsg::SharedDtor() {
  cal_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CalServerToBlmMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalServerToBlmMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalServerToBlmMsg_descriptor_;
}

const CalServerToBlmMsg& CalServerToBlmMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBagLifecycle_2eproto();
  return *default_instance_;
}

CalServerToBlmMsg* CalServerToBlmMsg::default_instance_ = NULL;

CalServerToBlmMsg* CalServerToBlmMsg::New(::google::protobuf::Arena* arena) const {
  CalServerToBlmMsg* n = new CalServerToBlmMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalServerToBlmMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.CalServerToBlmMsg)
  id_ = 0;
  cal_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CalServerToBlmMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.CalServerToBlmMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.CalServerToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cal_time;
        break;
      }

      // optional string cal_time = 2;
      case 2: {
        if (tag == 18) {
         parse_cal_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cal_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cal_time().data(), this->cal_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.CalServerToBlmMsg.cal_time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.CalServerToBlmMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.CalServerToBlmMsg)
  return false;
#undef DO_
}

void CalServerToBlmMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.CalServerToBlmMsg)
  // optional .analogic.ancp00.CalServerToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // optional string cal_time = 2;
  if (this->cal_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cal_time().data(), this->cal_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.CalServerToBlmMsg.cal_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cal_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.CalServerToBlmMsg)
}

::google::protobuf::uint8* CalServerToBlmMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.CalServerToBlmMsg)
  // optional .analogic.ancp00.CalServerToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // optional string cal_time = 2;
  if (this->cal_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cal_time().data(), this->cal_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.CalServerToBlmMsg.cal_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cal_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.CalServerToBlmMsg)
  return target;
}

int CalServerToBlmMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.CalServerToBlmMsg)
  int total_size = 0;

  // optional .analogic.ancp00.CalServerToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // optional string cal_time = 2;
  if (this->cal_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cal_time());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalServerToBlmMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.CalServerToBlmMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CalServerToBlmMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CalServerToBlmMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.CalServerToBlmMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.CalServerToBlmMsg)
    MergeFrom(*source);
  }
}

void CalServerToBlmMsg::MergeFrom(const CalServerToBlmMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.CalServerToBlmMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.cal_time().size() > 0) {

    cal_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cal_time_);
  }
}

void CalServerToBlmMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.CalServerToBlmMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalServerToBlmMsg::CopyFrom(const CalServerToBlmMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.CalServerToBlmMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalServerToBlmMsg::IsInitialized() const {

  return true;
}

void CalServerToBlmMsg::Swap(CalServerToBlmMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalServerToBlmMsg::InternalSwap(CalServerToBlmMsg* other) {
  std::swap(id_, other->id_);
  cal_time_.Swap(&other->cal_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalServerToBlmMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CalServerToBlmMsg_descriptor_;
  metadata.reflection = CalServerToBlmMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalServerToBlmMsg

// optional .analogic.ancp00.CalServerToBlmMsg.CAL_SERVER_TO_BLM_CMD_ID id = 1;
void CalServerToBlmMsg::clear_id() {
  id_ = 0;
}
 ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID CalServerToBlmMsg::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.CalServerToBlmMsg.id)
  return static_cast< ::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID >(id_);
}
 void CalServerToBlmMsg::set_id(::analogic::ancp00::CalServerToBlmMsg_CAL_SERVER_TO_BLM_CMD_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.CalServerToBlmMsg.id)
}

// optional string cal_time = 2;
void CalServerToBlmMsg::clear_cal_time() {
  cal_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CalServerToBlmMsg::cal_time() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.CalServerToBlmMsg.cal_time)
  return cal_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CalServerToBlmMsg::set_cal_time(const ::std::string& value) {
  
  cal_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.CalServerToBlmMsg.cal_time)
}
 void CalServerToBlmMsg::set_cal_time(const char* value) {
  
  cal_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.CalServerToBlmMsg.cal_time)
}
 void CalServerToBlmMsg::set_cal_time(const char* value, size_t size) {
  
  cal_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.CalServerToBlmMsg.cal_time)
}
 ::std::string* CalServerToBlmMsg::mutable_cal_time() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.CalServerToBlmMsg.cal_time)
  return cal_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CalServerToBlmMsg::release_cal_time() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.CalServerToBlmMsg.cal_time)
  
  return cal_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CalServerToBlmMsg::set_allocated_cal_time(::std::string* cal_time) {
  if (cal_time != NULL) {
    
  } else {
    
  }
  cal_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cal_time);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.CalServerToBlmMsg.cal_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ancp00
}  // namespace analogic

// @@protoc_insertion_point(global_scope)
