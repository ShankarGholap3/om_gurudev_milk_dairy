// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/Bhs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/Bhs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace analogic {
namespace ancp00 {

namespace {

const ::google::protobuf::Descriptor* BhsIntfMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BhsIntfMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BhsIntfMessage_BHS_INTF_COMMAND_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BagStatusUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BagStatusUpdate_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BagStatusUpdate_BAG_DISPOSITION_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BhsBagInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BhsBagInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BhsEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BhsEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BhsEvent_BHS_EVENT_ID_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BhsStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BhsStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fBhs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2fBhs_2eproto() {
  protobuf_AddDesc_proto_2fBhs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/Bhs.proto");
  GOOGLE_CHECK(file != NULL);
  BhsIntfMessage_descriptor_ = file->message_type(0);
  static const int BhsIntfMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsIntfMessage, cmd_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsIntfMessage, bag_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsIntfMessage, bag_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsIntfMessage, bhs_bag_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsIntfMessage, algorithm_),
  };
  BhsIntfMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BhsIntfMessage_descriptor_,
      BhsIntfMessage::default_instance_,
      BhsIntfMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(BhsIntfMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsIntfMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsIntfMessage, _is_default_instance_));
  BhsIntfMessage_BHS_INTF_COMMAND_descriptor_ = BhsIntfMessage_descriptor_->enum_type(0);
  BagStatusUpdate_descriptor_ = file->message_type(1);
  static const int BagStatusUpdate_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, bag_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, conveyor_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, bag_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, bhs_bag_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, machine_decision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, laptop_decision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, weapon_decision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, pvs_decision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, sws_decision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, op_test_decision_),
  };
  BagStatusUpdate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BagStatusUpdate_descriptor_,
      BagStatusUpdate::default_instance_,
      BagStatusUpdate_offsets_,
      -1,
      -1,
      -1,
      sizeof(BagStatusUpdate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagStatusUpdate, _is_default_instance_));
  BagStatusUpdate_BAG_DISPOSITION_descriptor_ = BagStatusUpdate_descriptor_->enum_type(0);
  BhsBagInfo_descriptor_ = file->message_type(2);
  static const int BhsBagInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsBagInfo, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsBagInfo, value_),
  };
  BhsBagInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BhsBagInfo_descriptor_,
      BhsBagInfo::default_instance_,
      BhsBagInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(BhsBagInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsBagInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsBagInfo, _is_default_instance_));
  BhsEvent_descriptor_ = file->message_type(3);
  static const int BhsEvent_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsEvent, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsEvent, bhs_bag_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsEvent, vendor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsEvent, vendor_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsEvent, bag_info_),
  };
  BhsEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BhsEvent_descriptor_,
      BhsEvent::default_instance_,
      BhsEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(BhsEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsEvent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsEvent, _is_default_instance_));
  BhsEvent_BHS_EVENT_ID_descriptor_ = BhsEvent_descriptor_->enum_type(0);
  BhsStatus_descriptor_ = file->message_type(4);
  static const int BhsStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsStatus, rtr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsStatus, rts_),
  };
  BhsStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BhsStatus_descriptor_,
      BhsStatus::default_instance_,
      BhsStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(BhsStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsStatus, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BhsStatus, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fBhs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BhsIntfMessage_descriptor_, &BhsIntfMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BagStatusUpdate_descriptor_, &BagStatusUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BhsBagInfo_descriptor_, &BhsBagInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BhsEvent_descriptor_, &BhsEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BhsStatus_descriptor_, &BhsStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fBhs_2eproto() {
  delete BhsIntfMessage::default_instance_;
  delete BhsIntfMessage_reflection_;
  delete BagStatusUpdate::default_instance_;
  delete BagStatusUpdate_reflection_;
  delete BhsBagInfo::default_instance_;
  delete BhsBagInfo_reflection_;
  delete BhsEvent::default_instance_;
  delete BhsEvent_reflection_;
  delete BhsStatus::default_instance_;
  delete BhsStatus_reflection_;
}

void protobuf_AddDesc_proto_2fBhs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2fBhs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017proto/Bhs.proto\022\017analogic.ancp00\"\256\002\n\016B"
    "hsIntfMessage\022@\n\006cmd_id\030\001 \001(\01620.analogic"
    ".ancp00.BhsIntfMessage.BHS_INTF_COMMAND\022"
    "\021\n\tbag_index\030\002 \001(\004\022\016\n\006bag_id\030\003 \001(\t\022\022\n\nbh"
    "s_bag_id\030\004 \001(\t\022\021\n\talgorithm\030\005 \001(\t\"\217\001\n\020BH"
    "S_INTF_COMMAND\022\021\n\rGET_ALGORITHM\020\000\022\021\n\rSET"
    "_ALGORITHM\020\001\022\020\n\014LINK_BAG_REQ\020\002\022\022\n\016LINK_B"
    "AG_REPLY\020\003\022\022\n\016BAG_STATUS_REQ\020\004\022\033\n\027BAG_PI"
    "CKUP_NOTIFICATION\020\005\"\315\005\n\017BagStatusUpdate\022"
    "\021\n\tbag_index\030\001 \001(\004\022\024\n\014conveyor_pos\030\002 \001(\004"
    "\022\016\n\006bag_id\030\003 \001(\t\022\022\n\nbhs_bag_id\030\004 \001(\t\022J\n\020"
    "machine_decision\030\005 \001(\01620.analogic.ancp00"
    ".BagStatusUpdate.BAG_DISPOSITION\022I\n\017lapt"
    "op_decision\030\006 \001(\01620.analogic.ancp00.BagS"
    "tatusUpdate.BAG_DISPOSITION\022I\n\017weapon_de"
    "cision\030\007 \001(\01620.analogic.ancp00.BagStatus"
    "Update.BAG_DISPOSITION\022F\n\014pvs_decision\030\010"
    " \001(\01620.analogic.ancp00.BagStatusUpdate.B"
    "AG_DISPOSITION\022F\n\014sws_decision\030\t \001(\01620.a"
    "nalogic.ancp00.BagStatusUpdate.BAG_DISPO"
    "SITION\022J\n\020op_test_decision\030\n \001(\01620.analo"
    "gic.ancp00.BagStatusUpdate.BAG_DISPOSITI"
    "ON\"\256\001\n\017BAG_DISPOSITION\022\027\n\023UNKNOWN_DISPOS"
    "ITION\020\000\022\t\n\005ALARM\020\001\022\t\n\005CLEAR\020\002\022\n\n\006SEARCH\020"
    "\003\022\n\n\006RETAIN\020\004\022\013\n\007TIMEOUT\020\005\022\024\n\020BAG_NOT_AN"
    "ALYZED\020\006\022\017\n\013UNPROCESSED\020\t\022\017\n\013HIGH_THREAT"
    "\020\n\022\017\n\013AUTO_REJECT\020\013\"(\n\nBhsBagInfo\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\364\002\n\010BhsEvent\0222\n\002id"
    "\030\001 \001(\0162&.analogic.ancp00.BhsEvent.BHS_EV"
    "ENT_ID\022\022\n\nbhs_bag_id\030\002 \001(\t\022\021\n\tvendor_id\030"
    "\003 \001(\t\022\023\n\013vendor_data\030\004 \001(\t\022-\n\010bag_info\030\005"
    " \003(\0132\033.analogic.ancp00.BhsBagInfo\"\310\001\n\014BH"
    "S_EVENT_ID\022\022\n\016BAG_NULL_EVENT\020\000\022\034\n\030BAG_DI"
    "VERTER_CLEAR_EVENT\020\001\022\035\n\031BAG_DIVERTER_SEA"
    "RCH_EVENT\020\002\022\026\n\022BAG_ADD_INFO_EVENT\020\003\022\033\n\027B"
    "AG_INFO_FINISHED_EVENT\020\004\022\026\n\022BAG_PICKUP_R"
    "EQUEST\020\005\022\032\n\026INVALIDATE_BAG_REQUEST\020\006\"%\n\t"
    "BhsStatus\022\013\n\003rtr\030\001 \001(\010\022\013\n\003rts\030\002 \001(\010b\006pro"
    "to3", 1523);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/Bhs.proto", &protobuf_RegisterTypes);
  BhsIntfMessage::default_instance_ = new BhsIntfMessage();
  BagStatusUpdate::default_instance_ = new BagStatusUpdate();
  BhsBagInfo::default_instance_ = new BhsBagInfo();
  BhsEvent::default_instance_ = new BhsEvent();
  BhsStatus::default_instance_ = new BhsStatus();
  BhsIntfMessage::default_instance_->InitAsDefaultInstance();
  BagStatusUpdate::default_instance_->InitAsDefaultInstance();
  BhsBagInfo::default_instance_->InitAsDefaultInstance();
  BhsEvent::default_instance_->InitAsDefaultInstance();
  BhsStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fBhs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fBhs_2eproto {
  StaticDescriptorInitializer_proto_2fBhs_2eproto() {
    protobuf_AddDesc_proto_2fBhs_2eproto();
  }
} static_descriptor_initializer_proto_2fBhs_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* BhsIntfMessage_BHS_INTF_COMMAND_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BhsIntfMessage_BHS_INTF_COMMAND_descriptor_;
}
bool BhsIntfMessage_BHS_INTF_COMMAND_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::GET_ALGORITHM;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::SET_ALGORITHM;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::LINK_BAG_REQ;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::LINK_BAG_REPLY;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::BAG_STATUS_REQ;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::BAG_PICKUP_NOTIFICATION;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::BHS_INTF_COMMAND_MIN;
const BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::BHS_INTF_COMMAND_MAX;
const int BhsIntfMessage::BHS_INTF_COMMAND_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BhsIntfMessage::kCmdIdFieldNumber;
const int BhsIntfMessage::kBagIndexFieldNumber;
const int BhsIntfMessage::kBagIdFieldNumber;
const int BhsIntfMessage::kBhsBagIdFieldNumber;
const int BhsIntfMessage::kAlgorithmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BhsIntfMessage::BhsIntfMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BhsIntfMessage)
}

void BhsIntfMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BhsIntfMessage::BhsIntfMessage(const BhsIntfMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BhsIntfMessage)
}

void BhsIntfMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmd_id_ = 0;
  bag_index_ = GOOGLE_ULONGLONG(0);
  bag_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bhs_bag_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BhsIntfMessage::~BhsIntfMessage() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BhsIntfMessage)
  SharedDtor();
}

void BhsIntfMessage::SharedDtor() {
  bag_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bhs_bag_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BhsIntfMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BhsIntfMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BhsIntfMessage_descriptor_;
}

const BhsIntfMessage& BhsIntfMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBhs_2eproto();
  return *default_instance_;
}

BhsIntfMessage* BhsIntfMessage::default_instance_ = NULL;

BhsIntfMessage* BhsIntfMessage::New(::google::protobuf::Arena* arena) const {
  BhsIntfMessage* n = new BhsIntfMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BhsIntfMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BhsIntfMessage)
  cmd_id_ = 0;
  bag_index_ = GOOGLE_ULONGLONG(0);
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BhsIntfMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BhsIntfMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.BhsIntfMessage.BHS_INTF_COMMAND cmd_id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_id(static_cast< ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bag_index;
        break;
      }

      // optional uint64 bag_index = 2;
      case 2: {
        if (tag == 16) {
         parse_bag_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bag_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bag_id;
        break;
      }

      // optional string bag_id = 3;
      case 3: {
        if (tag == 26) {
         parse_bag_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bag_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bag_id().data(), this->bag_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsIntfMessage.bag_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bhs_bag_id;
        break;
      }

      // optional string bhs_bag_id = 4;
      case 4: {
        if (tag == 34) {
         parse_bhs_bag_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bhs_bag_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bhs_bag_id().data(), this->bhs_bag_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsIntfMessage.bhs_bag_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_algorithm;
        break;
      }

      // optional string algorithm = 5;
      case 5: {
        if (tag == 42) {
         parse_algorithm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithm()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithm().data(), this->algorithm().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsIntfMessage.algorithm"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BhsIntfMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BhsIntfMessage)
  return false;
#undef DO_
}

void BhsIntfMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BhsIntfMessage)
  // optional .analogic.ancp00.BhsIntfMessage.BHS_INTF_COMMAND cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_id(), output);
  }

  // optional uint64 bag_index = 2;
  if (this->bag_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bag_index(), output);
  }

  // optional string bag_id = 3;
  if (this->bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bag_id().data(), this->bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsIntfMessage.bag_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bag_id(), output);
  }

  // optional string bhs_bag_id = 4;
  if (this->bhs_bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bhs_bag_id().data(), this->bhs_bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsIntfMessage.bhs_bag_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bhs_bag_id(), output);
  }

  // optional string algorithm = 5;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), this->algorithm().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsIntfMessage.algorithm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->algorithm(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BhsIntfMessage)
}

::google::protobuf::uint8* BhsIntfMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BhsIntfMessage)
  // optional .analogic.ancp00.BhsIntfMessage.BHS_INTF_COMMAND cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_id(), target);
  }

  // optional uint64 bag_index = 2;
  if (this->bag_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bag_index(), target);
  }

  // optional string bag_id = 3;
  if (this->bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bag_id().data(), this->bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsIntfMessage.bag_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bag_id(), target);
  }

  // optional string bhs_bag_id = 4;
  if (this->bhs_bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bhs_bag_id().data(), this->bhs_bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsIntfMessage.bhs_bag_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bhs_bag_id(), target);
  }

  // optional string algorithm = 5;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), this->algorithm().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsIntfMessage.algorithm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->algorithm(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BhsIntfMessage)
  return target;
}

int BhsIntfMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BhsIntfMessage)
  int total_size = 0;

  // optional .analogic.ancp00.BhsIntfMessage.BHS_INTF_COMMAND cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_id());
  }

  // optional uint64 bag_index = 2;
  if (this->bag_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bag_index());
  }

  // optional string bag_id = 3;
  if (this->bag_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bag_id());
  }

  // optional string bhs_bag_id = 4;
  if (this->bhs_bag_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bhs_bag_id());
  }

  // optional string algorithm = 5;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithm());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BhsIntfMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BhsIntfMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BhsIntfMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BhsIntfMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BhsIntfMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BhsIntfMessage)
    MergeFrom(*source);
  }
}

void BhsIntfMessage::MergeFrom(const BhsIntfMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BhsIntfMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.bag_index() != 0) {
    set_bag_index(from.bag_index());
  }
  if (from.bag_id().size() > 0) {

    bag_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bag_id_);
  }
  if (from.bhs_bag_id().size() > 0) {

    bhs_bag_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bhs_bag_id_);
  }
  if (from.algorithm().size() > 0) {

    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
}

void BhsIntfMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BhsIntfMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BhsIntfMessage::CopyFrom(const BhsIntfMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BhsIntfMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BhsIntfMessage::IsInitialized() const {

  return true;
}

void BhsIntfMessage::Swap(BhsIntfMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BhsIntfMessage::InternalSwap(BhsIntfMessage* other) {
  std::swap(cmd_id_, other->cmd_id_);
  std::swap(bag_index_, other->bag_index_);
  bag_id_.Swap(&other->bag_id_);
  bhs_bag_id_.Swap(&other->bhs_bag_id_);
  algorithm_.Swap(&other->algorithm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BhsIntfMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BhsIntfMessage_descriptor_;
  metadata.reflection = BhsIntfMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BhsIntfMessage

// optional .analogic.ancp00.BhsIntfMessage.BHS_INTF_COMMAND cmd_id = 1;
void BhsIntfMessage::clear_cmd_id() {
  cmd_id_ = 0;
}
 ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND BhsIntfMessage::cmd_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.cmd_id)
  return static_cast< ::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND >(cmd_id_);
}
 void BhsIntfMessage::set_cmd_id(::analogic::ancp00::BhsIntfMessage_BHS_INTF_COMMAND value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.cmd_id)
}

// optional uint64 bag_index = 2;
void BhsIntfMessage::clear_bag_index() {
  bag_index_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BhsIntfMessage::bag_index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.bag_index)
  return bag_index_;
}
 void BhsIntfMessage::set_bag_index(::google::protobuf::uint64 value) {
  
  bag_index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.bag_index)
}

// optional string bag_id = 3;
void BhsIntfMessage::clear_bag_id() {
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsIntfMessage::bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.bag_id)
  return bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsIntfMessage::set_bag_id(const ::std::string& value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.bag_id)
}
 void BhsIntfMessage::set_bag_id(const char* value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsIntfMessage.bag_id)
}
 void BhsIntfMessage::set_bag_id(const char* value, size_t size) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsIntfMessage.bag_id)
}
 ::std::string* BhsIntfMessage::mutable_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsIntfMessage.bag_id)
  return bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsIntfMessage::release_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsIntfMessage.bag_id)
  
  return bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsIntfMessage::set_allocated_bag_id(::std::string* bag_id) {
  if (bag_id != NULL) {
    
  } else {
    
  }
  bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsIntfMessage.bag_id)
}

// optional string bhs_bag_id = 4;
void BhsIntfMessage::clear_bhs_bag_id() {
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsIntfMessage::bhs_bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
  return bhs_bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsIntfMessage::set_bhs_bag_id(const ::std::string& value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}
 void BhsIntfMessage::set_bhs_bag_id(const char* value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}
 void BhsIntfMessage::set_bhs_bag_id(const char* value, size_t size) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}
 ::std::string* BhsIntfMessage::mutable_bhs_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
  return bhs_bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsIntfMessage::release_bhs_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
  
  return bhs_bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsIntfMessage::set_allocated_bhs_bag_id(::std::string* bhs_bag_id) {
  if (bhs_bag_id != NULL) {
    
  } else {
    
  }
  bhs_bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bhs_bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsIntfMessage.bhs_bag_id)
}

// optional string algorithm = 5;
void BhsIntfMessage::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsIntfMessage::algorithm() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsIntfMessage.algorithm)
  return algorithm_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsIntfMessage::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsIntfMessage.algorithm)
}
 void BhsIntfMessage::set_algorithm(const char* value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsIntfMessage.algorithm)
}
 void BhsIntfMessage::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsIntfMessage.algorithm)
}
 ::std::string* BhsIntfMessage::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsIntfMessage.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsIntfMessage::release_algorithm() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsIntfMessage.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsIntfMessage::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsIntfMessage.algorithm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BagStatusUpdate_BAG_DISPOSITION_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagStatusUpdate_BAG_DISPOSITION_descriptor_;
}
bool BagStatusUpdate_BAG_DISPOSITION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::UNKNOWN_DISPOSITION;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::ALARM;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::CLEAR;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::SEARCH;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::RETAIN;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::TIMEOUT;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::BAG_NOT_ANALYZED;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::UNPROCESSED;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::HIGH_THREAT;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::AUTO_REJECT;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::BAG_DISPOSITION_MIN;
const BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::BAG_DISPOSITION_MAX;
const int BagStatusUpdate::BAG_DISPOSITION_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagStatusUpdate::kBagIndexFieldNumber;
const int BagStatusUpdate::kConveyorPosFieldNumber;
const int BagStatusUpdate::kBagIdFieldNumber;
const int BagStatusUpdate::kBhsBagIdFieldNumber;
const int BagStatusUpdate::kMachineDecisionFieldNumber;
const int BagStatusUpdate::kLaptopDecisionFieldNumber;
const int BagStatusUpdate::kWeaponDecisionFieldNumber;
const int BagStatusUpdate::kPvsDecisionFieldNumber;
const int BagStatusUpdate::kSwsDecisionFieldNumber;
const int BagStatusUpdate::kOpTestDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagStatusUpdate::BagStatusUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BagStatusUpdate)
}

void BagStatusUpdate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BagStatusUpdate::BagStatusUpdate(const BagStatusUpdate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BagStatusUpdate)
}

void BagStatusUpdate::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bag_index_ = GOOGLE_ULONGLONG(0);
  conveyor_pos_ = GOOGLE_ULONGLONG(0);
  bag_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bhs_bag_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_decision_ = 0;
  laptop_decision_ = 0;
  weapon_decision_ = 0;
  pvs_decision_ = 0;
  sws_decision_ = 0;
  op_test_decision_ = 0;
}

BagStatusUpdate::~BagStatusUpdate() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BagStatusUpdate)
  SharedDtor();
}

void BagStatusUpdate::SharedDtor() {
  bag_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bhs_bag_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BagStatusUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagStatusUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BagStatusUpdate_descriptor_;
}

const BagStatusUpdate& BagStatusUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBhs_2eproto();
  return *default_instance_;
}

BagStatusUpdate* BagStatusUpdate::default_instance_ = NULL;

BagStatusUpdate* BagStatusUpdate::New(::google::protobuf::Arena* arena) const {
  BagStatusUpdate* n = new BagStatusUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagStatusUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BagStatusUpdate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BagStatusUpdate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BagStatusUpdate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bag_index_, conveyor_pos_);
  ZR_(machine_decision_, pvs_decision_);
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(sws_decision_, op_test_decision_);

#undef ZR_HELPER_
#undef ZR_

}

bool BagStatusUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BagStatusUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 bag_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bag_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_conveyor_pos;
        break;
      }

      // optional uint64 conveyor_pos = 2;
      case 2: {
        if (tag == 16) {
         parse_conveyor_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conveyor_pos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bag_id;
        break;
      }

      // optional string bag_id = 3;
      case 3: {
        if (tag == 26) {
         parse_bag_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bag_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bag_id().data(), this->bag_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BagStatusUpdate.bag_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bhs_bag_id;
        break;
      }

      // optional string bhs_bag_id = 4;
      case 4: {
        if (tag == 34) {
         parse_bhs_bag_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bhs_bag_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bhs_bag_id().data(), this->bhs_bag_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BagStatusUpdate.bhs_bag_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_machine_decision;
        break;
      }

      // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION machine_decision = 5;
      case 5: {
        if (tag == 40) {
         parse_machine_decision:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_machine_decision(static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_laptop_decision;
        break;
      }

      // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION laptop_decision = 6;
      case 6: {
        if (tag == 48) {
         parse_laptop_decision:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_laptop_decision(static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_weapon_decision;
        break;
      }

      // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION weapon_decision = 7;
      case 7: {
        if (tag == 56) {
         parse_weapon_decision:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_weapon_decision(static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_pvs_decision;
        break;
      }

      // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION pvs_decision = 8;
      case 8: {
        if (tag == 64) {
         parse_pvs_decision:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pvs_decision(static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_sws_decision;
        break;
      }

      // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION sws_decision = 9;
      case 9: {
        if (tag == 72) {
         parse_sws_decision:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sws_decision(static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_op_test_decision;
        break;
      }

      // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION op_test_decision = 10;
      case 10: {
        if (tag == 80) {
         parse_op_test_decision:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_test_decision(static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BagStatusUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BagStatusUpdate)
  return false;
#undef DO_
}

void BagStatusUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BagStatusUpdate)
  // optional uint64 bag_index = 1;
  if (this->bag_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->bag_index(), output);
  }

  // optional uint64 conveyor_pos = 2;
  if (this->conveyor_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->conveyor_pos(), output);
  }

  // optional string bag_id = 3;
  if (this->bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bag_id().data(), this->bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BagStatusUpdate.bag_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bag_id(), output);
  }

  // optional string bhs_bag_id = 4;
  if (this->bhs_bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bhs_bag_id().data(), this->bhs_bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BagStatusUpdate.bhs_bag_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bhs_bag_id(), output);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION machine_decision = 5;
  if (this->machine_decision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->machine_decision(), output);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION laptop_decision = 6;
  if (this->laptop_decision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->laptop_decision(), output);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION weapon_decision = 7;
  if (this->weapon_decision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->weapon_decision(), output);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION pvs_decision = 8;
  if (this->pvs_decision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->pvs_decision(), output);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION sws_decision = 9;
  if (this->sws_decision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->sws_decision(), output);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION op_test_decision = 10;
  if (this->op_test_decision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->op_test_decision(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BagStatusUpdate)
}

::google::protobuf::uint8* BagStatusUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BagStatusUpdate)
  // optional uint64 bag_index = 1;
  if (this->bag_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->bag_index(), target);
  }

  // optional uint64 conveyor_pos = 2;
  if (this->conveyor_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->conveyor_pos(), target);
  }

  // optional string bag_id = 3;
  if (this->bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bag_id().data(), this->bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BagStatusUpdate.bag_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bag_id(), target);
  }

  // optional string bhs_bag_id = 4;
  if (this->bhs_bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bhs_bag_id().data(), this->bhs_bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BagStatusUpdate.bhs_bag_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bhs_bag_id(), target);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION machine_decision = 5;
  if (this->machine_decision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->machine_decision(), target);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION laptop_decision = 6;
  if (this->laptop_decision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->laptop_decision(), target);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION weapon_decision = 7;
  if (this->weapon_decision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->weapon_decision(), target);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION pvs_decision = 8;
  if (this->pvs_decision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->pvs_decision(), target);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION sws_decision = 9;
  if (this->sws_decision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->sws_decision(), target);
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION op_test_decision = 10;
  if (this->op_test_decision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->op_test_decision(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BagStatusUpdate)
  return target;
}

int BagStatusUpdate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BagStatusUpdate)
  int total_size = 0;

  // optional uint64 bag_index = 1;
  if (this->bag_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bag_index());
  }

  // optional uint64 conveyor_pos = 2;
  if (this->conveyor_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conveyor_pos());
  }

  // optional string bag_id = 3;
  if (this->bag_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bag_id());
  }

  // optional string bhs_bag_id = 4;
  if (this->bhs_bag_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bhs_bag_id());
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION machine_decision = 5;
  if (this->machine_decision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->machine_decision());
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION laptop_decision = 6;
  if (this->laptop_decision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->laptop_decision());
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION weapon_decision = 7;
  if (this->weapon_decision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->weapon_decision());
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION pvs_decision = 8;
  if (this->pvs_decision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pvs_decision());
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION sws_decision = 9;
  if (this->sws_decision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sws_decision());
  }

  // optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION op_test_decision = 10;
  if (this->op_test_decision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_test_decision());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagStatusUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BagStatusUpdate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BagStatusUpdate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BagStatusUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BagStatusUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BagStatusUpdate)
    MergeFrom(*source);
  }
}

void BagStatusUpdate::MergeFrom(const BagStatusUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BagStatusUpdate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.bag_index() != 0) {
    set_bag_index(from.bag_index());
  }
  if (from.conveyor_pos() != 0) {
    set_conveyor_pos(from.conveyor_pos());
  }
  if (from.bag_id().size() > 0) {

    bag_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bag_id_);
  }
  if (from.bhs_bag_id().size() > 0) {

    bhs_bag_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bhs_bag_id_);
  }
  if (from.machine_decision() != 0) {
    set_machine_decision(from.machine_decision());
  }
  if (from.laptop_decision() != 0) {
    set_laptop_decision(from.laptop_decision());
  }
  if (from.weapon_decision() != 0) {
    set_weapon_decision(from.weapon_decision());
  }
  if (from.pvs_decision() != 0) {
    set_pvs_decision(from.pvs_decision());
  }
  if (from.sws_decision() != 0) {
    set_sws_decision(from.sws_decision());
  }
  if (from.op_test_decision() != 0) {
    set_op_test_decision(from.op_test_decision());
  }
}

void BagStatusUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BagStatusUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagStatusUpdate::CopyFrom(const BagStatusUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BagStatusUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagStatusUpdate::IsInitialized() const {

  return true;
}

void BagStatusUpdate::Swap(BagStatusUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagStatusUpdate::InternalSwap(BagStatusUpdate* other) {
  std::swap(bag_index_, other->bag_index_);
  std::swap(conveyor_pos_, other->conveyor_pos_);
  bag_id_.Swap(&other->bag_id_);
  bhs_bag_id_.Swap(&other->bhs_bag_id_);
  std::swap(machine_decision_, other->machine_decision_);
  std::swap(laptop_decision_, other->laptop_decision_);
  std::swap(weapon_decision_, other->weapon_decision_);
  std::swap(pvs_decision_, other->pvs_decision_);
  std::swap(sws_decision_, other->sws_decision_);
  std::swap(op_test_decision_, other->op_test_decision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagStatusUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BagStatusUpdate_descriptor_;
  metadata.reflection = BagStatusUpdate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagStatusUpdate

// optional uint64 bag_index = 1;
void BagStatusUpdate::clear_bag_index() {
  bag_index_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BagStatusUpdate::bag_index() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.bag_index)
  return bag_index_;
}
 void BagStatusUpdate::set_bag_index(::google::protobuf::uint64 value) {
  
  bag_index_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.bag_index)
}

// optional uint64 conveyor_pos = 2;
void BagStatusUpdate::clear_conveyor_pos() {
  conveyor_pos_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BagStatusUpdate::conveyor_pos() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.conveyor_pos)
  return conveyor_pos_;
}
 void BagStatusUpdate::set_conveyor_pos(::google::protobuf::uint64 value) {
  
  conveyor_pos_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.conveyor_pos)
}

// optional string bag_id = 3;
void BagStatusUpdate::clear_bag_id() {
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BagStatusUpdate::bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.bag_id)
  return bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BagStatusUpdate::set_bag_id(const ::std::string& value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.bag_id)
}
 void BagStatusUpdate::set_bag_id(const char* value) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BagStatusUpdate.bag_id)
}
 void BagStatusUpdate::set_bag_id(const char* value, size_t size) {
  
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BagStatusUpdate.bag_id)
}
 ::std::string* BagStatusUpdate::mutable_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BagStatusUpdate.bag_id)
  return bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BagStatusUpdate::release_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BagStatusUpdate.bag_id)
  
  return bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BagStatusUpdate::set_allocated_bag_id(::std::string* bag_id) {
  if (bag_id != NULL) {
    
  } else {
    
  }
  bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BagStatusUpdate.bag_id)
}

// optional string bhs_bag_id = 4;
void BagStatusUpdate::clear_bhs_bag_id() {
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BagStatusUpdate::bhs_bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
  return bhs_bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BagStatusUpdate::set_bhs_bag_id(const ::std::string& value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}
 void BagStatusUpdate::set_bhs_bag_id(const char* value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}
 void BagStatusUpdate::set_bhs_bag_id(const char* value, size_t size) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}
 ::std::string* BagStatusUpdate::mutable_bhs_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
  return bhs_bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BagStatusUpdate::release_bhs_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
  
  return bhs_bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BagStatusUpdate::set_allocated_bhs_bag_id(::std::string* bhs_bag_id) {
  if (bhs_bag_id != NULL) {
    
  } else {
    
  }
  bhs_bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bhs_bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BagStatusUpdate.bhs_bag_id)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION machine_decision = 5;
void BagStatusUpdate::clear_machine_decision() {
  machine_decision_ = 0;
}
 ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::machine_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.machine_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(machine_decision_);
}
 void BagStatusUpdate::set_machine_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  machine_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.machine_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION laptop_decision = 6;
void BagStatusUpdate::clear_laptop_decision() {
  laptop_decision_ = 0;
}
 ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::laptop_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.laptop_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(laptop_decision_);
}
 void BagStatusUpdate::set_laptop_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  laptop_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.laptop_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION weapon_decision = 7;
void BagStatusUpdate::clear_weapon_decision() {
  weapon_decision_ = 0;
}
 ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::weapon_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.weapon_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(weapon_decision_);
}
 void BagStatusUpdate::set_weapon_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  weapon_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.weapon_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION pvs_decision = 8;
void BagStatusUpdate::clear_pvs_decision() {
  pvs_decision_ = 0;
}
 ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::pvs_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.pvs_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(pvs_decision_);
}
 void BagStatusUpdate::set_pvs_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  pvs_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.pvs_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION sws_decision = 9;
void BagStatusUpdate::clear_sws_decision() {
  sws_decision_ = 0;
}
 ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::sws_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.sws_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(sws_decision_);
}
 void BagStatusUpdate::set_sws_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  sws_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.sws_decision)
}

// optional .analogic.ancp00.BagStatusUpdate.BAG_DISPOSITION op_test_decision = 10;
void BagStatusUpdate::clear_op_test_decision() {
  op_test_decision_ = 0;
}
 ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION BagStatusUpdate::op_test_decision() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BagStatusUpdate.op_test_decision)
  return static_cast< ::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION >(op_test_decision_);
}
 void BagStatusUpdate::set_op_test_decision(::analogic::ancp00::BagStatusUpdate_BAG_DISPOSITION value) {
  
  op_test_decision_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BagStatusUpdate.op_test_decision)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BhsBagInfo::kKeyFieldNumber;
const int BhsBagInfo::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BhsBagInfo::BhsBagInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BhsBagInfo)
}

void BhsBagInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BhsBagInfo::BhsBagInfo(const BhsBagInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BhsBagInfo)
}

void BhsBagInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BhsBagInfo::~BhsBagInfo() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BhsBagInfo)
  SharedDtor();
}

void BhsBagInfo::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BhsBagInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BhsBagInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BhsBagInfo_descriptor_;
}

const BhsBagInfo& BhsBagInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBhs_2eproto();
  return *default_instance_;
}

BhsBagInfo* BhsBagInfo::default_instance_ = NULL;

BhsBagInfo* BhsBagInfo::New(::google::protobuf::Arena* arena) const {
  BhsBagInfo* n = new BhsBagInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BhsBagInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BhsBagInfo)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BhsBagInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BhsBagInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsBagInfo.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsBagInfo.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BhsBagInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BhsBagInfo)
  return false;
#undef DO_
}

void BhsBagInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BhsBagInfo)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsBagInfo.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsBagInfo.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BhsBagInfo)
}

::google::protobuf::uint8* BhsBagInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BhsBagInfo)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsBagInfo.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsBagInfo.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BhsBagInfo)
  return target;
}

int BhsBagInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BhsBagInfo)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BhsBagInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BhsBagInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BhsBagInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BhsBagInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BhsBagInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BhsBagInfo)
    MergeFrom(*source);
  }
}

void BhsBagInfo::MergeFrom(const BhsBagInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BhsBagInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void BhsBagInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BhsBagInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BhsBagInfo::CopyFrom(const BhsBagInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BhsBagInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BhsBagInfo::IsInitialized() const {

  return true;
}

void BhsBagInfo::Swap(BhsBagInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BhsBagInfo::InternalSwap(BhsBagInfo* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BhsBagInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BhsBagInfo_descriptor_;
  metadata.reflection = BhsBagInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BhsBagInfo

// optional string key = 1;
void BhsBagInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsBagInfo::key() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsBagInfo.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsBagInfo::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsBagInfo.key)
}
 void BhsBagInfo::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsBagInfo.key)
}
 void BhsBagInfo::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsBagInfo.key)
}
 ::std::string* BhsBagInfo::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsBagInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsBagInfo::release_key() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsBagInfo.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsBagInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsBagInfo.key)
}

// optional string value = 2;
void BhsBagInfo::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsBagInfo::value() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsBagInfo.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsBagInfo::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsBagInfo.value)
}
 void BhsBagInfo::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsBagInfo.value)
}
 void BhsBagInfo::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsBagInfo.value)
}
 ::std::string* BhsBagInfo::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsBagInfo.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsBagInfo::release_value() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsBagInfo.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsBagInfo::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsBagInfo.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* BhsEvent_BHS_EVENT_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BhsEvent_BHS_EVENT_ID_descriptor_;
}
bool BhsEvent_BHS_EVENT_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BhsEvent_BHS_EVENT_ID BhsEvent::BAG_NULL_EVENT;
const BhsEvent_BHS_EVENT_ID BhsEvent::BAG_DIVERTER_CLEAR_EVENT;
const BhsEvent_BHS_EVENT_ID BhsEvent::BAG_DIVERTER_SEARCH_EVENT;
const BhsEvent_BHS_EVENT_ID BhsEvent::BAG_ADD_INFO_EVENT;
const BhsEvent_BHS_EVENT_ID BhsEvent::BAG_INFO_FINISHED_EVENT;
const BhsEvent_BHS_EVENT_ID BhsEvent::BAG_PICKUP_REQUEST;
const BhsEvent_BHS_EVENT_ID BhsEvent::INVALIDATE_BAG_REQUEST;
const BhsEvent_BHS_EVENT_ID BhsEvent::BHS_EVENT_ID_MIN;
const BhsEvent_BHS_EVENT_ID BhsEvent::BHS_EVENT_ID_MAX;
const int BhsEvent::BHS_EVENT_ID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BhsEvent::kIdFieldNumber;
const int BhsEvent::kBhsBagIdFieldNumber;
const int BhsEvent::kVendorIdFieldNumber;
const int BhsEvent::kVendorDataFieldNumber;
const int BhsEvent::kBagInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BhsEvent::BhsEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BhsEvent)
}

void BhsEvent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BhsEvent::BhsEvent(const BhsEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BhsEvent)
}

void BhsEvent::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  bhs_bag_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BhsEvent::~BhsEvent() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BhsEvent)
  SharedDtor();
}

void BhsEvent::SharedDtor() {
  bhs_bag_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BhsEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BhsEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BhsEvent_descriptor_;
}

const BhsEvent& BhsEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBhs_2eproto();
  return *default_instance_;
}

BhsEvent* BhsEvent::default_instance_ = NULL;

BhsEvent* BhsEvent::New(::google::protobuf::Arena* arena) const {
  BhsEvent* n = new BhsEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BhsEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BhsEvent)
  id_ = 0;
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bag_info_.Clear();
}

bool BhsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BhsEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .analogic.ancp00.BhsEvent.BHS_EVENT_ID id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::analogic::ancp00::BhsEvent_BHS_EVENT_ID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bhs_bag_id;
        break;
      }

      // optional string bhs_bag_id = 2;
      case 2: {
        if (tag == 18) {
         parse_bhs_bag_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bhs_bag_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bhs_bag_id().data(), this->bhs_bag_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsEvent.bhs_bag_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_vendor_id;
        break;
      }

      // optional string vendor_id = 3;
      case 3: {
        if (tag == 26) {
         parse_vendor_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vendor_id().data(), this->vendor_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsEvent.vendor_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_vendor_data;
        break;
      }

      // optional string vendor_data = 4;
      case 4: {
        if (tag == 34) {
         parse_vendor_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vendor_data().data(), this->vendor_data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "analogic.ancp00.BhsEvent.vendor_data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bag_info;
        break;
      }

      // repeated .analogic.ancp00.BhsBagInfo bag_info = 5;
      case 5: {
        if (tag == 42) {
         parse_bag_info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_bag_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bag_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_bag_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BhsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BhsEvent)
  return false;
#undef DO_
}

void BhsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BhsEvent)
  // optional .analogic.ancp00.BhsEvent.BHS_EVENT_ID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // optional string bhs_bag_id = 2;
  if (this->bhs_bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bhs_bag_id().data(), this->bhs_bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsEvent.bhs_bag_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bhs_bag_id(), output);
  }

  // optional string vendor_id = 3;
  if (this->vendor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor_id().data(), this->vendor_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsEvent.vendor_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vendor_id(), output);
  }

  // optional string vendor_data = 4;
  if (this->vendor_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor_data().data(), this->vendor_data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsEvent.vendor_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vendor_data(), output);
  }

  // repeated .analogic.ancp00.BhsBagInfo bag_info = 5;
  for (unsigned int i = 0, n = this->bag_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bag_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BhsEvent)
}

::google::protobuf::uint8* BhsEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BhsEvent)
  // optional .analogic.ancp00.BhsEvent.BHS_EVENT_ID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // optional string bhs_bag_id = 2;
  if (this->bhs_bag_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bhs_bag_id().data(), this->bhs_bag_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsEvent.bhs_bag_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bhs_bag_id(), target);
  }

  // optional string vendor_id = 3;
  if (this->vendor_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor_id().data(), this->vendor_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsEvent.vendor_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vendor_id(), target);
  }

  // optional string vendor_data = 4;
  if (this->vendor_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor_data().data(), this->vendor_data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "analogic.ancp00.BhsEvent.vendor_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vendor_data(), target);
  }

  // repeated .analogic.ancp00.BhsBagInfo bag_info = 5;
  for (unsigned int i = 0, n = this->bag_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->bag_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BhsEvent)
  return target;
}

int BhsEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BhsEvent)
  int total_size = 0;

  // optional .analogic.ancp00.BhsEvent.BHS_EVENT_ID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // optional string bhs_bag_id = 2;
  if (this->bhs_bag_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bhs_bag_id());
  }

  // optional string vendor_id = 3;
  if (this->vendor_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vendor_id());
  }

  // optional string vendor_data = 4;
  if (this->vendor_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vendor_data());
  }

  // repeated .analogic.ancp00.BhsBagInfo bag_info = 5;
  total_size += 1 * this->bag_info_size();
  for (int i = 0; i < this->bag_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bag_info(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BhsEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BhsEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BhsEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BhsEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BhsEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BhsEvent)
    MergeFrom(*source);
  }
}

void BhsEvent::MergeFrom(const BhsEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BhsEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  bag_info_.MergeFrom(from.bag_info_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bhs_bag_id().size() > 0) {

    bhs_bag_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bhs_bag_id_);
  }
  if (from.vendor_id().size() > 0) {

    vendor_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_id_);
  }
  if (from.vendor_data().size() > 0) {

    vendor_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_data_);
  }
}

void BhsEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BhsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BhsEvent::CopyFrom(const BhsEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BhsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BhsEvent::IsInitialized() const {

  return true;
}

void BhsEvent::Swap(BhsEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BhsEvent::InternalSwap(BhsEvent* other) {
  std::swap(id_, other->id_);
  bhs_bag_id_.Swap(&other->bhs_bag_id_);
  vendor_id_.Swap(&other->vendor_id_);
  vendor_data_.Swap(&other->vendor_data_);
  bag_info_.UnsafeArenaSwap(&other->bag_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BhsEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BhsEvent_descriptor_;
  metadata.reflection = BhsEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BhsEvent

// optional .analogic.ancp00.BhsEvent.BHS_EVENT_ID id = 1;
void BhsEvent::clear_id() {
  id_ = 0;
}
 ::analogic::ancp00::BhsEvent_BHS_EVENT_ID BhsEvent::id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.id)
  return static_cast< ::analogic::ancp00::BhsEvent_BHS_EVENT_ID >(id_);
}
 void BhsEvent::set_id(::analogic::ancp00::BhsEvent_BHS_EVENT_ID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.id)
}

// optional string bhs_bag_id = 2;
void BhsEvent::clear_bhs_bag_id() {
  bhs_bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsEvent::bhs_bag_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.bhs_bag_id)
  return bhs_bag_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsEvent::set_bhs_bag_id(const ::std::string& value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.bhs_bag_id)
}
 void BhsEvent::set_bhs_bag_id(const char* value) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsEvent.bhs_bag_id)
}
 void BhsEvent::set_bhs_bag_id(const char* value, size_t size) {
  
  bhs_bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsEvent.bhs_bag_id)
}
 ::std::string* BhsEvent::mutable_bhs_bag_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.bhs_bag_id)
  return bhs_bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsEvent::release_bhs_bag_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsEvent.bhs_bag_id)
  
  return bhs_bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsEvent::set_allocated_bhs_bag_id(::std::string* bhs_bag_id) {
  if (bhs_bag_id != NULL) {
    
  } else {
    
  }
  bhs_bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bhs_bag_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsEvent.bhs_bag_id)
}

// optional string vendor_id = 3;
void BhsEvent::clear_vendor_id() {
  vendor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsEvent::vendor_id() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.vendor_id)
  return vendor_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsEvent::set_vendor_id(const ::std::string& value) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.vendor_id)
}
 void BhsEvent::set_vendor_id(const char* value) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsEvent.vendor_id)
}
 void BhsEvent::set_vendor_id(const char* value, size_t size) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsEvent.vendor_id)
}
 ::std::string* BhsEvent::mutable_vendor_id() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.vendor_id)
  return vendor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsEvent::release_vendor_id() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsEvent.vendor_id)
  
  return vendor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsEvent::set_allocated_vendor_id(::std::string* vendor_id) {
  if (vendor_id != NULL) {
    
  } else {
    
  }
  vendor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vendor_id);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsEvent.vendor_id)
}

// optional string vendor_data = 4;
void BhsEvent::clear_vendor_data() {
  vendor_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BhsEvent::vendor_data() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.vendor_data)
  return vendor_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsEvent::set_vendor_data(const ::std::string& value) {
  
  vendor_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsEvent.vendor_data)
}
 void BhsEvent::set_vendor_data(const char* value) {
  
  vendor_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:analogic.ancp00.BhsEvent.vendor_data)
}
 void BhsEvent::set_vendor_data(const char* value, size_t size) {
  
  vendor_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:analogic.ancp00.BhsEvent.vendor_data)
}
 ::std::string* BhsEvent::mutable_vendor_data() {
  
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.vendor_data)
  return vendor_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BhsEvent::release_vendor_data() {
  // @@protoc_insertion_point(field_release:analogic.ancp00.BhsEvent.vendor_data)
  
  return vendor_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BhsEvent::set_allocated_vendor_data(::std::string* vendor_data) {
  if (vendor_data != NULL) {
    
  } else {
    
  }
  vendor_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vendor_data);
  // @@protoc_insertion_point(field_set_allocated:analogic.ancp00.BhsEvent.vendor_data)
}

// repeated .analogic.ancp00.BhsBagInfo bag_info = 5;
int BhsEvent::bag_info_size() const {
  return bag_info_.size();
}
void BhsEvent::clear_bag_info() {
  bag_info_.Clear();
}
const ::analogic::ancp00::BhsBagInfo& BhsEvent::bag_info(int index) const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_.Get(index);
}
::analogic::ancp00::BhsBagInfo* BhsEvent::mutable_bag_info(int index) {
  // @@protoc_insertion_point(field_mutable:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_.Mutable(index);
}
::analogic::ancp00::BhsBagInfo* BhsEvent::add_bag_info() {
  // @@protoc_insertion_point(field_add:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::analogic::ancp00::BhsBagInfo >*
BhsEvent::mutable_bag_info() {
  // @@protoc_insertion_point(field_mutable_list:analogic.ancp00.BhsEvent.bag_info)
  return &bag_info_;
}
const ::google::protobuf::RepeatedPtrField< ::analogic::ancp00::BhsBagInfo >&
BhsEvent::bag_info() const {
  // @@protoc_insertion_point(field_list:analogic.ancp00.BhsEvent.bag_info)
  return bag_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BhsStatus::kRtrFieldNumber;
const int BhsStatus::kRtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BhsStatus::BhsStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:analogic.ancp00.BhsStatus)
}

void BhsStatus::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BhsStatus::BhsStatus(const BhsStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:analogic.ancp00.BhsStatus)
}

void BhsStatus::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rtr_ = false;
  rts_ = false;
}

BhsStatus::~BhsStatus() {
  // @@protoc_insertion_point(destructor:analogic.ancp00.BhsStatus)
  SharedDtor();
}

void BhsStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BhsStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BhsStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BhsStatus_descriptor_;
}

const BhsStatus& BhsStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fBhs_2eproto();
  return *default_instance_;
}

BhsStatus* BhsStatus::default_instance_ = NULL;

BhsStatus* BhsStatus::New(::google::protobuf::Arena* arena) const {
  BhsStatus* n = new BhsStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BhsStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:analogic.ancp00.BhsStatus)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BhsStatus, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BhsStatus*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rtr_, rts_);

#undef ZR_HELPER_
#undef ZR_

}

bool BhsStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:analogic.ancp00.BhsStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool rtr = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rtr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rts;
        break;
      }

      // optional bool rts = 2;
      case 2: {
        if (tag == 16) {
         parse_rts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rts_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:analogic.ancp00.BhsStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:analogic.ancp00.BhsStatus)
  return false;
#undef DO_
}

void BhsStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:analogic.ancp00.BhsStatus)
  // optional bool rtr = 1;
  if (this->rtr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rtr(), output);
  }

  // optional bool rts = 2;
  if (this->rts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->rts(), output);
  }

  // @@protoc_insertion_point(serialize_end:analogic.ancp00.BhsStatus)
}

::google::protobuf::uint8* BhsStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:analogic.ancp00.BhsStatus)
  // optional bool rtr = 1;
  if (this->rtr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rtr(), target);
  }

  // optional bool rts = 2;
  if (this->rts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->rts(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:analogic.ancp00.BhsStatus)
  return target;
}

int BhsStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:analogic.ancp00.BhsStatus)
  int total_size = 0;

  // optional bool rtr = 1;
  if (this->rtr() != 0) {
    total_size += 1 + 1;
  }

  // optional bool rts = 2;
  if (this->rts() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BhsStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:analogic.ancp00.BhsStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BhsStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BhsStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:analogic.ancp00.BhsStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:analogic.ancp00.BhsStatus)
    MergeFrom(*source);
  }
}

void BhsStatus::MergeFrom(const BhsStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:analogic.ancp00.BhsStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rtr() != 0) {
    set_rtr(from.rtr());
  }
  if (from.rts() != 0) {
    set_rts(from.rts());
  }
}

void BhsStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:analogic.ancp00.BhsStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BhsStatus::CopyFrom(const BhsStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:analogic.ancp00.BhsStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BhsStatus::IsInitialized() const {

  return true;
}

void BhsStatus::Swap(BhsStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BhsStatus::InternalSwap(BhsStatus* other) {
  std::swap(rtr_, other->rtr_);
  std::swap(rts_, other->rts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BhsStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BhsStatus_descriptor_;
  metadata.reflection = BhsStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BhsStatus

// optional bool rtr = 1;
void BhsStatus::clear_rtr() {
  rtr_ = false;
}
 bool BhsStatus::rtr() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsStatus.rtr)
  return rtr_;
}
 void BhsStatus::set_rtr(bool value) {
  
  rtr_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsStatus.rtr)
}

// optional bool rts = 2;
void BhsStatus::clear_rts() {
  rts_ = false;
}
 bool BhsStatus::rts() const {
  // @@protoc_insertion_point(field_get:analogic.ancp00.BhsStatus.rts)
  return rts_;
}
 void BhsStatus::set_rts(bool value) {
  
  rts_ = value;
  // @@protoc_insertion_point(field_set:analogic.ancp00.BhsStatus.rts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ancp00
}  // namespace analogic

// @@protoc_insertion_point(global_scope)
